/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/aptos";
exports.ids = ["vendor-chunks/aptos"];
exports.modules = {

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js":
/*!******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/_assert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports[\"default\"] = assert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX2Fzc2VydC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsY0FBYyxHQUFHLFlBQVksR0FBRyxhQUFhLEdBQUcsWUFBWSxHQUFHLGNBQWM7QUFDOUY7QUFDQTtBQUNBLG1EQUFtRCxFQUFFO0FBQ3JEO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxpREFBaUQsRUFBRTtBQUNuRDtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxRQUFRLGtCQUFrQixTQUFTO0FBQ2hHO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsSUFBSTtBQUNyRjtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL19hc3NlcnQuanM/Mzk1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMub3V0cHV0ID0gZXhwb3J0cy5leGlzdHMgPSBleHBvcnRzLmhhc2ggPSBleHBvcnRzLmJ5dGVzID0gZXhwb3J0cy5ib29sID0gZXhwb3J0cy5udW1iZXIgPSB2b2lkIDA7XG5mdW5jdGlvbiBudW1iZXIobikge1xuICAgIGlmICghTnVtYmVyLmlzU2FmZUludGVnZXIobikgfHwgbiA8IDApXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgV3JvbmcgcG9zaXRpdmUgaW50ZWdlcjogJHtufWApO1xufVxuZXhwb3J0cy5udW1iZXIgPSBudW1iZXI7XG5mdW5jdGlvbiBib29sKGIpIHtcbiAgICBpZiAodHlwZW9mIGIgIT09ICdib29sZWFuJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBib29sZWFuLCBub3QgJHtifWApO1xufVxuZXhwb3J0cy5ib29sID0gYm9vbDtcbmZ1bmN0aW9uIGJ5dGVzKGIsIC4uLmxlbmd0aHMpIHtcbiAgICBpZiAoIShiIGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKTtcbiAgICBpZiAobGVuZ3Rocy5sZW5ndGggPiAwICYmICFsZW5ndGhzLmluY2x1ZGVzKGIubGVuZ3RoKSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgVWludDhBcnJheSBvZiBsZW5ndGggJHtsZW5ndGhzfSwgbm90IG9mIGxlbmd0aD0ke2IubGVuZ3RofWApO1xufVxuZXhwb3J0cy5ieXRlcyA9IGJ5dGVzO1xuZnVuY3Rpb24gaGFzaChoYXNoKSB7XG4gICAgaWYgKHR5cGVvZiBoYXNoICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBoYXNoLmNyZWF0ZSAhPT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoIHNob3VsZCBiZSB3cmFwcGVkIGJ5IHV0aWxzLndyYXBDb25zdHJ1Y3RvcicpO1xuICAgIG51bWJlcihoYXNoLm91dHB1dExlbik7XG4gICAgbnVtYmVyKGhhc2guYmxvY2tMZW4pO1xufVxuZXhwb3J0cy5oYXNoID0gaGFzaDtcbmZ1bmN0aW9uIGV4aXN0cyhpbnN0YW5jZSwgY2hlY2tGaW5pc2hlZCA9IHRydWUpIHtcbiAgICBpZiAoaW5zdGFuY2UuZGVzdHJveWVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggaW5zdGFuY2UgaGFzIGJlZW4gZGVzdHJveWVkJyk7XG4gICAgaWYgKGNoZWNrRmluaXNoZWQgJiYgaW5zdGFuY2UuZmluaXNoZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCNkaWdlc3QoKSBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZCcpO1xufVxuZXhwb3J0cy5leGlzdHMgPSBleGlzdHM7XG5mdW5jdGlvbiBvdXRwdXQob3V0LCBpbnN0YW5jZSkge1xuICAgIGJ5dGVzKG91dCk7XG4gICAgY29uc3QgbWluID0gaW5zdGFuY2Uub3V0cHV0TGVuO1xuICAgIGlmIChvdXQubGVuZ3RoIDwgbWluKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZGlnZXN0SW50bygpIGV4cGVjdHMgb3V0cHV0IGJ1ZmZlciBvZiBsZW5ndGggYXQgbGVhc3QgJHttaW59YCk7XG4gICAgfVxufVxuZXhwb3J0cy5vdXRwdXQgPSBvdXRwdXQ7XG5jb25zdCBhc3NlcnQgPSB7XG4gICAgbnVtYmVyLFxuICAgIGJvb2wsXG4gICAgYnl0ZXMsXG4gICAgaGFzaCxcbiAgICBleGlzdHMsXG4gICAgb3V0cHV0LFxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFzc2VydDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_sha2.js":
/*!****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/_sha2.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SHA2 = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3NoYTIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLHFCQUFxQixtQkFBTyxDQUFDLHNGQUFjO0FBQzNDLG1CQUFtQixtQkFBTyxDQUFDLGtGQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBLDBCQUEwQixVQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrQkFBK0I7QUFDL0MsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixjQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFxRDtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3NoYTIuanM/NTAzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU0hBMiA9IHZvaWQgMDtcbmNvbnN0IF9hc3NlcnRfanNfMSA9IHJlcXVpcmUoXCIuL19hc3NlcnQuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmNsYXNzIFNIQTIgZXh0ZW5kcyB1dGlsc19qc18xLkhhc2gge1xuICAgIGNvbnN0cnVjdG9yKGJsb2NrTGVuLCBvdXRwdXRMZW4sIHBhZE9mZnNldCwgaXNMRSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0aGlzLnBhZE9mZnNldCA9IHBhZE9mZnNldDtcbiAgICAgICAgdGhpcy5pc0xFID0gaXNMRTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIHRoaXMudmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKHRoaXMuYnVmZmVyKTtcbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuZXhpc3RzKHRoaXMpO1xuICAgICAgICBjb25zdCB7IHZpZXcsIGJ1ZmZlciwgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIGRhdGEgPSAoMCwgdXRpbHNfanNfMS50b0J5dGVzKShkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgLy8gRmFzdCBwYXRoOiB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBibG9jayBpbiBpbnB1dCwgY2FzdCBpdCB0byB2aWV3IGFuZCBwcm9jZXNzXG4gICAgICAgICAgICBpZiAodGFrZSA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhVmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKGRhdGEpO1xuICAgICAgICAgICAgICAgIGZvciAoOyBibG9ja0xlbiA8PSBsZW4gLSBwb3M7IHBvcyArPSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzKGRhdGFWaWV3LCBwb3MpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyLnNldChkYXRhLnN1YmFycmF5KHBvcywgcG9zICsgdGFrZSksIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvcyA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICB0aGlzLnJvdW5kQ2xlYW4oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIF9hc3NlcnRfanNfMS5kZWZhdWx0LmV4aXN0cyh0aGlzKTtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQub3V0cHV0KG91dCwgdGhpcyk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAvLyBQYWRkaW5nXG4gICAgICAgIC8vIFdlIGNhbiBhdm9pZCBhbGxvY2F0aW9uIG9mIGJ1ZmZlciBmb3IgcGFkZGluZyBjb21wbGV0ZWx5IGlmIGl0XG4gICAgICAgIC8vIHdhcyBwcmV2aW91c2x5IG5vdCBhbGxvY2F0ZWQgaGVyZS4gQnV0IGl0IHdvbid0IGNoYW5nZSBwZXJmb3JtYW5jZS5cbiAgICAgICAgY29uc3QgeyBidWZmZXIsIHZpZXcsIGJsb2NrTGVuLCBpc0xFIH0gPSB0aGlzO1xuICAgICAgICBsZXQgeyBwb3MgfSA9IHRoaXM7XG4gICAgICAgIC8vIGFwcGVuZCB0aGUgYml0ICcxJyB0byB0aGUgbWVzc2FnZVxuICAgICAgICBidWZmZXJbcG9zKytdID0gMGIxMDAwMDAwMDtcbiAgICAgICAgdGhpcy5idWZmZXIuc3ViYXJyYXkocG9zKS5maWxsKDApO1xuICAgICAgICAvLyB3ZSBoYXZlIGxlc3MgdGhhbiBwYWRPZmZzZXQgbGVmdCBpbiBidWZmZXIsIHNvIHdlIGNhbm5vdCBwdXQgbGVuZ3RoIGluIGN1cnJlbnQgYmxvY2ssIG5lZWQgcHJvY2VzcyBpdCBhbmQgcGFkIGFnYWluXG4gICAgICAgIGlmICh0aGlzLnBhZE9mZnNldCA+IGJsb2NrTGVuIC0gcG9zKSB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICBwb3MgPSAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIFBhZCB1bnRpbCBmdWxsIGJsb2NrIGJ5dGUgd2l0aCB6ZXJvc1xuICAgICAgICBmb3IgKGxldCBpID0gcG9zOyBpIDwgYmxvY2tMZW47IGkrKylcbiAgICAgICAgICAgIGJ1ZmZlcltpXSA9IDA7XG4gICAgICAgIC8vIE5vdGU6IHNoYTUxMiByZXF1aXJlcyBsZW5ndGggdG8gYmUgMTI4Yml0IGludGVnZXIsIGJ1dCBsZW5ndGggaW4gSlMgd2lsbCBvdmVyZmxvdyBiZWZvcmUgdGhhdFxuICAgICAgICAvLyBZb3UgbmVlZCB0byB3cml0ZSBhcm91bmQgMiBleGFieXRlcyAodTY0X21heCAvIDggLyAoMTAyNCoqNikpIGZvciB0aGlzIHRvIGhhcHBlbi5cbiAgICAgICAgLy8gU28gd2UganVzdCB3cml0ZSBsb3dlc3QgNjQgYml0cyBvZiB0aGF0IHZhbHVlLlxuICAgICAgICBzZXRCaWdVaW50NjQodmlldywgYmxvY2tMZW4gLSA4LCBCaWdJbnQodGhpcy5sZW5ndGggKiA4KSwgaXNMRSk7XG4gICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgY29uc3Qgb3ZpZXcgPSAoMCwgdXRpbHNfanNfMS5jcmVhdGVWaWV3KShvdXQpO1xuICAgICAgICB0aGlzLmdldCgpLmZvckVhY2goKHYsIGkpID0+IG92aWV3LnNldFVpbnQzMig0ICogaSwgdiwgaXNMRSkpO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIGNvbnN0IHsgYnVmZmVyLCBvdXRwdXRMZW4gfSA9IHRoaXM7XG4gICAgICAgIHRoaXMuZGlnZXN0SW50byhidWZmZXIpO1xuICAgICAgICBjb25zdCByZXMgPSBidWZmZXIuc2xpY2UoMCwgb3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgIF9jbG9uZUludG8odG8pIHtcbiAgICAgICAgdG8gfHwgKHRvID0gbmV3IHRoaXMuY29uc3RydWN0b3IoKSk7XG4gICAgICAgIHRvLnNldCguLi50aGlzLmdldCgpKTtcbiAgICAgICAgY29uc3QgeyBibG9ja0xlbiwgYnVmZmVyLCBsZW5ndGgsIGZpbmlzaGVkLCBkZXN0cm95ZWQsIHBvcyB9ID0gdGhpcztcbiAgICAgICAgdG8ubGVuZ3RoID0gbGVuZ3RoO1xuICAgICAgICB0by5wb3MgPSBwb3M7XG4gICAgICAgIHRvLmZpbmlzaGVkID0gZmluaXNoZWQ7XG4gICAgICAgIHRvLmRlc3Ryb3llZCA9IGRlc3Ryb3llZDtcbiAgICAgICAgaWYgKGxlbmd0aCAlIGJsb2NrTGVuKVxuICAgICAgICAgICAgdG8uYnVmZmVyLnNldChidWZmZXIpO1xuICAgICAgICByZXR1cm4gdG87XG4gICAgfVxufVxuZXhwb3J0cy5TSEEyID0gU0hBMjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_u64.js":
/*!***************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/_u64.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports[\"default\"] = u64;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3U2NC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxXQUFXLEdBQUcsYUFBYSxHQUFHLGFBQWEsR0FBRyxlQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEMsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3U2NC5qcz9hZGZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZGQgPSBleHBvcnRzLnRvQmlnID0gZXhwb3J0cy5zcGxpdCA9IGV4cG9ydHMuZnJvbUJpZyA9IHZvaWQgMDtcbmNvbnN0IFUzMl9NQVNLNjQgPSBCaWdJbnQoMiAqKiAzMiAtIDEpO1xuY29uc3QgXzMybiA9IEJpZ0ludCgzMik7XG4vLyBXZSBhcmUgbm90IHVzaW5nIEJpZ1VpbnQ2NEFycmF5LCBiZWNhdXNlIHRoZXkgYXJlIGV4dHJlbWVseSBzbG93IGFzIHBlciAyMDIyXG5mdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZXhwb3J0cy5mcm9tQmlnID0gZnJvbUJpZztcbmZ1bmN0aW9uIHNwbGl0KGxzdCwgbGUgPSBmYWxzZSkge1xuICAgIGxldCBBaCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBsZXQgQWwgPSBuZXcgVWludDMyQXJyYXkobHN0Lmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgeyBoLCBsIH0gPSBmcm9tQmlnKGxzdFtpXSwgbGUpO1xuICAgICAgICBbQWhbaV0sIEFsW2ldXSA9IFtoLCBsXTtcbiAgICB9XG4gICAgcmV0dXJuIFtBaCwgQWxdO1xufVxuZXhwb3J0cy5zcGxpdCA9IHNwbGl0O1xuY29uc3QgdG9CaWcgPSAoaCwgbCkgPT4gKEJpZ0ludChoID4+PiAwKSA8PCBfMzJuKSB8IEJpZ0ludChsID4+PiAwKTtcbmV4cG9ydHMudG9CaWcgPSB0b0JpZztcbi8vIGZvciBTaGlmdCBpbiBbMCwgMzIpXG5jb25zdCBzaHJTSCA9IChoLCBsLCBzKSA9PiBoID4+PiBzO1xuY29uc3Qgc2hyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RyU0ggPSAoaCwgbCwgcykgPT4gKGggPj4+IHMpIHwgKGwgPDwgKDMyIC0gcykpO1xuY29uc3Qgcm90clNMID0gKGgsIGwsIHMpID0+IChoIDw8ICgzMiAtIHMpKSB8IChsID4+PiBzKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdHJCSCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoNjQgLSBzKSkgfCAobCA+Pj4gKHMgLSAzMikpO1xuY29uc3Qgcm90ckJMID0gKGgsIGwsIHMpID0+IChoID4+PiAocyAtIDMyKSkgfCAobCA8PCAoNjQgLSBzKSk7XG4vLyBSaWdodCByb3RhdGUgZm9yIHNoaWZ0PT09MzIgKGp1c3Qgc3dhcHMgbCZoKVxuY29uc3Qgcm90cjMySCA9IChoLCBsKSA9PiBsO1xuY29uc3Qgcm90cjMyTCA9IChoLCBsKSA9PiBoO1xuLy8gTGVmdCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdGxTSCA9IChoLCBsLCBzKSA9PiAoaCA8PCBzKSB8IChsID4+PiAoMzIgLSBzKSk7XG5jb25zdCByb3RsU0wgPSAoaCwgbCwgcykgPT4gKGwgPDwgcykgfCAoaCA+Pj4gKDMyIC0gcykpO1xuLy8gTGVmdCByb3RhdGUgZm9yIFNoaWZ0IGluICgzMiwgNjQpLCBOT1RFOiAzMiBpcyBzcGVjaWFsIGNhc2UuXG5jb25zdCByb3RsQkggPSAoaCwgbCwgcykgPT4gKGwgPDwgKHMgLSAzMikpIHwgKGggPj4+ICg2NCAtIHMpKTtcbmNvbnN0IHJvdGxCTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAocyAtIDMyKSkgfCAobCA+Pj4gKDY0IC0gcykpO1xuLy8gSlMgdXNlcyAzMi1iaXQgc2lnbmVkIGludGVnZXJzIGZvciBiaXR3aXNlIG9wZXJhdGlvbnMgd2hpY2ggbWVhbnMgd2UgY2Fubm90XG4vLyBzaW1wbGUgdGFrZSBjYXJyeSBvdXQgb2YgbG93IGJpdCBzdW0gYnkgc2hpZnQsIHdlIG5lZWQgdG8gdXNlIGRpdmlzaW9uLlxuLy8gUmVtb3ZpbmcgXCJleHBvcnRcIiBoYXMgNSUgcGVyZiBwZW5hbHR5IC1fLVxuZnVuY3Rpb24gYWRkKEFoLCBBbCwgQmgsIEJsKSB7XG4gICAgY29uc3QgbCA9IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApO1xuICAgIHJldHVybiB7IGg6IChBaCArIEJoICsgKChsIC8gMiAqKiAzMikgfCAwKSkgfCAwLCBsOiBsIHwgMCB9O1xufVxuZXhwb3J0cy5hZGQgPSBhZGQ7XG4vLyBBZGRpdGlvbiB3aXRoIG1vcmUgdGhhbiAyIGVsZW1lbnRzXG5jb25zdCBhZGQzTCA9IChBbCwgQmwsIENsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCk7XG5jb25zdCBhZGQzSCA9IChsb3csIEFoLCBCaCwgQ2gpID0+IChBaCArIEJoICsgQ2ggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDRMID0gKEFsLCBCbCwgQ2wsIERsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApO1xuY29uc3QgYWRkNEggPSAobG93LCBBaCwgQmgsIENoLCBEaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ1TCA9IChBbCwgQmwsIENsLCBEbCwgRWwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCkgKyAoRWwgPj4+IDApO1xuY29uc3QgYWRkNUggPSAobG93LCBBaCwgQmgsIENoLCBEaCwgRWgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArIEVoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IHU2NCA9IHtcbiAgICBmcm9tQmlnLCBzcGxpdCwgdG9CaWc6IGV4cG9ydHMudG9CaWcsXG4gICAgc2hyU0gsIHNoclNMLFxuICAgIHJvdHJTSCwgcm90clNMLCByb3RyQkgsIHJvdHJCTCxcbiAgICByb3RyMzJILCByb3RyMzJMLFxuICAgIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCxcbiAgICBhZGQsIGFkZDNMLCBhZGQzSCwgYWRkNEwsIGFkZDRILCBhZGQ1SCwgYWRkNUwsXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gdTY0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_u64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/crypto.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/crypto.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.crypto = void 0;\nconst nodeCrypto = __webpack_require__(/*! crypto */ \"crypto\");\nexports.crypto = {\n    node: nodeCrypto,\n    web: undefined,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxtQkFBbUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNuQyxjQUFjO0FBQ2Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvY3J5cHRvLmpzPzFiODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyeXB0byA9IHZvaWQgMDtcbmNvbnN0IG5vZGVDcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuZXhwb3J0cy5jcnlwdG8gPSB7XG4gICAgbm9kZTogbm9kZUNyeXB0byxcbiAgICB3ZWI6IHVuZGVmaW5lZCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/hmac.js":
/*!***************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/hmac.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hmac = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvaG1hYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1oscUJBQXFCLG1CQUFPLENBQUMsc0ZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakUsZ0JBQWdCLHlEQUF5RDtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWixtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9obWFjLmpzPzk1ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhtYWMgPSB2b2lkIDA7XG5jb25zdCBfYXNzZXJ0X2pzXzEgPSByZXF1aXJlKFwiLi9fYXNzZXJ0LmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuLy8gSE1BQyAoUkZDIDIxMDQpXG5jbGFzcyBITUFDIGV4dGVuZHMgdXRpbHNfanNfMS5IYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoLCBfa2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuaGFzaChoYXNoKTtcbiAgICAgICAgY29uc3Qga2V5ID0gKDAsIHV0aWxzX2pzXzEudG9CeXRlcykoX2tleSk7XG4gICAgICAgIHRoaXMuaUhhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuaUhhc2gudXBkYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgaW5zdGFuY2Ugb2YgY2xhc3Mgd2hpY2ggZXh0ZW5kcyB1dGlscy5IYXNoJyk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSB0aGlzLmlIYXNoLmJsb2NrTGVuO1xuICAgICAgICB0aGlzLm91dHB1dExlbiA9IHRoaXMuaUhhc2gub3V0cHV0TGVuO1xuICAgICAgICBjb25zdCBibG9ja0xlbiA9IHRoaXMuYmxvY2tMZW47XG4gICAgICAgIGNvbnN0IHBhZCA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuKTtcbiAgICAgICAgLy8gYmxvY2tMZW4gY2FuIGJlIGJpZ2dlciB0aGFuIG91dHB1dExlblxuICAgICAgICBwYWQuc2V0KGtleS5sZW5ndGggPiBibG9ja0xlbiA/IGhhc2guY3JlYXRlKCkudXBkYXRlKGtleSkuZGlnZXN0KCkgOiBrZXkpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHBhZFtpXSBePSAweDM2O1xuICAgICAgICB0aGlzLmlIYXNoLnVwZGF0ZShwYWQpO1xuICAgICAgICAvLyBCeSBkb2luZyB1cGRhdGUgKHByb2Nlc3Npbmcgb2YgZmlyc3QgYmxvY2spIG9mIG91dGVyIGhhc2ggaGVyZSB3ZSBjYW4gcmUtdXNlIGl0IGJldHdlZW4gbXVsdGlwbGUgY2FsbHMgdmlhIGNsb25lXG4gICAgICAgIHRoaXMub0hhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICAvLyBVbmRvIGludGVybmFsIFhPUiAmJiBhcHBseSBvdXRlciBYT1JcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWQubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBwYWRbaV0gXj0gMHgzNiBeIDB4NWM7XG4gICAgICAgIHRoaXMub0hhc2gudXBkYXRlKHBhZCk7XG4gICAgICAgIHBhZC5maWxsKDApO1xuICAgIH1cbiAgICB1cGRhdGUoYnVmKSB7XG4gICAgICAgIF9hc3NlcnRfanNfMS5kZWZhdWx0LmV4aXN0cyh0aGlzKTtcbiAgICAgICAgdGhpcy5pSGFzaC51cGRhdGUoYnVmKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIF9hc3NlcnRfanNfMS5kZWZhdWx0LmV4aXN0cyh0aGlzKTtcbiAgICAgICAgX2Fzc2VydF9qc18xLmRlZmF1bHQuYnl0ZXMob3V0LCB0aGlzLm91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmlIYXNoLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC51cGRhdGUob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KHRoaXMub0hhc2gub3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIF9jbG9uZUludG8odG8pIHtcbiAgICAgICAgLy8gQ3JlYXRlIG5ldyBpbnN0YW5jZSB3aXRob3V0IGNhbGxpbmcgY29uc3RydWN0b3Igc2luY2Uga2V5IGFscmVhZHkgaW4gc3RhdGUgYW5kIHdlIGRvbid0IGtub3cgaXQuXG4gICAgICAgIHRvIHx8ICh0byA9IE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLCB7fSkpO1xuICAgICAgICBjb25zdCB7IG9IYXNoLCBpSGFzaCwgZmluaXNoZWQsIGRlc3Ryb3llZCwgYmxvY2tMZW4sIG91dHB1dExlbiB9ID0gdGhpcztcbiAgICAgICAgdG8gPSB0bztcbiAgICAgICAgdG8uZmluaXNoZWQgPSBmaW5pc2hlZDtcbiAgICAgICAgdG8uZGVzdHJveWVkID0gZGVzdHJveWVkO1xuICAgICAgICB0by5ibG9ja0xlbiA9IGJsb2NrTGVuO1xuICAgICAgICB0by5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRvLm9IYXNoID0gb0hhc2guX2Nsb25lSW50byh0by5vSGFzaCk7XG4gICAgICAgIHRvLmlIYXNoID0gaUhhc2guX2Nsb25lSW50byh0by5pSGFzaCk7XG4gICAgICAgIHJldHVybiB0bztcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLm9IYXNoLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5pSGFzaC5kZXN0cm95KCk7XG4gICAgfVxufVxuLyoqXG4gKiBITUFDOiBSRkMyMTA0IG1lc3NhZ2UgYXV0aGVudGljYXRpb24gY29kZS5cbiAqIEBwYXJhbSBoYXNoIC0gZnVuY3Rpb24gdGhhdCB3b3VsZCBiZSB1c2VkIGUuZy4gc2hhMjU2XG4gKiBAcGFyYW0ga2V5IC0gbWVzc2FnZSBrZXlcbiAqIEBwYXJhbSBtZXNzYWdlIC0gbWVzc2FnZSBkYXRhXG4gKi9cbmNvbnN0IGhtYWMgPSAoaGFzaCwga2V5LCBtZXNzYWdlKSA9PiBuZXcgSE1BQyhoYXNoLCBrZXkpLnVwZGF0ZShtZXNzYWdlKS5kaWdlc3QoKTtcbmV4cG9ydHMuaG1hYyA9IGhtYWM7XG5leHBvcnRzLmhtYWMuY3JlYXRlID0gKGhhc2gsIGtleSkgPT4gbmV3IEhNQUMoaGFzaCwga2V5KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/hmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/pbkdf2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/pbkdf2.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js\");\nconst hmac_js_1 = __webpack_require__(/*! ./hmac.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/hmac.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvcGJrZGYyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGNBQWM7QUFDcEMscUJBQXFCLG1CQUFPLENBQUMsc0ZBQWM7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsZ0ZBQVc7QUFDckMsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDBCQUEwQjtBQUN2RSxZQUFZLHNCQUFzQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixVQUFVO0FBQzVCO0FBQ0E7QUFDQSxZQUFZLDZCQUE2QjtBQUN6QyxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsYUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixRQUFRO0FBQ2pDO0FBQ0E7QUFDQSw0QkFBNEIsZUFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsWUFBWSx3Q0FBd0M7QUFDcEQsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGFBQWE7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZUFBZTtBQUMzQztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9wYmtkZjIuanM/ZWZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGJrZGYyQXN5bmMgPSBleHBvcnRzLnBia2RmMiA9IHZvaWQgMDtcbmNvbnN0IF9hc3NlcnRfanNfMSA9IHJlcXVpcmUoXCIuL19hc3NlcnQuanNcIik7XG5jb25zdCBobWFjX2pzXzEgPSByZXF1aXJlKFwiLi9obWFjLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuLy8gQ29tbW9uIHByb2xvZ3VlIGFuZCBlcGlsb2d1ZSBmb3Igc3luYy9hc3luYyBmdW5jdGlvbnNcbmZ1bmN0aW9uIHBia2RmMkluaXQoaGFzaCwgX3Bhc3N3b3JkLCBfc2FsdCwgX29wdHMpIHtcbiAgICBfYXNzZXJ0X2pzXzEuZGVmYXVsdC5oYXNoKGhhc2gpO1xuICAgIGNvbnN0IG9wdHMgPSAoMCwgdXRpbHNfanNfMS5jaGVja09wdHMpKHsgZGtMZW46IDMyLCBhc3luY1RpY2s6IDEwIH0sIF9vcHRzKTtcbiAgICBjb25zdCB7IGMsIGRrTGVuLCBhc3luY1RpY2sgfSA9IG9wdHM7XG4gICAgX2Fzc2VydF9qc18xLmRlZmF1bHQubnVtYmVyKGMpO1xuICAgIF9hc3NlcnRfanNfMS5kZWZhdWx0Lm51bWJlcihka0xlbik7XG4gICAgX2Fzc2VydF9qc18xLmRlZmF1bHQubnVtYmVyKGFzeW5jVGljayk7XG4gICAgaWYgKGMgPCAxKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BCS0RGMjogaXRlcmF0aW9ucyAoYykgc2hvdWxkIGJlID49IDEnKTtcbiAgICBjb25zdCBwYXNzd29yZCA9ICgwLCB1dGlsc19qc18xLnRvQnl0ZXMpKF9wYXNzd29yZCk7XG4gICAgY29uc3Qgc2FsdCA9ICgwLCB1dGlsc19qc18xLnRvQnl0ZXMpKF9zYWx0KTtcbiAgICAvLyBESyA9IFBCS0RGMihQUkYsIFBhc3N3b3JkLCBTYWx0LCBjLCBka0xlbik7XG4gICAgY29uc3QgREsgPSBuZXcgVWludDhBcnJheShka0xlbik7XG4gICAgLy8gVTEgPSBQUkYoUGFzc3dvcmQsIFNhbHQgKyBJTlRfMzJfQkUoaSkpXG4gICAgY29uc3QgUFJGID0gaG1hY19qc18xLmhtYWMuY3JlYXRlKGhhc2gsIHBhc3N3b3JkKTtcbiAgICBjb25zdCBQUkZTYWx0ID0gUFJGLl9jbG9uZUludG8oKS51cGRhdGUoc2FsdCk7XG4gICAgcmV0dXJuIHsgYywgZGtMZW4sIGFzeW5jVGljaywgREssIFBSRiwgUFJGU2FsdCB9O1xufVxuZnVuY3Rpb24gcGJrZGYyT3V0cHV0KFBSRiwgUFJGU2FsdCwgREssIHByZlcsIHUpIHtcbiAgICBQUkYuZGVzdHJveSgpO1xuICAgIFBSRlNhbHQuZGVzdHJveSgpO1xuICAgIGlmIChwcmZXKVxuICAgICAgICBwcmZXLmRlc3Ryb3koKTtcbiAgICB1LmZpbGwoMCk7XG4gICAgcmV0dXJuIERLO1xufVxuLyoqXG4gKiBQQktERjItSE1BQzogUkZDIDI4OTgga2V5IGRlcml2YXRpb24gZnVuY3Rpb25cbiAqIEBwYXJhbSBoYXNoIC0gaGFzaCBmdW5jdGlvbiB0aGF0IHdvdWxkIGJlIHVzZWQgZS5nLiBzaGEyNTZcbiAqIEBwYXJhbSBwYXNzd29yZCAtIHBhc3N3b3JkIGZyb20gd2hpY2ggYSBkZXJpdmVkIGtleSBpcyBnZW5lcmF0ZWRcbiAqIEBwYXJhbSBzYWx0IC0gY3J5cHRvZ3JhcGhpYyBzYWx0XG4gKiBAcGFyYW0gb3B0cyAtIHtjLCBka0xlbn0gd2hlcmUgYyBpcyB3b3JrIGZhY3RvciBhbmQgZGtMZW4gaXMgb3V0cHV0IG1lc3NhZ2Ugc2l6ZVxuICovXG5mdW5jdGlvbiBwYmtkZjIoaGFzaCwgcGFzc3dvcmQsIHNhbHQsIG9wdHMpIHtcbiAgICBjb25zdCB7IGMsIGRrTGVuLCBESywgUFJGLCBQUkZTYWx0IH0gPSBwYmtkZjJJbml0KGhhc2gsIHBhc3N3b3JkLCBzYWx0LCBvcHRzKTtcbiAgICBsZXQgcHJmVzsgLy8gV29ya2luZyBjb3B5XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgY29uc3QgdmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKGFycik7XG4gICAgY29uc3QgdSA9IG5ldyBVaW50OEFycmF5KFBSRi5vdXRwdXRMZW4pO1xuICAgIC8vIERLID0gVDEgKyBUMiArIOKLryArIFRka2xlbi9obGVuXG4gICAgZm9yIChsZXQgdGkgPSAxLCBwb3MgPSAwOyBwb3MgPCBka0xlbjsgdGkrKywgcG9zICs9IFBSRi5vdXRwdXRMZW4pIHtcbiAgICAgICAgLy8gVGkgPSBGKFBhc3N3b3JkLCBTYWx0LCBjLCBpKVxuICAgICAgICBjb25zdCBUaSA9IERLLnN1YmFycmF5KHBvcywgcG9zICsgUFJGLm91dHB1dExlbik7XG4gICAgICAgIHZpZXcuc2V0SW50MzIoMCwgdGksIGZhbHNlKTtcbiAgICAgICAgLy8gRihQYXNzd29yZCwgU2FsdCwgYywgaSkgPSBVMSBeIFUyIF4g4ouvIF4gVWNcbiAgICAgICAgLy8gVTEgPSBQUkYoUGFzc3dvcmQsIFNhbHQgKyBJTlRfMzJfQkUoaSkpXG4gICAgICAgIChwcmZXID0gUFJGU2FsdC5fY2xvbmVJbnRvKHByZlcpKS51cGRhdGUoYXJyKS5kaWdlc3RJbnRvKHUpO1xuICAgICAgICBUaS5zZXQodS5zdWJhcnJheSgwLCBUaS5sZW5ndGgpKTtcbiAgICAgICAgZm9yIChsZXQgdWkgPSAxOyB1aSA8IGM7IHVpKyspIHtcbiAgICAgICAgICAgIC8vIFVjID0gUFJGKFBhc3N3b3JkLCBVY+KIkjEpXG4gICAgICAgICAgICBQUkYuX2Nsb25lSW50byhwcmZXKS51cGRhdGUodSkuZGlnZXN0SW50byh1KTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgVGkubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICAgICAgVGlbaV0gXj0gdVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGJrZGYyT3V0cHV0KFBSRiwgUFJGU2FsdCwgREssIHByZlcsIHUpO1xufVxuZXhwb3J0cy5wYmtkZjIgPSBwYmtkZjI7XG5hc3luYyBmdW5jdGlvbiBwYmtkZjJBc3luYyhoYXNoLCBwYXNzd29yZCwgc2FsdCwgb3B0cykge1xuICAgIGNvbnN0IHsgYywgZGtMZW4sIGFzeW5jVGljaywgREssIFBSRiwgUFJGU2FsdCB9ID0gcGJrZGYySW5pdChoYXNoLCBwYXNzd29yZCwgc2FsdCwgb3B0cyk7XG4gICAgbGV0IHByZlc7IC8vIFdvcmtpbmcgY29weVxuICAgIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIGNvbnN0IHZpZXcgPSAoMCwgdXRpbHNfanNfMS5jcmVhdGVWaWV3KShhcnIpO1xuICAgIGNvbnN0IHUgPSBuZXcgVWludDhBcnJheShQUkYub3V0cHV0TGVuKTtcbiAgICAvLyBESyA9IFQxICsgVDIgKyDii68gKyBUZGtsZW4vaGxlblxuICAgIGZvciAobGV0IHRpID0gMSwgcG9zID0gMDsgcG9zIDwgZGtMZW47IHRpKyssIHBvcyArPSBQUkYub3V0cHV0TGVuKSB7XG4gICAgICAgIC8vIFRpID0gRihQYXNzd29yZCwgU2FsdCwgYywgaSlcbiAgICAgICAgY29uc3QgVGkgPSBESy5zdWJhcnJheShwb3MsIHBvcyArIFBSRi5vdXRwdXRMZW4pO1xuICAgICAgICB2aWV3LnNldEludDMyKDAsIHRpLCBmYWxzZSk7XG4gICAgICAgIC8vIEYoUGFzc3dvcmQsIFNhbHQsIGMsIGkpID0gVTEgXiBVMiBeIOKLryBeIFVjXG4gICAgICAgIC8vIFUxID0gUFJGKFBhc3N3b3JkLCBTYWx0ICsgSU5UXzMyX0JFKGkpKVxuICAgICAgICAocHJmVyA9IFBSRlNhbHQuX2Nsb25lSW50byhwcmZXKSkudXBkYXRlKGFycikuZGlnZXN0SW50byh1KTtcbiAgICAgICAgVGkuc2V0KHUuc3ViYXJyYXkoMCwgVGkubGVuZ3RoKSk7XG4gICAgICAgIGF3YWl0ICgwLCB1dGlsc19qc18xLmFzeW5jTG9vcCkoYyAtIDEsIGFzeW5jVGljaywgKGkpID0+IHtcbiAgICAgICAgICAgIC8vIFVjID0gUFJGKFBhc3N3b3JkLCBVY+KIkjEpXG4gICAgICAgICAgICBQUkYuX2Nsb25lSW50byhwcmZXKS51cGRhdGUodSkuZGlnZXN0SW50byh1KTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgVGkubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICAgICAgVGlbaV0gXj0gdVtpXTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBwYmtkZjJPdXRwdXQoUFJGLCBQUkZTYWx0LCBESywgcHJmVywgdSk7XG59XG5leHBvcnRzLnBia2RmMkFzeW5jID0gcGJrZGYyQXN5bmM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha256.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/sha256.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha256 = void 0;\nconst _sha2_js_1 = __webpack_require__(/*! ./_sha2.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_sha2.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvc2hhMjU2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBWTtBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQSx5QkFBeUIsUUFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUJBQXlCO0FBQ3ZDLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9zaGEyNTYuanM/NmIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2hhMjU2ID0gdm9pZCAwO1xuY29uc3QgX3NoYTJfanNfMSA9IHJlcXVpcmUoXCIuL19zaGEyLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuLy8gQ2hvaWNlOiBhID8gYiA6IGNcbmNvbnN0IENoaSA9IChhLCBiLCBjKSA9PiAoYSAmIGIpIF4gKH5hICYgYyk7XG4vLyBNYWpvcml0eSBmdW5jdGlvbiwgdHJ1ZSBpZiBhbnkgdHdvIGlucHVzdCBpcyB0cnVlXG5jb25zdCBNYWogPSAoYSwgYiwgYykgPT4gKGEgJiBiKSBeIChhICYgYykgXiAoYiAmIGMpO1xuLy8gUm91bmQgY29uc3RhbnRzOlxuLy8gZmlyc3QgMzIgYml0cyBvZiB0aGUgZnJhY3Rpb25hbCBwYXJ0cyBvZiB0aGUgY3ViZSByb290cyBvZiB0aGUgZmlyc3QgNjQgcHJpbWVzIDIuLjMxMSlcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgU0hBMjU2X0sgPSBuZXcgVWludDMyQXJyYXkoW1xuICAgIDB4NDI4YTJmOTgsIDB4NzEzNzQ0OTEsIDB4YjVjMGZiY2YsIDB4ZTliNWRiYTUsIDB4Mzk1NmMyNWIsIDB4NTlmMTExZjEsIDB4OTIzZjgyYTQsIDB4YWIxYzVlZDUsXG4gICAgMHhkODA3YWE5OCwgMHgxMjgzNWIwMSwgMHgyNDMxODViZSwgMHg1NTBjN2RjMywgMHg3MmJlNWQ3NCwgMHg4MGRlYjFmZSwgMHg5YmRjMDZhNywgMHhjMTliZjE3NCxcbiAgICAweGU0OWI2OWMxLCAweGVmYmU0Nzg2LCAweDBmYzE5ZGM2LCAweDI0MGNhMWNjLCAweDJkZTkyYzZmLCAweDRhNzQ4NGFhLCAweDVjYjBhOWRjLCAweDc2Zjk4OGRhLFxuICAgIDB4OTgzZTUxNTIsIDB4YTgzMWM2NmQsIDB4YjAwMzI3YzgsIDB4YmY1OTdmYzcsIDB4YzZlMDBiZjMsIDB4ZDVhNzkxNDcsIDB4MDZjYTYzNTEsIDB4MTQyOTI5NjcsXG4gICAgMHgyN2I3MGE4NSwgMHgyZTFiMjEzOCwgMHg0ZDJjNmRmYywgMHg1MzM4MGQxMywgMHg2NTBhNzM1NCwgMHg3NjZhMGFiYiwgMHg4MWMyYzkyZSwgMHg5MjcyMmM4NSxcbiAgICAweGEyYmZlOGExLCAweGE4MWE2NjRiLCAweGMyNGI4YjcwLCAweGM3NmM1MWEzLCAweGQxOTJlODE5LCAweGQ2OTkwNjI0LCAweGY0MGUzNTg1LCAweDEwNmFhMDcwLFxuICAgIDB4MTlhNGMxMTYsIDB4MWUzNzZjMDgsIDB4Mjc0ODc3NGMsIDB4MzRiMGJjYjUsIDB4MzkxYzBjYjMsIDB4NGVkOGFhNGEsIDB4NWI5Y2NhNGYsIDB4NjgyZTZmZjMsXG4gICAgMHg3NDhmODJlZSwgMHg3OGE1NjM2ZiwgMHg4NGM4NzgxNCwgMHg4Y2M3MDIwOCwgMHg5MGJlZmZmYSwgMHhhNDUwNmNlYiwgMHhiZWY5YTNmNywgMHhjNjcxNzhmMlxuXSk7XG4vLyBJbml0aWFsIHN0YXRlIChmaXJzdCAzMiBiaXRzIG9mIHRoZSBmcmFjdGlvbmFsIHBhcnRzIG9mIHRoZSBzcXVhcmUgcm9vdHMgb2YgdGhlIGZpcnN0IDggcHJpbWVzIDIuLjE5KTpcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgSVYgPSBuZXcgVWludDMyQXJyYXkoW1xuICAgIDB4NmEwOWU2NjcsIDB4YmI2N2FlODUsIDB4M2M2ZWYzNzIsIDB4YTU0ZmY1M2EsIDB4NTEwZTUyN2YsIDB4OWIwNTY4OGMsIDB4MWY4M2Q5YWIsIDB4NWJlMGNkMTlcbl0pO1xuLy8gVGVtcG9yYXJ5IGJ1ZmZlciwgbm90IHVzZWQgdG8gc3RvcmUgYW55dGhpbmcgYmV0d2VlbiBydW5zXG4vLyBOYW1lZCB0aGlzIHdheSBiZWNhdXNlIGl0IG1hdGNoZXMgc3BlY2lmaWNhdGlvbi5cbmNvbnN0IFNIQTI1Nl9XID0gbmV3IFVpbnQzMkFycmF5KDY0KTtcbmNsYXNzIFNIQTI1NiBleHRlbmRzIF9zaGEyX2pzXzEuU0hBMiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKDY0LCAzMiwgOCwgZmFsc2UpO1xuICAgICAgICAvLyBXZSBjYW5ub3QgdXNlIGFycmF5IGhlcmUgc2luY2UgYXJyYXkgYWxsb3dzIGluZGV4aW5nIGJ5IHZhcmlhYmxlXG4gICAgICAgIC8vIHdoaWNoIG1lYW5zIG9wdGltaXplci9jb21waWxlciBjYW5ub3QgdXNlIHJlZ2lzdGVycy5cbiAgICAgICAgdGhpcy5BID0gSVZbMF0gfCAwO1xuICAgICAgICB0aGlzLkIgPSBJVlsxXSB8IDA7XG4gICAgICAgIHRoaXMuQyA9IElWWzJdIHwgMDtcbiAgICAgICAgdGhpcy5EID0gSVZbM10gfCAwO1xuICAgICAgICB0aGlzLkUgPSBJVls0XSB8IDA7XG4gICAgICAgIHRoaXMuRiA9IElWWzVdIHwgMDtcbiAgICAgICAgdGhpcy5HID0gSVZbNl0gfCAwO1xuICAgICAgICB0aGlzLkggPSBJVls3XSB8IDA7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgeyBBLCBCLCBDLCBELCBFLCBGLCBHLCBIIH0gPSB0aGlzO1xuICAgICAgICByZXR1cm4gW0EsIEIsIEMsIEQsIEUsIEYsIEcsIEhdO1xuICAgIH1cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBzZXQoQSwgQiwgQywgRCwgRSwgRiwgRywgSCkge1xuICAgICAgICB0aGlzLkEgPSBBIHwgMDtcbiAgICAgICAgdGhpcy5CID0gQiB8IDA7XG4gICAgICAgIHRoaXMuQyA9IEMgfCAwO1xuICAgICAgICB0aGlzLkQgPSBEIHwgMDtcbiAgICAgICAgdGhpcy5FID0gRSB8IDA7XG4gICAgICAgIHRoaXMuRiA9IEYgfCAwO1xuICAgICAgICB0aGlzLkcgPSBHIHwgMDtcbiAgICAgICAgdGhpcy5IID0gSCB8IDA7XG4gICAgfVxuICAgIHByb2Nlc3Modmlldywgb2Zmc2V0KSB7XG4gICAgICAgIC8vIEV4dGVuZCB0aGUgZmlyc3QgMTYgd29yZHMgaW50byB0aGUgcmVtYWluaW5nIDQ4IHdvcmRzIHdbMTYuLjYzXSBvZiB0aGUgbWVzc2FnZSBzY2hlZHVsZSBhcnJheVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyssIG9mZnNldCArPSA0KVxuICAgICAgICAgICAgU0hBMjU2X1dbaV0gPSB2aWV3LmdldFVpbnQzMihvZmZzZXQsIGZhbHNlKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDE2OyBpIDwgNjQ7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgVzE1ID0gU0hBMjU2X1dbaSAtIDE1XTtcbiAgICAgICAgICAgIGNvbnN0IFcyID0gU0hBMjU2X1dbaSAtIDJdO1xuICAgICAgICAgICAgY29uc3QgczAgPSAoMCwgdXRpbHNfanNfMS5yb3RyKShXMTUsIDcpIF4gKDAsIHV0aWxzX2pzXzEucm90cikoVzE1LCAxOCkgXiAoVzE1ID4+PiAzKTtcbiAgICAgICAgICAgIGNvbnN0IHMxID0gKDAsIHV0aWxzX2pzXzEucm90cikoVzIsIDE3KSBeICgwLCB1dGlsc19qc18xLnJvdHIpKFcyLCAxOSkgXiAoVzIgPj4+IDEwKTtcbiAgICAgICAgICAgIFNIQTI1Nl9XW2ldID0gKHMxICsgU0hBMjU2X1dbaSAtIDddICsgczAgKyBTSEEyNTZfV1tpIC0gMTZdKSB8IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ29tcHJlc3Npb24gZnVuY3Rpb24gbWFpbiBsb29wLCA2NCByb3VuZHNcbiAgICAgICAgbGV0IHsgQSwgQiwgQywgRCwgRSwgRiwgRywgSCB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2NDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBzaWdtYTEgPSAoMCwgdXRpbHNfanNfMS5yb3RyKShFLCA2KSBeICgwLCB1dGlsc19qc18xLnJvdHIpKEUsIDExKSBeICgwLCB1dGlsc19qc18xLnJvdHIpKEUsIDI1KTtcbiAgICAgICAgICAgIGNvbnN0IFQxID0gKEggKyBzaWdtYTEgKyBDaGkoRSwgRiwgRykgKyBTSEEyNTZfS1tpXSArIFNIQTI1Nl9XW2ldKSB8IDA7XG4gICAgICAgICAgICBjb25zdCBzaWdtYTAgPSAoMCwgdXRpbHNfanNfMS5yb3RyKShBLCAyKSBeICgwLCB1dGlsc19qc18xLnJvdHIpKEEsIDEzKSBeICgwLCB1dGlsc19qc18xLnJvdHIpKEEsIDIyKTtcbiAgICAgICAgICAgIGNvbnN0IFQyID0gKHNpZ21hMCArIE1haihBLCBCLCBDKSkgfCAwO1xuICAgICAgICAgICAgSCA9IEc7XG4gICAgICAgICAgICBHID0gRjtcbiAgICAgICAgICAgIEYgPSBFO1xuICAgICAgICAgICAgRSA9IChEICsgVDEpIHwgMDtcbiAgICAgICAgICAgIEQgPSBDO1xuICAgICAgICAgICAgQyA9IEI7XG4gICAgICAgICAgICBCID0gQTtcbiAgICAgICAgICAgIEEgPSAoVDEgKyBUMikgfCAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFkZCB0aGUgY29tcHJlc3NlZCBjaHVuayB0byB0aGUgY3VycmVudCBoYXNoIHZhbHVlXG4gICAgICAgIEEgPSAoQSArIHRoaXMuQSkgfCAwO1xuICAgICAgICBCID0gKEIgKyB0aGlzLkIpIHwgMDtcbiAgICAgICAgQyA9IChDICsgdGhpcy5DKSB8IDA7XG4gICAgICAgIEQgPSAoRCArIHRoaXMuRCkgfCAwO1xuICAgICAgICBFID0gKEUgKyB0aGlzLkUpIHwgMDtcbiAgICAgICAgRiA9IChGICsgdGhpcy5GKSB8IDA7XG4gICAgICAgIEcgPSAoRyArIHRoaXMuRykgfCAwO1xuICAgICAgICBIID0gKEggKyB0aGlzLkgpIHwgMDtcbiAgICAgICAgdGhpcy5zZXQoQSwgQiwgQywgRCwgRSwgRiwgRywgSCk7XG4gICAgfVxuICAgIHJvdW5kQ2xlYW4oKSB7XG4gICAgICAgIFNIQTI1Nl9XLmZpbGwoMCk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuc2V0KDAsIDAsIDAsIDAsIDAsIDAsIDAsIDApO1xuICAgICAgICB0aGlzLmJ1ZmZlci5maWxsKDApO1xuICAgIH1cbn1cbi8qKlxuICogU0hBMi0yNTYgaGFzaCBmdW5jdGlvblxuICogQHBhcmFtIG1lc3NhZ2UgLSBkYXRhIHRoYXQgd291bGQgYmUgaGFzaGVkXG4gKi9cbmV4cG9ydHMuc2hhMjU2ID0gKDAsIHV0aWxzX2pzXzEud3JhcENvbnN0cnVjdG9yKSgoKSA9PiBuZXcgU0hBMjU2KCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha512.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/sha512.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = __webpack_require__(/*! ./_sha2.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_sha2.js\");\nconst _u64_js_1 = __webpack_require__(/*! ./_u64.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_u64.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha512.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = __webpack_require__(/*! @noble/hashes/crypto */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/crypto.js\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@scure/bip39/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@scure/bip39/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = __webpack_require__(/*! @noble/hashes/_assert */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/_assert.js\");\nconst pbkdf2_1 = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/pbkdf2.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha256.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/sha512.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/utils.js\");\nconst base_1 = __webpack_require__(/*! @scure/base */ \"(ssr)/./node_modules/@scure/base/lib/index.js\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@scure/bip39/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/index.js":
/*!********************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFIQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcz9mZGRhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/http.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/adapters/http.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar httpFollow = (__webpack_require__(/*! follow-redirects */ \"(ssr)/./node_modules/follow-redirects/index.js\").http);\nvar httpsFollow = (__webpack_require__(/*! follow-redirects */ \"(ssr)/./node_modules/follow-redirects/index.js\").https);\nvar url = __webpack_require__(/*! url */ \"url\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar VERSION = (__webpack_require__(/*! ./../env/data */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/env/data.js\").version);\nvar transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\");\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\nvar CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n\nvar isHttps = /https:?/;\n\nvar supportedProtocols = [ 'http:', 'https:', 'file:' ];\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n    var rejected = false;\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    });\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    }\n\n    // support for https://www.npmjs.com/package/form-data api\n    if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      Object.assign(headers, data.getHeaders());\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || supportedProtocols[0];\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirect = config.beforeRedirect;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n          stream.destroy();\n          reject(new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          ));\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var transitional = config.transitional || transitionalDefaults;\n        reject(new AxiosError(\n          'timeout of ' + timeout + 'ms exceeded',\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(AxiosError.from(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\");\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\nvar CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\nvar parseProtocol = __webpack_require__(/*! ../helpers/parseProtocol */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/axios.js":
/*!************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/axios.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = __webpack_require__(/*! ./cancel/CanceledError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\");\naxios.VERSION = (__webpack_require__(/*! ./env/data */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/env/data.js\").version);\naxios.toFormData = __webpack_require__(/*! ./helpers/toFormData */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n\n// Expose AxiosError class\naxios.AxiosError = __webpack_require__(/*! ../lib/core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsMkVBQVM7QUFDN0IsV0FBVyxtQkFBTyxDQUFDLHlGQUFnQjtBQUNuQyxZQUFZLG1CQUFPLENBQUMscUZBQWM7QUFDbEMsa0JBQWtCLG1CQUFPLENBQUMsaUdBQW9CO0FBQzlDLGVBQWUsbUJBQU8sQ0FBQyx1RkFBWTs7QUFFbkM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx5R0FBd0I7QUFDdEQsb0JBQW9CLG1CQUFPLENBQUMscUdBQXNCO0FBQ2xELGlCQUFpQixtQkFBTyxDQUFDLCtGQUFtQjtBQUM1QyxnQkFBZ0IsZ0hBQTZCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHFHQUFzQjs7QUFFakQ7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxvR0FBd0I7O0FBRW5EO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsNkZBQWtCOztBQUV6QztBQUNBLHFCQUFxQixtQkFBTyxDQUFDLHlHQUF3Qjs7QUFFckQ7O0FBRUE7QUFDQSx5QkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2Y1MzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIC8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbiAgaW5zdGFuY2UuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGRlZmF1bHRDb25maWcsIGluc3RhbmNlQ29uZmlnKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbGVkRXJyb3IgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxlZEVycm9yJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5heGlvcy5WRVJTSU9OID0gcmVxdWlyZSgnLi9lbnYvZGF0YScpLnZlcnNpb247XG5heGlvcy50b0Zvcm1EYXRhID0gcmVxdWlyZSgnLi9oZWxwZXJzL3RvRm9ybURhdGEnKTtcblxuLy8gRXhwb3NlIEF4aW9zRXJyb3IgY2xhc3NcbmF4aW9zLkF4aW9zRXJyb3IgPSByZXF1aXJlKCcuLi9saWIvY29yZS9BeGlvc0Vycm9yJyk7XG5cbi8vIGFsaWFzIGZvciBDYW5jZWxlZEVycm9yIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5heGlvcy5DYW5jZWwgPSBheGlvcy5DYW5jZWxlZEVycm9yO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuYXhpb3Muc3ByZWFkID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NwcmVhZCcpO1xuXG4vLyBFeHBvc2UgaXNBeGlvc0Vycm9yXG5heGlvcy5pc0F4aW9zRXJyb3IgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNBeGlvc0Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar CanceledError = __webpack_require__(/*! ./CanceledError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsb0JBQW9CLG1CQUFPLENBQUMsa0dBQWlCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanM/OWQ0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWxlZEVycm9yID0gcmVxdWlyZSgnLi9DYW5jZWxlZEVycm9yJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcblxuICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgfSk7XG5cbiAgdmFyIHRva2VuID0gdGhpcztcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICB0aGlzLnByb21pc2UudGhlbihmdW5jdGlvbihjYW5jZWwpIHtcbiAgICBpZiAoIXRva2VuLl9saXN0ZW5lcnMpIHJldHVybjtcblxuICAgIHZhciBpO1xuICAgIHZhciBsID0gdG9rZW4uX2xpc3RlbmVycy5sZW5ndGg7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICB0b2tlbi5fbGlzdGVuZXJzW2ldKGNhbmNlbCk7XG4gICAgfVxuICAgIHRva2VuLl9saXN0ZW5lcnMgPSBudWxsO1xuICB9KTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICB0aGlzLnByb21pc2UudGhlbiA9IGZ1bmN0aW9uKG9uZnVsZmlsbGVkKSB7XG4gICAgdmFyIF9yZXNvbHZlO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7XG4gICAgICB0b2tlbi5zdWJzY3JpYmUocmVzb2x2ZSk7XG4gICAgICBfcmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgfSkudGhlbihvbmZ1bGZpbGxlZCk7XG5cbiAgICBwcm9taXNlLmNhbmNlbCA9IGZ1bmN0aW9uIHJlamVjdCgpIHtcbiAgICAgIHRva2VuLnVuc3Vic2NyaWJlKF9yZXNvbHZlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UpIHtcbiAgICBpZiAodG9rZW4ucmVhc29uKSB7XG4gICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsZWRFcnJvcihtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBTdWJzY3JpYmUgdG8gdGhlIGNhbmNlbCBzaWduYWxcbiAqL1xuXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIGxpc3RlbmVyKHRoaXMucmVhc29uKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2xpc3RlbmVycyA9IFtsaXN0ZW5lcl07XG4gIH1cbn07XG5cbi8qKlxuICogVW5zdWJzY3JpYmUgZnJvbSB0aGUgY2FuY2VsIHNpZ25hbFxuICovXG5cbkNhbmNlbFRva2VuLnByb3RvdHlwZS51bnN1YnNjcmliZSA9IGZ1bmN0aW9uIHVuc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gIGlmICghdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpbmRleCA9IHRoaXMuX2xpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIHRoaXMuX2xpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQkFBaUIsbUJBQU8sQ0FBQyxnR0FBb0I7QUFDN0MsWUFBWSxtQkFBTyxDQUFDLDRFQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzPzI0NzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQXhpb3NFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvQXhpb3NFcnJvcicpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxlZEVycm9yYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbGVkRXJyb3IobWVzc2FnZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZXEtbnVsbCxlcWVxZXFcbiAgQXhpb3NFcnJvci5jYWxsKHRoaXMsIG1lc3NhZ2UgPT0gbnVsbCA/ICdjYW5jZWxlZCcgOiBtZXNzYWdlLCBBeGlvc0Vycm9yLkVSUl9DQU5DRUxFRCk7XG4gIHRoaXMubmFtZSA9ICdDYW5jZWxlZEVycm9yJztcbn1cblxudXRpbHMuaW5oZXJpdHMoQ2FuY2VsZWRFcnJvciwgQXhpb3NFcnJvciwge1xuICBfX0NBTkNFTF9fOiB0cnVlXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxlZEVycm9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanM/ZDNmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/Axios.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\");\nvar buildFullPath = __webpack_require__(/*! ./buildFullPath */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4RUFBWTtBQUNoQyxlQUFlLG1CQUFPLENBQUMsa0dBQXFCO0FBQzVDLHlCQUF5QixtQkFBTyxDQUFDLDBHQUFzQjtBQUN2RCxzQkFBc0IsbUJBQU8sQ0FBQyxvR0FBbUI7QUFDakQsa0JBQWtCLG1CQUFPLENBQUMsNEZBQWU7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsZ0dBQWlCO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLG9HQUFzQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQSxVQUFVLElBQUk7QUFDZDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzPzYxYTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xudmFyIGJ1aWxkRnVsbFBhdGggPSByZXF1aXJlKCcuL2J1aWxkRnVsbFBhdGgnKTtcbnZhciB2YWxpZGF0b3IgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3ZhbGlkYXRvcicpO1xuXG52YXIgdmFsaWRhdG9ycyA9IHZhbGlkYXRvci52YWxpZGF0b3JzO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnT3JVcmwsIGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZ09yVXJsID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICBjb25maWcudXJsID0gY29uZmlnT3JVcmw7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnT3JVcmwgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uYWwgPSBjb25maWcudHJhbnNpdGlvbmFsO1xuXG4gIGlmICh0cmFuc2l0aW9uYWwgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhbGlkYXRvci5hc3NlcnRPcHRpb25zKHRyYW5zaXRpb25hbCwge1xuICAgICAgc2lsZW50SlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiksXG4gICAgICBmb3JjZWRKU09OUGFyc2luZzogdmFsaWRhdG9ycy50cmFuc2l0aW9uYWwodmFsaWRhdG9ycy5ib29sZWFuKSxcbiAgICAgIGNsYXJpZnlUaW1lb3V0RXJyb3I6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbilcbiAgICB9LCBmYWxzZSk7XG4gIH1cblxuICAvLyBmaWx0ZXIgb3V0IHNraXBwZWQgaW50ZXJjZXB0b3JzXG4gIHZhciByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB2YXIgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gdHJ1ZTtcbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgaWYgKHR5cGVvZiBpbnRlcmNlcHRvci5ydW5XaGVuID09PSAnZnVuY3Rpb24nICYmIGludGVyY2VwdG9yLnJ1bldoZW4oY29uZmlnKSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgPSBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgJiYgaW50ZXJjZXB0b3Iuc3luY2hyb25vdXM7XG5cbiAgICByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluID0gW107XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHZhciBwcm9taXNlO1xuXG4gIGlmICghc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzKSB7XG4gICAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcblxuICAgIEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KGNoYWluLCByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbik7XG4gICAgY2hhaW4gPSBjaGFpbi5jb25jYXQocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluKTtcblxuICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cblxuICB2YXIgbmV3Q29uZmlnID0gY29uZmlnO1xuICB3aGlsZSAocmVxdWVzdEludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgdmFyIG9uRnVsZmlsbGVkID0gcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKTtcbiAgICB2YXIgb25SZWplY3RlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdHJ5IHtcbiAgICAgIG5ld0NvbmZpZyA9IG9uRnVsZmlsbGVkKG5ld0NvbmZpZyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIG9uUmVqZWN0ZWQoZXJyb3IpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgdHJ5IHtcbiAgICBwcm9taXNlID0gZGlzcGF0Y2hSZXF1ZXN0KG5ld0NvbmZpZyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfVxuXG4gIHdoaWxlIChyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKSwgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGZ1bGxQYXRoLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplcik7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiAoY29uZmlnIHx8IHt9KS5kYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG5cbiAgZnVuY3Rpb24gZ2VuZXJhdGVIVFRQTWV0aG9kKGlzRm9ybSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBodHRwTWV0aG9kKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgaGVhZGVyczogaXNGb3JtID8ge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YSdcbiAgICAgICAgfSA6IHt9LFxuICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgZGF0YTogZGF0YVxuICAgICAgfSkpO1xuICAgIH07XG4gIH1cblxuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGdlbmVyYXRlSFRUUE1ldGhvZCgpO1xuXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2QgKyAnRm9ybSddID0gZ2VuZXJhdGVIVFRQTWV0aG9kKHRydWUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDRFQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLENBQUM7O0FBRUQ7QUFDQSxrREFBa0QsWUFBWTs7QUFFOUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcz9jMTllIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtjb25maWddIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xuZnVuY3Rpb24gQXhpb3NFcnJvcihtZXNzYWdlLCBjb2RlLCBjb25maWcsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIEVycm9yLmNhbGwodGhpcyk7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gIHRoaXMubmFtZSA9ICdBeGlvc0Vycm9yJztcbiAgY29kZSAmJiAodGhpcy5jb2RlID0gY29kZSk7XG4gIGNvbmZpZyAmJiAodGhpcy5jb25maWcgPSBjb25maWcpO1xuICByZXF1ZXN0ICYmICh0aGlzLnJlcXVlc3QgPSByZXF1ZXN0KTtcbiAgcmVzcG9uc2UgJiYgKHRoaXMucmVzcG9uc2UgPSByZXNwb25zZSk7XG59XG5cbnV0aWxzLmluaGVyaXRzKEF4aW9zRXJyb3IsIEVycm9yLCB7XG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgc3RhdHVzOiB0aGlzLnJlc3BvbnNlICYmIHRoaXMucmVzcG9uc2Uuc3RhdHVzID8gdGhpcy5yZXNwb25zZS5zdGF0dXMgOiBudWxsXG4gICAgfTtcbiAgfVxufSk7XG5cbnZhciBwcm90b3R5cGUgPSBBeGlvc0Vycm9yLnByb3RvdHlwZTtcbnZhciBkZXNjcmlwdG9ycyA9IHt9O1xuXG5bXG4gICdFUlJfQkFEX09QVElPTl9WQUxVRScsXG4gICdFUlJfQkFEX09QVElPTicsXG4gICdFQ09OTkFCT1JURUQnLFxuICAnRVRJTUVET1VUJyxcbiAgJ0VSUl9ORVRXT1JLJyxcbiAgJ0VSUl9GUl9UT09fTUFOWV9SRURJUkVDVFMnLFxuICAnRVJSX0RFUFJFQ0FURUQnLFxuICAnRVJSX0JBRF9SRVNQT05TRScsXG4gICdFUlJfQkFEX1JFUVVFU1QnLFxuICAnRVJSX0NBTkNFTEVEJ1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbl0uZm9yRWFjaChmdW5jdGlvbihjb2RlKSB7XG4gIGRlc2NyaXB0b3JzW2NvZGVdID0ge3ZhbHVlOiBjb2RlfTtcbn0pO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhBeGlvc0Vycm9yLCBkZXNjcmlwdG9ycyk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG90eXBlLCAnaXNBeGlvc0Vycm9yJywge3ZhbHVlOiB0cnVlfSk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5BeGlvc0Vycm9yLmZyb20gPSBmdW5jdGlvbihlcnJvciwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSwgY3VzdG9tUHJvcHMpIHtcbiAgdmFyIGF4aW9zRXJyb3IgPSBPYmplY3QuY3JlYXRlKHByb3RvdHlwZSk7XG5cbiAgdXRpbHMudG9GbGF0T2JqZWN0KGVycm9yLCBheGlvc0Vycm9yLCBmdW5jdGlvbiBmaWx0ZXIob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPT0gRXJyb3IucHJvdG90eXBlO1xuICB9KTtcblxuICBBeGlvc0Vycm9yLmNhbGwoYXhpb3NFcnJvciwgZXJyb3IubWVzc2FnZSwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSk7XG5cbiAgYXhpb3NFcnJvci5uYW1lID0gZXJyb3IubmFtZTtcblxuICBjdXN0b21Qcm9wcyAmJiBPYmplY3QuYXNzaWduKGF4aW9zRXJyb3IsIGN1c3RvbVByb3BzKTtcblxuICByZXR1cm4gYXhpb3NFcnJvcjtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3NFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOEVBQVk7O0FBRWhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcz8wZWFjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQsIG9wdGlvbnMpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWQsXG4gICAgc3luY2hyb25vdXM6IG9wdGlvbnMgPyBvcHRpb25zLnN5bmNocm9ub3VzIDogZmFsc2UsXG4gICAgcnVuV2hlbjogb3B0aW9ucyA/IG9wdGlvbnMucnVuV2hlbiA6IG51bGxcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsb0JBQW9CLG1CQUFPLENBQUMsNEdBQTBCO0FBQ3RELGtCQUFrQixtQkFBTyxDQUFDLHdHQUF3Qjs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanM/MDM2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\nvar CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/cancel/CanceledError.js\");\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOEVBQVk7QUFDaEMsb0JBQW9CLG1CQUFPLENBQUMsZ0dBQWlCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxnR0FBb0I7QUFDM0MsZUFBZSxtQkFBTyxDQUFDLHdGQUFhO0FBQ3BDLG9CQUFvQixtQkFBTyxDQUFDLDBHQUF5Qjs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzk4NGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xudmFyIENhbmNlbGVkRXJyb3IgPSByZXF1aXJlKCcuLi9jYW5jZWwvQ2FuY2VsZWRFcnJvcicpO1xuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxlZEVycm9yYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxuXG4gIGlmIChjb25maWcuc2lnbmFsICYmIGNvbmZpZy5zaWduYWwuYWJvcnRlZCkge1xuICAgIHRocm93IG5ldyBDYW5jZWxlZEVycm9yKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw0RUFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiwyQkFBMkI7QUFDM0IsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzPzZiOWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbmZpZyhjb25maWcxLCBjb25maWcyKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb25maWcyID0gY29uZmlnMiB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGlyZWN0S2V5cyhwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbWVyZ2VNYXAgPSB7XG4gICAgJ3VybCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ21ldGhvZCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ2RhdGEnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdiYXNlVVJMJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndHJhbnNmb3JtUmVxdWVzdCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zZm9ybVJlc3BvbnNlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncGFyYW1zU2VyaWFsaXplcic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RpbWVvdXQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0aW1lb3V0TWVzc2FnZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3dpdGhDcmVkZW50aWFscyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2FkYXB0ZXInOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdyZXNwb25zZVR5cGUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd4c3JmQ29va2llTmFtZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnb25VcGxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ29uRG93bmxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2RlY29tcHJlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdtYXhDb250ZW50TGVuZ3RoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnbWF4Qm9keUxlbmd0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2JlZm9yZVJlZGlyZWN0JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndHJhbnNwb3J0JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnaHR0cEFnZW50JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnaHR0cHNBZ2VudCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2NhbmNlbFRva2VuJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnc29ja2V0UGF0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3Jlc3BvbnNlRW5jb2RpbmcnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd2YWxpZGF0ZVN0YXR1cyc6IG1lcmdlRGlyZWN0S2V5c1xuICB9O1xuXG4gIHV0aWxzLmZvckVhY2goT2JqZWN0LmtleXMoY29uZmlnMSkuY29uY2F0KE9iamVjdC5rZXlzKGNvbmZpZzIpKSwgZnVuY3Rpb24gY29tcHV0ZUNvbmZpZ1ZhbHVlKHByb3ApIHtcbiAgICB2YXIgbWVyZ2UgPSBtZXJnZU1hcFtwcm9wXSB8fCBtZXJnZURlZXBQcm9wZXJ0aWVzO1xuICAgIHZhciBjb25maWdWYWx1ZSA9IG1lcmdlKHByb3ApO1xuICAgICh1dGlscy5pc1VuZGVmaW5lZChjb25maWdWYWx1ZSkgJiYgbWVyZ2UgIT09IG1lcmdlRGlyZWN0S2V5cykgfHwgKGNvbmZpZ1twcm9wXSA9IGNvbmZpZ1ZhbHVlKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/settle.js":
/*!******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/settle.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AxiosError = __webpack_require__(/*! ./AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQkFBaUIsbUJBQU8sQ0FBQywwRkFBYzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzP2Q5YTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQXhpb3NFcnJvciA9IHJlcXVpcmUoJy4vQXhpb3NFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QobmV3IEF4aW9zRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgW0F4aW9zRXJyb3IuRVJSX0JBRF9SRVFVRVNULCBBeGlvc0Vycm9yLkVSUl9CQURfUkVTUE9OU0VdW01hdGguZmxvb3IocmVzcG9uc2Uuc3RhdHVzIC8gMTAwKSAtIDRdLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/core/transformData.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDhFQUFZO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQyx3RkFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLFdBQVcsT0FBTztBQUNsQixXQUFXLGdCQUFnQjtBQUMzQixhQUFhLEdBQUc7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanM/OGIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICB2YXIgY29udGV4dCA9IHRoaXMgfHwgZGVmYXVsdHM7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuLmNhbGwoY29udGV4dCwgZGF0YSwgaGVhZGVycyk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/env/FormData.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/defaults/env/FormData.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// eslint-disable-next-line strict\nmodule.exports = __webpack_require__(/*! form-data */ \"(ssr)/./node_modules/aptos/node_modules/form-data/lib/form_data.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy9lbnYvRm9ybURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSwySEFBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL2Vudi9Gb3JtRGF0YS5qcz9hMzYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzdHJpY3Rcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZm9ybS1kYXRhJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/env/FormData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/defaults/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ../helpers/normalizeHeaderName */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\nvar transitionalDefaults = __webpack_require__(/*! ./transitional */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\");\nvar toFormData = __webpack_require__(/*! ../helpers/toFormData */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ../adapters/xhr */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ../adapters/http */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/adapters/http.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: __webpack_require__(/*! ./env/FormData */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/env/FormData.js\")\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsNEVBQVU7QUFDOUIsMEJBQTBCLG1CQUFPLENBQUMsd0hBQWdDO0FBQ2xFLGlCQUFpQixtQkFBTyxDQUFDLGdHQUFvQjtBQUM3QywyQkFBMkIsbUJBQU8sQ0FBQyxrR0FBZ0I7QUFDbkQsaUJBQWlCLG1CQUFPLENBQUMsc0dBQXVCOztBQUVoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQywwRkFBaUI7QUFDdkMsSUFBSTtBQUNKO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLDRGQUFrQjtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esc0NBQXNDLGlCQUFpQjtBQUN2RCxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxrR0FBZ0I7QUFDdEMsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL2luZGV4LmpzPzhkMmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcbnZhciBBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi4vY29yZS9BeGlvc0Vycm9yJyk7XG52YXIgdHJhbnNpdGlvbmFsRGVmYXVsdHMgPSByZXF1aXJlKCcuL3RyYW5zaXRpb25hbCcpO1xudmFyIHRvRm9ybURhdGEgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3RvRm9ybURhdGEnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuLi9hZGFwdGVycy9odHRwJyk7XG4gIH1cbiAgcmV0dXJuIGFkYXB0ZXI7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVNhZmVseShyYXdWYWx1ZSwgcGFyc2VyLCBlbmNvZGVyKSB7XG4gIGlmICh1dGlscy5pc1N0cmluZyhyYXdWYWx1ZSkpIHtcbiAgICB0cnkge1xuICAgICAgKHBhcnNlciB8fCBKU09OLnBhcnNlKShyYXdWYWx1ZSk7XG4gICAgICByZXR1cm4gdXRpbHMudHJpbShyYXdWYWx1ZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWYgKGUubmFtZSAhPT0gJ1N5bnRheEVycm9yJykge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoZW5jb2RlciB8fCBKU09OLnN0cmluZ2lmeSkocmF3VmFsdWUpO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG5cbiAgdHJhbnNpdGlvbmFsOiB0cmFuc2l0aW9uYWxEZWZhdWx0cyxcblxuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcblxuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG5cbiAgICB2YXIgaXNPYmplY3RQYXlsb2FkID0gdXRpbHMuaXNPYmplY3QoZGF0YSk7XG4gICAgdmFyIGNvbnRlbnRUeXBlID0gaGVhZGVycyAmJiBoZWFkZXJzWydDb250ZW50LVR5cGUnXTtcblxuICAgIHZhciBpc0ZpbGVMaXN0O1xuXG4gICAgaWYgKChpc0ZpbGVMaXN0ID0gdXRpbHMuaXNGaWxlTGlzdChkYXRhKSkgfHwgKGlzT2JqZWN0UGF5bG9hZCAmJiBjb250ZW50VHlwZSA9PT0gJ211bHRpcGFydC9mb3JtLWRhdGEnKSkge1xuICAgICAgdmFyIF9Gb3JtRGF0YSA9IHRoaXMuZW52ICYmIHRoaXMuZW52LkZvcm1EYXRhO1xuICAgICAgcmV0dXJuIHRvRm9ybURhdGEoaXNGaWxlTGlzdCA/IHsnZmlsZXNbXSc6IGRhdGF9IDogZGF0YSwgX0Zvcm1EYXRhICYmIG5ldyBfRm9ybURhdGEoKSk7XG4gICAgfSBlbHNlIGlmIChpc09iamVjdFBheWxvYWQgfHwgY29udGVudFR5cGUgPT09ICdhcHBsaWNhdGlvbi9qc29uJykge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICB0cmFuc2Zvcm1SZXNwb25zZTogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpIHtcbiAgICB2YXIgdHJhbnNpdGlvbmFsID0gdGhpcy50cmFuc2l0aW9uYWwgfHwgZGVmYXVsdHMudHJhbnNpdGlvbmFsO1xuICAgIHZhciBzaWxlbnRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuc2lsZW50SlNPTlBhcnNpbmc7XG4gICAgdmFyIGZvcmNlZEpTT05QYXJzaW5nID0gdHJhbnNpdGlvbmFsICYmIHRyYW5zaXRpb25hbC5mb3JjZWRKU09OUGFyc2luZztcbiAgICB2YXIgc3RyaWN0SlNPTlBhcnNpbmcgPSAhc2lsZW50SlNPTlBhcnNpbmcgJiYgdGhpcy5yZXNwb25zZVR5cGUgPT09ICdqc29uJztcblxuICAgIGlmIChzdHJpY3RKU09OUGFyc2luZyB8fCAoZm9yY2VkSlNPTlBhcnNpbmcgJiYgdXRpbHMuaXNTdHJpbmcoZGF0YSkgJiYgZGF0YS5sZW5ndGgpKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0cmljdEpTT05QYXJzaW5nKSB7XG4gICAgICAgICAgaWYgKGUubmFtZSA9PT0gJ1N5bnRheEVycm9yJykge1xuICAgICAgICAgICAgdGhyb3cgQXhpb3NFcnJvci5mcm9tKGUsIEF4aW9zRXJyb3IuRVJSX0JBRF9SRVNQT05TRSwgdGhpcywgbnVsbCwgdGhpcy5yZXNwb25zZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIGVudjoge1xuICAgIEZvcm1EYXRhOiByZXF1aXJlKCcuL2Vudi9Gb3JtRGF0YScpXG4gIH0sXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfSxcblxuICBoZWFkZXJzOiB7XG4gICAgY29tbW9uOiB7XG4gICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgICB9XG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvdHJhbnNpdGlvbmFsLmpzPzExOGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2lsZW50SlNPTlBhcnNpbmc6IHRydWUsXG4gIGZvcmNlZEpTT05QYXJzaW5nOiB0cnVlLFxuICBjbGFyaWZ5VGltZW91dEVycm9yOiBmYWxzZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/defaults/transitional.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/env/data.js":
/*!***************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/env/data.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("module.exports = {\n  \"version\": \"0.27.2\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9lbnYvZGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzPzE0YjQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwidmVyc2lvblwiOiBcIjAuMjcuMlwiXG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/env/data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/bind.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanM/YzQ1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4RUFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzP2UyNTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcz9kOTU3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDhFQUFZOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsMkNBQTJDO0FBQzNDLFNBQVM7O0FBRVQ7QUFDQSw0REFBNEQsd0JBQXdCO0FBQ3BGO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLGdDQUFnQyxjQUFjO0FBQzlDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz9lYTZlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzPzU2MWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGQrXFwtLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOEVBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0F4aW9zRXJyb3IuanM/OWNkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgYW4gZXJyb3IgdGhyb3duIGJ5IEF4aW9zXG4gKlxuICogQHBhcmFtIHsqfSBwYXlsb2FkIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3MsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQXhpb3NFcnJvcihwYXlsb2FkKSB7XG4gIHJldHVybiB1dGlscy5pc09iamVjdChwYXlsb2FkKSAmJiAocGF5bG9hZC5pc0F4aW9zRXJyb3IgPT09IHRydWUpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isAxiosError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!******************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOEVBQVk7O0FBRWhDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcz9kMjMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICB2YXIgb3JpZ2luVVJMO1xuXG4gICAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICAgIHZhciBocmVmID0gdXJsO1xuXG4gICAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjtcbiAgICAgICAgfVxuXG4gICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAgIC8vIHVybFBhcnNpbmdOb2RlIHByb3ZpZGVzIHRoZSBVcmxVdGlscyBpbnRlcmZhY2UgLSBodHRwOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsdXRpbHNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgICAgaGFzaDogdXJsUGFyc2luZ05vZGUuaGFzaCA/IHVybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgICBwYXRobmFtZTogKHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSA/XG4gICAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgICAnLycgKyB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcblxuICAgICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDRFQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz80ZTZiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js":
/*!***************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOEVBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzP2RkNmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlUHJvdG9jb2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSx3QkFBd0IsS0FBSztBQUM3QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlUHJvdG9jb2wuanM/ZjBlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VQcm90b2NvbCh1cmwpIHtcbiAgdmFyIG1hdGNoID0gL14oWy0rXFx3XXsxLDI1fSkoOj9cXC9cXC98OikvLmV4ZWModXJsKTtcbiAgcmV0dXJuIG1hdGNoICYmIG1hdGNoWzFdIHx8ICcnO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/parseProtocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/spread.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanM/ZDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\");\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3RvRm9ybURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDRFQUFVOztBQUU5QjtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90b0Zvcm1EYXRhLmpzP2ExNjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbnZlcnQgYSBkYXRhIG9iamVjdCB0byBGb3JtRGF0YVxuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHBhcmFtIHs/T2JqZWN0fSBbZm9ybURhdGFdXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICoqL1xuXG5mdW5jdGlvbiB0b0Zvcm1EYXRhKG9iaiwgZm9ybURhdGEpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIGZvcm1EYXRhID0gZm9ybURhdGEgfHwgbmV3IEZvcm1EYXRhKCk7XG5cbiAgdmFyIHN0YWNrID0gW107XG5cbiAgZnVuY3Rpb24gY29udmVydFZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSByZXR1cm4gJyc7XG5cbiAgICBpZiAodXRpbHMuaXNEYXRlKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIHZhbHVlLnRvSVNPU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXIodmFsdWUpIHx8IHV0aWxzLmlzVHlwZWRBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB0eXBlb2YgQmxvYiA9PT0gJ2Z1bmN0aW9uJyA/IG5ldyBCbG9iKFt2YWx1ZV0pIDogQnVmZmVyLmZyb20odmFsdWUpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJ1aWxkKGRhdGEsIHBhcmVudEtleSkge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KGRhdGEpIHx8IHV0aWxzLmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIGlmIChzdGFjay5pbmRleE9mKGRhdGEpICE9PSAtMSkge1xuICAgICAgICB0aHJvdyBFcnJvcignQ2lyY3VsYXIgcmVmZXJlbmNlIGRldGVjdGVkIGluICcgKyBwYXJlbnRLZXkpO1xuICAgICAgfVxuXG4gICAgICBzdGFjay5wdXNoKGRhdGEpO1xuXG4gICAgICB1dGlscy5mb3JFYWNoKGRhdGEsIGZ1bmN0aW9uIGVhY2godmFsdWUsIGtleSkge1xuICAgICAgICBpZiAodXRpbHMuaXNVbmRlZmluZWQodmFsdWUpKSByZXR1cm47XG4gICAgICAgIHZhciBmdWxsS2V5ID0gcGFyZW50S2V5ID8gcGFyZW50S2V5ICsgJy4nICsga2V5IDoga2V5O1xuICAgICAgICB2YXIgYXJyO1xuXG4gICAgICAgIGlmICh2YWx1ZSAmJiAhcGFyZW50S2V5ICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICBpZiAodXRpbHMuZW5kc1dpdGgoa2V5LCAne30nKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmVuZHNXaXRoKGtleSwgJ1tdJykgJiYgKGFyciA9IHV0aWxzLnRvQXJyYXkodmFsdWUpKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICAgICAgICAgIGFyci5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7XG4gICAgICAgICAgICAgICF1dGlscy5pc1VuZGVmaW5lZChlbCkgJiYgZm9ybURhdGEuYXBwZW5kKGZ1bGxLZXksIGNvbnZlcnRWYWx1ZShlbCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYnVpbGQodmFsdWUsIGZ1bGxLZXkpO1xuICAgICAgfSk7XG5cbiAgICAgIHN0YWNrLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JtRGF0YS5hcHBlbmQocGFyZW50S2V5LCBjb252ZXJ0VmFsdWUoZGF0YSkpO1xuICAgIH1cbiAgfVxuXG4gIGJ1aWxkKG9iaik7XG5cbiAgcmV0dXJuIGZvcm1EYXRhO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvRm9ybURhdGE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/toFormData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js":
/*!************************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/helpers/validator.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar VERSION = (__webpack_require__(/*! ../env/data */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/env/data.js\").version);\nvar AxiosError = __webpack_require__(/*! ../core/AxiosError */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/core/AxiosError.js\");\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3ZhbGlkYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLGlIQUE4QjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyxnR0FBb0I7O0FBRTdDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanM/MTUyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBWRVJTSU9OID0gcmVxdWlyZSgnLi4vZW52L2RhdGEnKS52ZXJzaW9uO1xudmFyIEF4aW9zRXJyb3IgPSByZXF1aXJlKCcuLi9jb3JlL0F4aW9zRXJyb3InKTtcblxudmFyIHZhbGlkYXRvcnMgPSB7fTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblsnb2JqZWN0JywgJ2Jvb2xlYW4nLCAnbnVtYmVyJywgJ2Z1bmN0aW9uJywgJ3N0cmluZycsICdzeW1ib2wnXS5mb3JFYWNoKGZ1bmN0aW9uKHR5cGUsIGkpIHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbnZhciBkZXByZWNhdGVkV2FybmluZ3MgPSB7fTtcblxuLyoqXG4gKiBUcmFuc2l0aW9uYWwgb3B0aW9uIHZhbGlkYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbnxib29sZWFuP30gdmFsaWRhdG9yIC0gc2V0IHRvIGZhbHNlIGlmIHRoZSB0cmFuc2l0aW9uYWwgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWRcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvbiAtIGRlcHJlY2F0ZWQgdmVyc2lvbiAvIHJlbW92ZWQgc2luY2UgdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmc/fSBtZXNzYWdlIC0gc29tZSBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBpbmZvXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb259XG4gKi9cbnZhbGlkYXRvcnMudHJhbnNpdGlvbmFsID0gZnVuY3Rpb24gdHJhbnNpdGlvbmFsKHZhbGlkYXRvciwgdmVyc2lvbiwgbWVzc2FnZSkge1xuICBmdW5jdGlvbiBmb3JtYXRNZXNzYWdlKG9wdCwgZGVzYykge1xuICAgIHJldHVybiAnW0F4aW9zIHYnICsgVkVSU0lPTiArICddIFRyYW5zaXRpb25hbCBvcHRpb24gXFwnJyArIG9wdCArICdcXCcnICsgZGVzYyArIChtZXNzYWdlID8gJy4gJyArIG1lc3NhZ2UgOiAnJyk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUsIG9wdCwgb3B0cykge1xuICAgIGlmICh2YWxpZGF0b3IgPT09IGZhbHNlKSB7XG4gICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihcbiAgICAgICAgZm9ybWF0TWVzc2FnZShvcHQsICcgaGFzIGJlZW4gcmVtb3ZlZCcgKyAodmVyc2lvbiA/ICcgaW4gJyArIHZlcnNpb24gOiAnJykpLFxuICAgICAgICBBeGlvc0Vycm9yLkVSUl9ERVBSRUNBVEVEXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICh2ZXJzaW9uICYmICFkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSkge1xuICAgICAgZGVwcmVjYXRlZFdhcm5pbmdzW29wdF0gPSB0cnVlO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICBvcHQsXG4gICAgICAgICAgJyBoYXMgYmVlbiBkZXByZWNhdGVkIHNpbmNlIHYnICsgdmVyc2lvbiArICcgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmVhciBmdXR1cmUnXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbGlkYXRvciA/IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRzKSA6IHRydWU7XG4gIH07XG59O1xuXG4vKipcbiAqIEFzc2VydCBvYmplY3QncyBwcm9wZXJ0aWVzIHR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge29iamVjdH0gc2NoZW1hXG4gKiBAcGFyYW0ge2Jvb2xlYW4/fSBhbGxvd1Vua25vd25cbiAqL1xuXG5mdW5jdGlvbiBhc3NlcnRPcHRpb25zKG9wdGlvbnMsIHNjaGVtYSwgYWxsb3dVbmtub3duKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcignb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdCcsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT05fVkFMVUUpO1xuICB9XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucyk7XG4gIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0gPiAwKSB7XG4gICAgdmFyIG9wdCA9IGtleXNbaV07XG4gICAgdmFyIHZhbGlkYXRvciA9IHNjaGVtYVtvcHRdO1xuICAgIGlmICh2YWxpZGF0b3IpIHtcbiAgICAgIHZhciB2YWx1ZSA9IG9wdGlvbnNbb3B0XTtcbiAgICAgIHZhciByZXN1bHQgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRpb25zKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT05fVkFMVUUpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0LCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OKTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFzc2VydE9wdGlvbnM6IGFzc2VydE9wdGlvbnMsXG4gIHZhbGlkYXRvcnM6IHZhbGlkYXRvcnNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/aptos/node_modules/axios/lib/utils.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"(ssr)/./node_modules/aptos/node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/form-data/lib/form_data.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/form-data/lib/form_data.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var CombinedStream = __webpack_require__(/*! combined-stream */ \"(ssr)/./node_modules/combined-stream/lib/combined_stream.js\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar parseUrl = (__webpack_require__(/*! url */ \"url\").parse);\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar Stream = (__webpack_require__(/*! stream */ \"stream\").Stream);\nvar mime = __webpack_require__(/*! mime-types */ \"(ssr)/./node_modules/mime-types/index.js\");\nvar asynckit = __webpack_require__(/*! asynckit */ \"(ssr)/./node_modules/asynckit/index.js\");\nvar populate = __webpack_require__(/*! ./populate.js */ \"(ssr)/./node_modules/aptos/node_modules/form-data/lib/populate.js\");\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/form-data/lib/form_data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/form-data/lib/populate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/form-data/lib/populate.js ***!
  \*******************************************************************/
/***/ ((module) => {

eval("// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL2Zvcm0tZGF0YS9saWIvcG9wdWxhdGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvZm9ybS1kYXRhL2xpYi9wb3B1bGF0ZS5qcz83ZTdiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBvcHVsYXRlcyBtaXNzaW5nIHZhbHVlc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihkc3QsIHNyYykge1xuXG4gIE9iamVjdC5rZXlzKHNyYykuZm9yRWFjaChmdW5jdGlvbihwcm9wKVxuICB7XG4gICAgZHN0W3Byb3BdID0gZHN0W3Byb3BdIHx8IHNyY1twcm9wXTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRzdDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/form-data/lib/populate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/dist/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/aptos/dist/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError2),\n/* harmony export */   AptosAccount: () => (/* binding */ AptosAccount),\n/* harmony export */   AptosClient: () => (/* binding */ AptosClient),\n/* harmony export */   AptosToken: () => (/* binding */ AptosToken),\n/* harmony export */   BCS: () => (/* binding */ bcs_exports),\n/* harmony export */   CoinClient: () => (/* binding */ CoinClient),\n/* harmony export */   FailedTransactionError: () => (/* binding */ FailedTransactionError),\n/* harmony export */   FaucetClient: () => (/* binding */ FaucetClient),\n/* harmony export */   HexString: () => (/* binding */ HexString),\n/* harmony export */   IndexerClient: () => (/* binding */ IndexerClient),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   Provider: () => (/* binding */ Provider),\n/* harmony export */   TokenClient: () => (/* binding */ TokenClient),\n/* harmony export */   TokenTypes: () => (/* binding */ token_types_exports),\n/* harmony export */   TransactionBuilder: () => (/* binding */ TransactionBuilder),\n/* harmony export */   TransactionBuilderABI: () => (/* binding */ TransactionBuilderABI),\n/* harmony export */   TransactionBuilderEd25519: () => (/* binding */ TransactionBuilderEd25519),\n/* harmony export */   TransactionBuilderMultiEd25519: () => (/* binding */ TransactionBuilderMultiEd25519),\n/* harmony export */   TransactionBuilderRemoteABI: () => (/* binding */ TransactionBuilderRemoteABI),\n/* harmony export */   TxnBuilderTypes: () => (/* binding */ aptos_types_exports),\n/* harmony export */   TypeTagParser: () => (/* binding */ TypeTagParser),\n/* harmony export */   Types: () => (/* binding */ generated_exports),\n/* harmony export */   WaitForTransactionError: () => (/* binding */ WaitForTransactionError),\n/* harmony export */   derivePath: () => (/* binding */ derivePath),\n/* harmony export */   deserializePropertyMap: () => (/* binding */ deserializePropertyMap),\n/* harmony export */   deserializeValueBasedOnTypeTag: () => (/* binding */ deserializeValueBasedOnTypeTag),\n/* harmony export */   getAddressFromAccountOrAddress: () => (/* binding */ getAddressFromAccountOrAddress),\n/* harmony export */   getPropertyValueRaw: () => (/* binding */ getPropertyValueRaw)\n/* harmony export */ });\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var _scure_bip39__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @scure/bip39 */ \"(ssr)/./node_modules/aptos/node_modules/@scure/bip39/index.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/aptos/node_modules/axios/index.js\");\n/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! form-data */ \"(ssr)/./node_modules/aptos/node_modules/form-data/lib/form_data.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// src/account/aptos_account.ts\n\n\n\n\n\n// src/utils/hd-key.ts\n\n\n\n\nvar pathRegex = /^m(\\/[0-9]+')+$/;\nvar replaceDerive = (val) => val.replace(\"'\", \"\");\nvar HMAC_KEY = \"ed25519 seed\";\nvar HARDENED_OFFSET = 2147483648;\nvar getMasterKeyFromSeed = (seed) => {\n  const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_4__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__.sha512, HMAC_KEY);\n  const I = h.update((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nvar CKDPriv = ({ key, chainCode }, index) => {\n  const buffer = new ArrayBuffer(4);\n  new DataView(buffer).setUint32(0, index);\n  const indexBytes = new Uint8Array(buffer);\n  const zero = new Uint8Array([0]);\n  const data = new Uint8Array([...zero, ...key, ...indexBytes]);\n  const I = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_4__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_5__.sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nvar isValidPath = (path) => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path.split(\"/\").slice(1).map(replaceDerive).some(Number.isNaN);\n};\nvar derivePath = (path, seed, offset = HARDENED_OFFSET) => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path.split(\"/\").slice(1).map(replaceDerive).map((el) => parseInt(el, 10));\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), { key, chainCode });\n};\n\n// src/utils/misc.ts\nasync function sleep(timeMs) {\n  return new Promise((resolve2) => {\n    setTimeout(resolve2, timeMs);\n  });\n}\nvar DEFAULT_VERSION_PATH_BASE = \"/v1\";\nfunction fixNodeUrl(nodeUrl) {\n  let out = `${nodeUrl}`;\n  if (out.endsWith(\"/\")) {\n    out = out.substring(0, out.length - 1);\n  }\n  if (!out.endsWith(DEFAULT_VERSION_PATH_BASE)) {\n    out = `${out}${DEFAULT_VERSION_PATH_BASE}`;\n  }\n  return out;\n}\nvar DEFAULT_MAX_GAS_AMOUNT = 2e5;\nvar DEFAULT_TXN_EXP_SEC_FROM_NOW = 20;\nvar DEFAULT_TXN_TIMEOUT_SEC = 20;\nvar APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n\n// src/utils/memoize-decorator.ts\nfunction Memoize(args) {\n  let hashFunction;\n  let ttlMs;\n  let tags;\n  if (typeof args === \"object\") {\n    hashFunction = args.hashFunction;\n    ttlMs = args.ttlMs;\n    tags = args.tags;\n  } else {\n    hashFunction = args;\n  }\n  return (target, propertyKey, descriptor) => {\n    if (descriptor.value != null) {\n      descriptor.value = getNewFunction(descriptor.value, hashFunction, ttlMs, tags);\n    } else if (descriptor.get != null) {\n      descriptor.get = getNewFunction(descriptor.get, hashFunction, ttlMs, tags);\n    } else {\n      throw new Error(\"Only put a Memoize() decorator on a method or get accessor.\");\n    }\n  };\n}\nfunction MemoizeExpiring(ttlMs, hashFunction) {\n  return Memoize({\n    ttlMs,\n    hashFunction\n  });\n}\nvar clearCacheTagsMap = /* @__PURE__ */ new Map();\nfunction clear(tags) {\n  const cleared = /* @__PURE__ */ new Set();\n  for (const tag of tags) {\n    const maps = clearCacheTagsMap.get(tag);\n    if (maps) {\n      for (const mp of maps) {\n        if (!cleared.has(mp)) {\n          mp.clear();\n          cleared.add(mp);\n        }\n      }\n    }\n  }\n  return cleared.size;\n}\nfunction getNewFunction(originalMethod, hashFunction, ttlMs = 0, tags) {\n  const propMapName = Symbol(\"__memoized_map__\");\n  return function(...args) {\n    let returnedValue;\n    const that = this;\n    if (!that.hasOwnProperty(propMapName)) {\n      Object.defineProperty(that, propMapName, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: /* @__PURE__ */ new Map()\n      });\n    }\n    const myMap = that[propMapName];\n    if (Array.isArray(tags)) {\n      for (const tag of tags) {\n        if (clearCacheTagsMap.has(tag)) {\n          clearCacheTagsMap.get(tag).push(myMap);\n        } else {\n          clearCacheTagsMap.set(tag, [myMap]);\n        }\n      }\n    }\n    if (hashFunction || args.length > 0 || ttlMs > 0) {\n      let hashKey;\n      if (hashFunction === true) {\n        hashKey = args.map((a) => a.toString()).join(\"!\");\n      } else if (hashFunction) {\n        hashKey = hashFunction.apply(that, args);\n      } else {\n        hashKey = args[0];\n      }\n      const timestampKey = `${hashKey}__timestamp`;\n      let isExpired = false;\n      if (ttlMs > 0) {\n        if (!myMap.has(timestampKey)) {\n          isExpired = true;\n        } else {\n          const timestamp = myMap.get(timestampKey);\n          isExpired = Date.now() - timestamp > ttlMs;\n        }\n      }\n      if (myMap.has(hashKey) && !isExpired) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args);\n        myMap.set(hashKey, returnedValue);\n        if (ttlMs > 0) {\n          myMap.set(timestampKey, Date.now());\n        }\n      }\n    } else {\n      const hashKey = that;\n      if (myMap.has(hashKey)) {\n        returnedValue = myMap.get(hashKey);\n      } else {\n        returnedValue = originalMethod.apply(that, args);\n        myMap.set(hashKey, returnedValue);\n      }\n    }\n    return returnedValue;\n  };\n}\n\n// src/utils/hex_string.ts\n\nvar HexString = class {\n  static fromBuffer(buffer) {\n    return HexString.fromUint8Array(buffer);\n  }\n  static fromUint8Array(arr) {\n    return new HexString((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(arr));\n  }\n  static ensure(hexString) {\n    if (typeof hexString === \"string\") {\n      return new HexString(hexString);\n    }\n    return hexString;\n  }\n  constructor(hexString) {\n    if (hexString.startsWith(\"0x\")) {\n      this.hexString = hexString;\n    } else {\n      this.hexString = `0x${hexString}`;\n    }\n  }\n  hex() {\n    return this.hexString;\n  }\n  noPrefix() {\n    return this.hexString.slice(2);\n  }\n  toString() {\n    return this.hex();\n  }\n  toShortString() {\n    const trimmed = this.hexString.replace(/^0x0*/, \"\");\n    return `0x${trimmed}`;\n  }\n  toUint8Array() {\n    return Uint8Array.from((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(this.noPrefix()));\n  }\n};\n\n// src/utils/pagination_helpers.ts\nasync function paginateWithCursor(apiFunction, accountAddress, limitPerRequest, query) {\n  var _a;\n  const out = [];\n  let cursor;\n  while (true) {\n    const response = await apiFunction(\n      HexString.ensure(accountAddress).hex(),\n      (_a = query == null ? void 0 : query.ledgerVersion) == null ? void 0 : _a.toString(),\n      cursor,\n      limitPerRequest\n    );\n    cursor = response.__headers[\"x-aptos-cursor\"];\n    delete response.__headers;\n    out.push(...response);\n    if (cursor === null || cursor === void 0) {\n      break;\n    }\n  }\n  return out;\n}\n\n// src/utils/api-endpoints.ts\nvar NetworkToIndexerAPI = {\n  mainnet: \"https://indexer.mainnet.aptoslabs.com/v1/graphql\",\n  testnet: \"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql\",\n  devnet: \"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql\"\n};\nvar NetworkToNodeAPI = {\n  mainnet: \"https://fullnode.mainnet.aptoslabs.com/v1\",\n  testnet: \"https://fullnode.testnet.aptoslabs.com/v1\",\n  devnet: \"https://fullnode.devnet.aptoslabs.com/v1\"\n};\nvar Network = /* @__PURE__ */ ((Network3) => {\n  Network3[\"MAINNET\"] = \"mainnet\";\n  Network3[\"TESTNET\"] = \"testnet\";\n  Network3[\"DEVNET\"] = \"devnet\";\n  return Network3;\n})(Network || {});\n\n// src/aptos_types/index.ts\nvar aptos_types_exports = {};\n__export(aptos_types_exports, {\n  AccountAddress: () => AccountAddress,\n  AccountAuthenticator: () => AccountAuthenticator,\n  AccountAuthenticatorEd25519: () => AccountAuthenticatorEd25519,\n  AccountAuthenticatorMultiEd25519: () => AccountAuthenticatorMultiEd25519,\n  ArgumentABI: () => ArgumentABI,\n  AuthenticationKey: () => AuthenticationKey,\n  ChainId: () => ChainId,\n  ChangeSet: () => ChangeSet,\n  Ed25519PublicKey: () => Ed25519PublicKey,\n  Ed25519Signature: () => Ed25519Signature,\n  EntryFunction: () => EntryFunction,\n  EntryFunctionABI: () => EntryFunctionABI,\n  Identifier: () => Identifier,\n  Module: () => Module,\n  ModuleId: () => ModuleId,\n  MultiAgentRawTransaction: () => MultiAgentRawTransaction,\n  MultiEd25519PublicKey: () => MultiEd25519PublicKey,\n  MultiEd25519Signature: () => MultiEd25519Signature,\n  MultiSig: () => MultiSig,\n  MultiSigTransactionPayload: () => MultiSigTransactionPayload,\n  RawTransaction: () => RawTransaction,\n  RawTransactionWithData: () => RawTransactionWithData,\n  RotationProofChallenge: () => RotationProofChallenge,\n  Script: () => Script,\n  ScriptABI: () => ScriptABI,\n  SignedTransaction: () => SignedTransaction,\n  StructTag: () => StructTag,\n  Transaction: () => Transaction,\n  TransactionArgument: () => TransactionArgument,\n  TransactionArgumentAddress: () => TransactionArgumentAddress,\n  TransactionArgumentBool: () => TransactionArgumentBool,\n  TransactionArgumentU128: () => TransactionArgumentU128,\n  TransactionArgumentU16: () => TransactionArgumentU16,\n  TransactionArgumentU256: () => TransactionArgumentU256,\n  TransactionArgumentU32: () => TransactionArgumentU32,\n  TransactionArgumentU64: () => TransactionArgumentU64,\n  TransactionArgumentU8: () => TransactionArgumentU8,\n  TransactionArgumentU8Vector: () => TransactionArgumentU8Vector,\n  TransactionAuthenticator: () => TransactionAuthenticator,\n  TransactionAuthenticatorEd25519: () => TransactionAuthenticatorEd25519,\n  TransactionAuthenticatorMultiAgent: () => TransactionAuthenticatorMultiAgent,\n  TransactionAuthenticatorMultiEd25519: () => TransactionAuthenticatorMultiEd25519,\n  TransactionPayload: () => TransactionPayload,\n  TransactionPayloadEntryFunction: () => TransactionPayloadEntryFunction,\n  TransactionPayloadMultisig: () => TransactionPayloadMultisig,\n  TransactionPayloadScript: () => TransactionPayloadScript,\n  TransactionScriptABI: () => TransactionScriptABI,\n  TypeArgumentABI: () => TypeArgumentABI,\n  TypeTag: () => TypeTag,\n  TypeTagAddress: () => TypeTagAddress,\n  TypeTagBool: () => TypeTagBool,\n  TypeTagParser: () => TypeTagParser,\n  TypeTagParserError: () => TypeTagParserError,\n  TypeTagSigner: () => TypeTagSigner,\n  TypeTagStruct: () => TypeTagStruct,\n  TypeTagU128: () => TypeTagU128,\n  TypeTagU16: () => TypeTagU16,\n  TypeTagU256: () => TypeTagU256,\n  TypeTagU32: () => TypeTagU32,\n  TypeTagU64: () => TypeTagU64,\n  TypeTagU8: () => TypeTagU8,\n  TypeTagVector: () => TypeTagVector,\n  UserTransaction: () => UserTransaction,\n  WriteSet: () => WriteSet,\n  stringStructTag: () => stringStructTag\n});\n\n// src/bcs/index.ts\nvar bcs_exports = {};\n__export(bcs_exports, {\n  Deserializer: () => Deserializer,\n  Serializer: () => Serializer,\n  bcsSerializeBool: () => bcsSerializeBool,\n  bcsSerializeBytes: () => bcsSerializeBytes,\n  bcsSerializeFixedBytes: () => bcsSerializeFixedBytes,\n  bcsSerializeStr: () => bcsSerializeStr,\n  bcsSerializeU128: () => bcsSerializeU128,\n  bcsSerializeU16: () => bcsSerializeU16,\n  bcsSerializeU32: () => bcsSerializeU32,\n  bcsSerializeU8: () => bcsSerializeU8,\n  bcsSerializeUint64: () => bcsSerializeUint64,\n  bcsToBytes: () => bcsToBytes,\n  deserializeVector: () => deserializeVector,\n  serializeVector: () => serializeVector,\n  serializeVectorWithFunc: () => serializeVectorWithFunc\n});\n\n// src/bcs/consts.ts\nvar MAX_U8_NUMBER = 2 ** 8 - 1;\nvar MAX_U16_NUMBER = 2 ** 16 - 1;\nvar MAX_U32_NUMBER = 2 ** 32 - 1;\nvar MAX_U64_BIG_INT = BigInt(2 ** 64) - BigInt(1);\nvar MAX_U128_BIG_INT = BigInt(2 ** 128) - BigInt(1);\nvar MAX_U256_BIG_INT = BigInt(2 ** 256) - BigInt(1);\n\n// src/bcs/serializer.ts\nvar Serializer = class {\n  constructor() {\n    this.buffer = new ArrayBuffer(64);\n    this.offset = 0;\n  }\n  ensureBufferWillHandleSize(bytes) {\n    while (this.buffer.byteLength < this.offset + bytes) {\n      const newBuffer = new ArrayBuffer(this.buffer.byteLength * 2);\n      new Uint8Array(newBuffer).set(new Uint8Array(this.buffer));\n      this.buffer = newBuffer;\n    }\n  }\n  serialize(values) {\n    this.ensureBufferWillHandleSize(values.length);\n    new Uint8Array(this.buffer, this.offset).set(values);\n    this.offset += values.length;\n  }\n  serializeWithFunction(fn, bytesLength, value) {\n    this.ensureBufferWillHandleSize(bytesLength);\n    const dv = new DataView(this.buffer, this.offset);\n    fn.apply(dv, [0, value, true]);\n    this.offset += bytesLength;\n  }\n  serializeStr(value) {\n    const textEncoder = new TextEncoder();\n    this.serializeBytes(textEncoder.encode(value));\n  }\n  serializeBytes(value) {\n    this.serializeU32AsUleb128(value.length);\n    this.serialize(value);\n  }\n  serializeFixedBytes(value) {\n    this.serialize(value);\n  }\n  serializeBool(value) {\n    if (typeof value !== \"boolean\") {\n      throw new Error(\"Value needs to be a boolean\");\n    }\n    const byteValue = value ? 1 : 0;\n    this.serialize(new Uint8Array([byteValue]));\n  }\n  serializeU8(value) {\n    this.serialize(new Uint8Array([value]));\n  }\n  serializeU16(value) {\n    this.serializeWithFunction(DataView.prototype.setUint16, 2, value);\n  }\n  serializeU32(value) {\n    this.serializeWithFunction(DataView.prototype.setUint32, 4, value);\n  }\n  serializeU64(value) {\n    const low = BigInt(value.toString()) & BigInt(MAX_U32_NUMBER);\n    const high = BigInt(value.toString()) >> BigInt(32);\n    this.serializeU32(Number(low));\n    this.serializeU32(Number(high));\n  }\n  serializeU128(value) {\n    const low = BigInt(value.toString()) & MAX_U64_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(64);\n    this.serializeU64(low);\n    this.serializeU64(high);\n  }\n  serializeU256(value) {\n    const low = BigInt(value.toString()) & MAX_U128_BIG_INT;\n    const high = BigInt(value.toString()) >> BigInt(128);\n    this.serializeU128(low);\n    this.serializeU128(high);\n  }\n  serializeU32AsUleb128(val) {\n    let value = val;\n    const valueArray = [];\n    while (value >>> 7 !== 0) {\n      valueArray.push(value & 127 | 128);\n      value >>>= 7;\n    }\n    valueArray.push(value);\n    this.serialize(new Uint8Array(valueArray));\n  }\n  getBytes() {\n    return new Uint8Array(this.buffer).slice(0, this.offset);\n  }\n};\n__decorateClass([\n  checkNumberRange(0, MAX_U8_NUMBER)\n], Serializer.prototype, \"serializeU8\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U16_NUMBER)\n], Serializer.prototype, \"serializeU16\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U64_BIG_INT)\n], Serializer.prototype, \"serializeU64\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U128_BIG_INT)\n], Serializer.prototype, \"serializeU128\", 1);\n__decorateClass([\n  checkNumberRange(BigInt(0), MAX_U256_BIG_INT)\n], Serializer.prototype, \"serializeU256\", 1);\n__decorateClass([\n  checkNumberRange(0, MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32AsUleb128\", 1);\nfunction checkNumberRange(minValue, maxValue, message) {\n  return (target, propertyKey, descriptor) => {\n    const childFunction = descriptor.value;\n    descriptor.value = function deco(value) {\n      const valueBigInt = BigInt(value.toString());\n      if (valueBigInt > BigInt(maxValue.toString()) || valueBigInt < BigInt(minValue.toString())) {\n        throw new Error(message || \"Value is out of range\");\n      }\n      childFunction.apply(this, [value]);\n    };\n    return descriptor;\n  };\n}\n\n// src/bcs/deserializer.ts\nvar Deserializer = class {\n  constructor(data) {\n    this.buffer = new ArrayBuffer(data.length);\n    new Uint8Array(this.buffer).set(data, 0);\n    this.offset = 0;\n  }\n  read(length) {\n    if (this.offset + length > this.buffer.byteLength) {\n      throw new Error(\"Reached to the end of buffer\");\n    }\n    const bytes = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return bytes;\n  }\n  deserializeStr() {\n    const value = this.deserializeBytes();\n    const textDecoder = new TextDecoder();\n    return textDecoder.decode(value);\n  }\n  deserializeBytes() {\n    const len = this.deserializeUleb128AsU32();\n    return new Uint8Array(this.read(len));\n  }\n  deserializeFixedBytes(len) {\n    return new Uint8Array(this.read(len));\n  }\n  deserializeBool() {\n    const bool = new Uint8Array(this.read(1))[0];\n    if (bool !== 1 && bool !== 0) {\n      throw new Error(\"Invalid boolean value\");\n    }\n    return bool === 1;\n  }\n  deserializeU8() {\n    return new DataView(this.read(1)).getUint8(0);\n  }\n  deserializeU16() {\n    return new DataView(this.read(2)).getUint16(0, true);\n  }\n  deserializeU32() {\n    return new DataView(this.read(4)).getUint32(0, true);\n  }\n  deserializeU64() {\n    const low = this.deserializeU32();\n    const high = this.deserializeU32();\n    return BigInt(BigInt(high) << BigInt(32) | BigInt(low));\n  }\n  deserializeU128() {\n    const low = this.deserializeU64();\n    const high = this.deserializeU64();\n    return BigInt(high << BigInt(64) | low);\n  }\n  deserializeU256() {\n    const low = this.deserializeU128();\n    const high = this.deserializeU128();\n    return BigInt(high << BigInt(128) | low);\n  }\n  deserializeUleb128AsU32() {\n    let value = BigInt(0);\n    let shift = 0;\n    while (value < MAX_U32_NUMBER) {\n      const byte = this.deserializeU8();\n      value |= BigInt(byte & 127) << BigInt(shift);\n      if ((byte & 128) === 0) {\n        break;\n      }\n      shift += 7;\n    }\n    if (value > MAX_U32_NUMBER) {\n      throw new Error(\"Overflow while parsing uleb128-encoded uint32 value\");\n    }\n    return Number(value);\n  }\n};\n\n// src/bcs/helper.ts\nfunction serializeVector(value, serializer) {\n  serializer.serializeU32AsUleb128(value.length);\n  value.forEach((item) => {\n    item.serialize(serializer);\n  });\n}\nfunction serializeVectorWithFunc(value, func) {\n  const serializer = new Serializer();\n  serializer.serializeU32AsUleb128(value.length);\n  const f = serializer[func];\n  value.forEach((item) => {\n    f.call(serializer, item);\n  });\n  return serializer.getBytes();\n}\nfunction deserializeVector(deserializer, cls) {\n  const length = deserializer.deserializeUleb128AsU32();\n  const list = [];\n  for (let i = 0; i < length; i += 1) {\n    list.push(cls.deserialize(deserializer));\n  }\n  return list;\n}\nfunction bcsToBytes(value) {\n  const serializer = new Serializer();\n  value.serialize(serializer);\n  return serializer.getBytes();\n}\nfunction bcsSerializeUint64(value) {\n  const serializer = new Serializer();\n  serializer.serializeU64(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU8(value) {\n  const serializer = new Serializer();\n  serializer.serializeU8(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU16(value) {\n  const serializer = new Serializer();\n  serializer.serializeU16(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU32(value) {\n  const serializer = new Serializer();\n  serializer.serializeU32(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeU128(value) {\n  const serializer = new Serializer();\n  serializer.serializeU128(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeBool(value) {\n  const serializer = new Serializer();\n  serializer.serializeBool(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeStr(value) {\n  const serializer = new Serializer();\n  serializer.serializeStr(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeBytes(value) {\n  const serializer = new Serializer();\n  serializer.serializeBytes(value);\n  return serializer.getBytes();\n}\nfunction bcsSerializeFixedBytes(value) {\n  const serializer = new Serializer();\n  serializer.serializeFixedBytes(value);\n  return serializer.getBytes();\n}\n\n// src/aptos_types/transaction.ts\n\n\n// src/aptos_types/account_address.ts\nvar _AccountAddress = class {\n  constructor(address) {\n    if (address.length !== _AccountAddress.LENGTH) {\n      throw new Error(\"Expected address of length 32\");\n    }\n    this.address = address;\n  }\n  static fromHex(addr) {\n    let address = HexString.ensure(addr);\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n    const addressBytes = address.toUint8Array();\n    if (addressBytes.length > _AccountAddress.LENGTH) {\n      throw new Error(\"Hex string is too long. Address's length is 32 bytes.\");\n    } else if (addressBytes.length === _AccountAddress.LENGTH) {\n      return new _AccountAddress(addressBytes);\n    }\n    const res = new Uint8Array(_AccountAddress.LENGTH);\n    res.set(addressBytes, _AccountAddress.LENGTH - addressBytes.length);\n    return new _AccountAddress(res);\n  }\n  static isValid(addr) {\n    if (addr === \"\") {\n      return false;\n    }\n    let address = HexString.ensure(addr);\n    if (address.noPrefix().length % 2 !== 0) {\n      address = new HexString(`0${address.noPrefix()}`);\n    }\n    const addressBytes = address.toUint8Array();\n    return addressBytes.length <= _AccountAddress.LENGTH;\n  }\n  toHexString() {\n    return HexString.fromUint8Array(this.address).hex();\n  }\n  serialize(serializer) {\n    serializer.serializeFixedBytes(this.address);\n  }\n  static deserialize(deserializer) {\n    return new _AccountAddress(deserializer.deserializeFixedBytes(_AccountAddress.LENGTH));\n  }\n};\nvar AccountAddress = _AccountAddress;\nAccountAddress.LENGTH = 32;\nAccountAddress.CORE_CODE_ADDRESS = _AccountAddress.fromHex(\"0x1\");\n\n// src/aptos_types/ed25519.ts\nvar _Ed25519PublicKey = class {\n  constructor(value) {\n    if (value.length !== _Ed25519PublicKey.LENGTH) {\n      throw new Error(`Ed25519PublicKey length should be ${_Ed25519PublicKey.LENGTH}`);\n    }\n    this.value = value;\n  }\n  toBytes() {\n    return this.value;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new _Ed25519PublicKey(value);\n  }\n};\nvar Ed25519PublicKey = _Ed25519PublicKey;\nEd25519PublicKey.LENGTH = 32;\nvar _Ed25519Signature = class {\n  constructor(value) {\n    this.value = value;\n    if (value.length !== _Ed25519Signature.LENGTH) {\n      throw new Error(`Ed25519Signature length should be ${_Ed25519Signature.LENGTH}`);\n    }\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new _Ed25519Signature(value);\n  }\n};\nvar Ed25519Signature = _Ed25519Signature;\nEd25519Signature.LENGTH = 64;\n\n// src/aptos_types/multi_ed25519.ts\nvar MAX_SIGNATURES_SUPPORTED = 32;\nvar MultiEd25519PublicKey = class {\n  constructor(public_keys, threshold) {\n    this.public_keys = public_keys;\n    this.threshold = threshold;\n    if (threshold > MAX_SIGNATURES_SUPPORTED) {\n      throw new Error(`\"threshold\" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`);\n    }\n  }\n  toBytes() {\n    const bytes = new Uint8Array(this.public_keys.length * Ed25519PublicKey.LENGTH + 1);\n    this.public_keys.forEach((k, i) => {\n      bytes.set(k.value, i * Ed25519PublicKey.LENGTH);\n    });\n    bytes[this.public_keys.length * Ed25519PublicKey.LENGTH] = this.threshold;\n    return bytes;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.toBytes());\n  }\n  static deserialize(deserializer) {\n    const bytes = deserializer.deserializeBytes();\n    const threshold = bytes[bytes.length - 1];\n    const keys = [];\n    for (let i = 0; i < bytes.length - 1; i += Ed25519PublicKey.LENGTH) {\n      const begin = i;\n      keys.push(new Ed25519PublicKey(bytes.subarray(begin, begin + Ed25519PublicKey.LENGTH)));\n    }\n    return new MultiEd25519PublicKey(keys, threshold);\n  }\n};\nvar _MultiEd25519Signature = class {\n  constructor(signatures, bitmap) {\n    this.signatures = signatures;\n    this.bitmap = bitmap;\n    if (bitmap.length !== _MultiEd25519Signature.BITMAP_LEN) {\n      throw new Error(`\"bitmap\" length should be ${_MultiEd25519Signature.BITMAP_LEN}`);\n    }\n  }\n  toBytes() {\n    const bytes = new Uint8Array(this.signatures.length * Ed25519Signature.LENGTH + _MultiEd25519Signature.BITMAP_LEN);\n    this.signatures.forEach((k, i) => {\n      bytes.set(k.value, i * Ed25519Signature.LENGTH);\n    });\n    bytes.set(this.bitmap, this.signatures.length * Ed25519Signature.LENGTH);\n    return bytes;\n  }\n  static createBitmap(bits) {\n    const firstBitInByte = 128;\n    const bitmap = new Uint8Array([0, 0, 0, 0]);\n    const dupCheckSet = /* @__PURE__ */ new Set();\n    bits.forEach((bit) => {\n      if (bit >= MAX_SIGNATURES_SUPPORTED) {\n        throw new Error(`Invalid bit value ${bit}.`);\n      }\n      if (dupCheckSet.has(bit)) {\n        throw new Error(\"Duplicated bits detected.\");\n      }\n      dupCheckSet.add(bit);\n      const byteOffset = Math.floor(bit / 8);\n      let byte = bitmap[byteOffset];\n      byte |= firstBitInByte >> bit % 8;\n      bitmap[byteOffset] = byte;\n    });\n    return bitmap;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.toBytes());\n  }\n  static deserialize(deserializer) {\n    const bytes = deserializer.deserializeBytes();\n    const bitmap = bytes.subarray(bytes.length - 4);\n    const sigs = [];\n    for (let i = 0; i < bytes.length - bitmap.length; i += Ed25519Signature.LENGTH) {\n      const begin = i;\n      sigs.push(new Ed25519Signature(bytes.subarray(begin, begin + Ed25519Signature.LENGTH)));\n    }\n    return new _MultiEd25519Signature(sigs, bitmap);\n  }\n};\nvar MultiEd25519Signature = _MultiEd25519Signature;\nMultiEd25519Signature.BITMAP_LEN = 4;\n\n// src/aptos_types/authenticator.ts\nvar TransactionAuthenticator = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return TransactionAuthenticatorMultiEd25519.load(deserializer);\n      case 2:\n        return TransactionAuthenticatorMultiAgent.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionAuthenticator: ${index}`);\n    }\n  }\n};\nvar TransactionAuthenticatorEd25519 = class extends TransactionAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorEd25519(public_key, signature);\n  }\n};\nvar TransactionAuthenticatorMultiEd25519 = class extends TransactionAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new TransactionAuthenticatorMultiEd25519(public_key, signature);\n  }\n};\nvar TransactionAuthenticatorMultiAgent = class extends TransactionAuthenticator {\n  constructor(sender, secondary_signer_addresses, secondary_signers) {\n    super();\n    this.sender = sender;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n    this.secondary_signers = secondary_signers;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    this.sender.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n    serializeVector(this.secondary_signers, serializer);\n  }\n  static load(deserializer) {\n    const sender = AccountAuthenticator.deserialize(deserializer);\n    const secondary_signer_addresses = deserializeVector(deserializer, AccountAddress);\n    const secondary_signers = deserializeVector(deserializer, AccountAuthenticator);\n    return new TransactionAuthenticatorMultiAgent(sender, secondary_signer_addresses, secondary_signers);\n  }\n};\nvar AccountAuthenticator = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return AccountAuthenticatorEd25519.load(deserializer);\n      case 1:\n        return AccountAuthenticatorMultiEd25519.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for AccountAuthenticator: ${index}`);\n    }\n  }\n};\nvar AccountAuthenticatorEd25519 = class extends AccountAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = Ed25519PublicKey.deserialize(deserializer);\n    const signature = Ed25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorEd25519(public_key, signature);\n  }\n};\nvar AccountAuthenticatorMultiEd25519 = class extends AccountAuthenticator {\n  constructor(public_key, signature) {\n    super();\n    this.public_key = public_key;\n    this.signature = signature;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    this.public_key.serialize(serializer);\n    this.signature.serialize(serializer);\n  }\n  static load(deserializer) {\n    const public_key = MultiEd25519PublicKey.deserialize(deserializer);\n    const signature = MultiEd25519Signature.deserialize(deserializer);\n    return new AccountAuthenticatorMultiEd25519(public_key, signature);\n  }\n};\n\n// src/aptos_types/identifier.ts\nvar Identifier = class {\n  constructor(value) {\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeStr();\n    return new Identifier(value);\n  }\n};\n\n// src/aptos_types/type_tag.ts\nvar TypeTag = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TypeTagBool.load(deserializer);\n      case 1:\n        return TypeTagU8.load(deserializer);\n      case 2:\n        return TypeTagU64.load(deserializer);\n      case 3:\n        return TypeTagU128.load(deserializer);\n      case 4:\n        return TypeTagAddress.load(deserializer);\n      case 5:\n        return TypeTagSigner.load(deserializer);\n      case 6:\n        return TypeTagVector.load(deserializer);\n      case 7:\n        return TypeTagStruct.load(deserializer);\n      case 8:\n        return TypeTagU16.load(deserializer);\n      case 9:\n        return TypeTagU32.load(deserializer);\n      case 10:\n        return TypeTagU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TypeTag: ${index}`);\n    }\n  }\n};\nvar TypeTagBool = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n  }\n  static load(deserializer) {\n    return new TypeTagBool();\n  }\n};\nvar TypeTagU8 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n  }\n  static load(_deserializer) {\n    return new TypeTagU8();\n  }\n};\nvar TypeTagU16 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n  }\n  static load(_deserializer) {\n    return new TypeTagU16();\n  }\n};\nvar TypeTagU32 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n  }\n  static load(_deserializer) {\n    return new TypeTagU32();\n  }\n};\nvar TypeTagU64 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n  }\n  static load(_deserializer) {\n    return new TypeTagU64();\n  }\n};\nvar TypeTagU128 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n  }\n  static load(_deserializer) {\n    return new TypeTagU128();\n  }\n};\nvar TypeTagU256 = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n  }\n  static load(_deserializer) {\n    return new TypeTagU256();\n  }\n};\nvar TypeTagAddress = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(4);\n  }\n  static load(_deserializer) {\n    return new TypeTagAddress();\n  }\n};\nvar TypeTagSigner = class extends TypeTag {\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(5);\n  }\n  static load(_deserializer) {\n    return new TypeTagSigner();\n  }\n};\nvar TypeTagVector = class extends TypeTag {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(6);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = TypeTag.deserialize(deserializer);\n    return new TypeTagVector(value);\n  }\n};\nvar TypeTagStruct = class extends TypeTag {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(7);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = StructTag.deserialize(deserializer);\n    return new TypeTagStruct(value);\n  }\n  isStringTypeTag() {\n    if (this.value.module_name.value === \"string\" && this.value.name.value === \"String\" && this.value.address.toHexString() === AccountAddress.fromHex(\"0x1\").toHexString()) {\n      return true;\n    }\n    return false;\n  }\n};\nvar StructTag = class {\n  constructor(address, module_name, name, type_args) {\n    this.address = address;\n    this.module_name = module_name;\n    this.name = name;\n    this.type_args = type_args;\n  }\n  static fromString(structTag) {\n    const typeTagStruct = new TypeTagParser(structTag).parseTypeTag();\n    return new StructTag(\n      typeTagStruct.value.address,\n      typeTagStruct.value.module_name,\n      typeTagStruct.value.name,\n      typeTagStruct.value.type_args\n    );\n  }\n  serialize(serializer) {\n    this.address.serialize(serializer);\n    this.module_name.serialize(serializer);\n    this.name.serialize(serializer);\n    serializeVector(this.type_args, serializer);\n  }\n  static deserialize(deserializer) {\n    const address = AccountAddress.deserialize(deserializer);\n    const moduleName = Identifier.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    const typeArgs = deserializeVector(deserializer, TypeTag);\n    return new StructTag(address, moduleName, name, typeArgs);\n  }\n};\nvar stringStructTag = new StructTag(\n  AccountAddress.fromHex(\"0x1\"),\n  new Identifier(\"string\"),\n  new Identifier(\"String\"),\n  []\n);\nfunction bail(message) {\n  throw new TypeTagParserError(message);\n}\nfunction isWhiteSpace(c) {\n  if (c.match(/\\s/)) {\n    return true;\n  }\n  return false;\n}\nfunction isValidAlphabetic(c) {\n  if (c.match(/[_A-Za-z0-9]/g)) {\n    return true;\n  }\n  return false;\n}\nfunction isGeneric(c) {\n  if (c.match(/T\\d+/g)) {\n    return true;\n  }\n  return false;\n}\nfunction nextToken(tagStr, pos) {\n  const c = tagStr[pos];\n  if (c === \":\") {\n    if (tagStr.slice(pos, pos + 2) === \"::\") {\n      return [[\"COLON\", \"::\"], 2];\n    }\n    bail(\"Unrecognized token.\");\n  } else if (c === \"<\") {\n    return [[\"LT\", \"<\"], 1];\n  } else if (c === \">\") {\n    return [[\"GT\", \">\"], 1];\n  } else if (c === \",\") {\n    return [[\"COMMA\", \",\"], 1];\n  } else if (isWhiteSpace(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isWhiteSpace(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    return [[\"SPACE\", res], res.length];\n  } else if (isValidAlphabetic(c)) {\n    let res = \"\";\n    for (let i = pos; i < tagStr.length; i += 1) {\n      const char = tagStr[i];\n      if (isValidAlphabetic(char)) {\n        res = `${res}${char}`;\n      } else {\n        break;\n      }\n    }\n    if (isGeneric(res)) {\n      return [[\"GENERIC\", res], res.length];\n    }\n    return [[\"IDENT\", res], res.length];\n  }\n  throw new Error(\"Unrecognized token.\");\n}\nfunction tokenize(tagStr) {\n  let pos = 0;\n  const tokens = [];\n  while (pos < tagStr.length) {\n    const [token, size] = nextToken(tagStr, pos);\n    if (token[0] !== \"SPACE\") {\n      tokens.push(token);\n    }\n    pos += size;\n  }\n  return tokens;\n}\nvar TypeTagParser = class {\n  constructor(tagStr, typeTags) {\n    this.typeTags = [];\n    this.tokens = tokenize(tagStr);\n    this.typeTags = typeTags || [];\n  }\n  consume(targetToken) {\n    const token = this.tokens.shift();\n    if (!token || token[1] !== targetToken) {\n      bail(\"Invalid type tag.\");\n    }\n  }\n  parseCommaList(endToken, allowTraillingComma) {\n    const res = [];\n    if (this.tokens.length <= 0) {\n      bail(\"Invalid type tag.\");\n    }\n    while (this.tokens[0][1] !== endToken) {\n      res.push(this.parseTypeTag());\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken) {\n        break;\n      }\n      this.consume(\",\");\n      if (this.tokens.length > 0 && this.tokens[0][1] === endToken && allowTraillingComma) {\n        break;\n      }\n      if (this.tokens.length <= 0) {\n        bail(\"Invalid type tag.\");\n      }\n    }\n    return res;\n  }\n  parseTypeTag() {\n    if (this.tokens.length === 0) {\n      bail(\"Invalid type tag.\");\n    }\n    const [tokenTy, tokenVal] = this.tokens.shift();\n    if (tokenVal === \"u8\") {\n      return new TypeTagU8();\n    }\n    if (tokenVal === \"u16\") {\n      return new TypeTagU16();\n    }\n    if (tokenVal === \"u32\") {\n      return new TypeTagU32();\n    }\n    if (tokenVal === \"u64\") {\n      return new TypeTagU64();\n    }\n    if (tokenVal === \"u128\") {\n      return new TypeTagU128();\n    }\n    if (tokenVal === \"u256\") {\n      return new TypeTagU256();\n    }\n    if (tokenVal === \"bool\") {\n      return new TypeTagBool();\n    }\n    if (tokenVal === \"address\") {\n      return new TypeTagAddress();\n    }\n    if (tokenVal === \"vector\") {\n      this.consume(\"<\");\n      const res = this.parseTypeTag();\n      this.consume(\">\");\n      return new TypeTagVector(res);\n    }\n    if (tokenVal === \"string\") {\n      return new StructTag(AccountAddress.fromHex(\"0x1\"), new Identifier(\"string\"), new Identifier(\"String\"), []);\n    }\n    if (tokenTy === \"IDENT\" && (tokenVal.startsWith(\"0x\") || tokenVal.startsWith(\"0X\"))) {\n      const address = tokenVal;\n      this.consume(\"::\");\n      const [moduleTokenTy, module] = this.tokens.shift();\n      if (moduleTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      this.consume(\"::\");\n      const [nameTokenTy, name] = this.tokens.shift();\n      if (nameTokenTy !== \"IDENT\") {\n        bail(\"Invalid type tag.\");\n      }\n      if (module === \"object\" && name === \"Object\") {\n        this.tokens.splice(0, 3);\n        return new TypeTagAddress();\n      }\n      let tyTags = [];\n      if (this.tokens.length > 0 && this.tokens[0][1] === \"<\") {\n        this.consume(\"<\");\n        tyTags = this.parseCommaList(\">\", true);\n        this.consume(\">\");\n      }\n      const structTag = new StructTag(\n        AccountAddress.fromHex(address),\n        new Identifier(module),\n        new Identifier(name),\n        tyTags\n      );\n      return new TypeTagStruct(structTag);\n    }\n    if (tokenTy === \"GENERIC\") {\n      if (this.typeTags.length === 0) {\n        bail(\"Can't convert generic type since no typeTags were specified.\");\n      }\n      const idx = parseInt(tokenVal.substring(1), 10);\n      return new TypeTagParser(this.typeTags[idx]).parseTypeTag();\n    }\n    throw new Error(\"Invalid type tag.\");\n  }\n};\nvar TypeTagParserError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"TypeTagParserError\";\n  }\n};\n\n// src/aptos_types/transaction.ts\nvar RawTransaction = class {\n  constructor(sender, sequence_number, payload, max_gas_amount, gas_unit_price, expiration_timestamp_secs, chain_id) {\n    this.sender = sender;\n    this.sequence_number = sequence_number;\n    this.payload = payload;\n    this.max_gas_amount = max_gas_amount;\n    this.gas_unit_price = gas_unit_price;\n    this.expiration_timestamp_secs = expiration_timestamp_secs;\n    this.chain_id = chain_id;\n  }\n  serialize(serializer) {\n    this.sender.serialize(serializer);\n    serializer.serializeU64(this.sequence_number);\n    this.payload.serialize(serializer);\n    serializer.serializeU64(this.max_gas_amount);\n    serializer.serializeU64(this.gas_unit_price);\n    serializer.serializeU64(this.expiration_timestamp_secs);\n    this.chain_id.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const sender = AccountAddress.deserialize(deserializer);\n    const sequence_number = deserializer.deserializeU64();\n    const payload = TransactionPayload.deserialize(deserializer);\n    const max_gas_amount = deserializer.deserializeU64();\n    const gas_unit_price = deserializer.deserializeU64();\n    const expiration_timestamp_secs = deserializer.deserializeU64();\n    const chain_id = ChainId.deserialize(deserializer);\n    return new RawTransaction(\n      sender,\n      sequence_number,\n      payload,\n      max_gas_amount,\n      gas_unit_price,\n      expiration_timestamp_secs,\n      chain_id\n    );\n  }\n};\nvar Script = class {\n  constructor(code, ty_args, args) {\n    this.code = code;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.code);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static deserialize(deserializer) {\n    const code = deserializer.deserializeBytes();\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const args = deserializeVector(deserializer, TransactionArgument);\n    return new Script(code, ty_args, args);\n  }\n};\nvar EntryFunction = class {\n  constructor(module_name, function_name, ty_args, args) {\n    this.module_name = module_name;\n    this.function_name = function_name;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  static natural(module, func, ty_args, args) {\n    return new EntryFunction(ModuleId.fromStr(module), new Identifier(func), ty_args, args);\n  }\n  static natual(module, func, ty_args, args) {\n    return EntryFunction.natural(module, func, ty_args, args);\n  }\n  serialize(serializer) {\n    this.module_name.serialize(serializer);\n    this.function_name.serialize(serializer);\n    serializeVector(this.ty_args, serializer);\n    serializer.serializeU32AsUleb128(this.args.length);\n    this.args.forEach((item) => {\n      serializer.serializeBytes(item);\n    });\n  }\n  static deserialize(deserializer) {\n    const module_name = ModuleId.deserialize(deserializer);\n    const function_name = Identifier.deserialize(deserializer);\n    const ty_args = deserializeVector(deserializer, TypeTag);\n    const length = deserializer.deserializeUleb128AsU32();\n    const list = [];\n    for (let i = 0; i < length; i += 1) {\n      list.push(deserializer.deserializeBytes());\n    }\n    const args = list;\n    return new EntryFunction(module_name, function_name, ty_args, args);\n  }\n};\nvar MultiSigTransactionPayload = class {\n  constructor(transaction_payload) {\n    this.transaction_payload = transaction_payload;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.transaction_payload.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    deserializer.deserializeUleb128AsU32();\n    return new MultiSigTransactionPayload(EntryFunction.deserialize(deserializer));\n  }\n};\nvar MultiSig = class {\n  constructor(multisig_address, transaction_payload) {\n    this.multisig_address = multisig_address;\n    this.transaction_payload = transaction_payload;\n  }\n  serialize(serializer) {\n    this.multisig_address.serialize(serializer);\n    if (this.transaction_payload === void 0) {\n      serializer.serializeBool(false);\n    } else {\n      serializer.serializeBool(true);\n      this.transaction_payload.serialize(serializer);\n    }\n  }\n  static deserialize(deserializer) {\n    const multisig_address = AccountAddress.deserialize(deserializer);\n    const payloadPresent = deserializer.deserializeBool();\n    let transaction_payload;\n    if (payloadPresent) {\n      transaction_payload = MultiSigTransactionPayload.deserialize(deserializer);\n    }\n    return new MultiSig(multisig_address, transaction_payload);\n  }\n};\nvar Module = class {\n  constructor(code) {\n    this.code = code;\n  }\n  serialize(serializer) {\n    serializer.serializeBytes(this.code);\n  }\n  static deserialize(deserializer) {\n    const code = deserializer.deserializeBytes();\n    return new Module(code);\n  }\n};\nvar ModuleId = class {\n  constructor(address, name) {\n    this.address = address;\n    this.name = name;\n  }\n  static fromStr(moduleId) {\n    const parts = moduleId.split(\"::\");\n    if (parts.length !== 2) {\n      throw new Error(\"Invalid module id.\");\n    }\n    return new ModuleId(AccountAddress.fromHex(new HexString(parts[0])), new Identifier(parts[1]));\n  }\n  serialize(serializer) {\n    this.address.serialize(serializer);\n    this.name.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const address = AccountAddress.deserialize(deserializer);\n    const name = Identifier.deserialize(deserializer);\n    return new ModuleId(address, name);\n  }\n};\nvar ChangeSet = class {\n  serialize(serializer) {\n    throw new Error(\"Not implemented.\");\n  }\n  static deserialize(deserializer) {\n    throw new Error(\"Not implemented.\");\n  }\n};\nvar WriteSet = class {\n  serialize(serializer) {\n    throw new Error(\"Not implmented.\");\n  }\n  static deserialize(deserializer) {\n    throw new Error(\"Not implmented.\");\n  }\n};\nvar SignedTransaction = class {\n  constructor(raw_txn, authenticator) {\n    this.raw_txn = raw_txn;\n    this.authenticator = authenticator;\n  }\n  serialize(serializer) {\n    this.raw_txn.serialize(serializer);\n    this.authenticator.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const raw_txn = RawTransaction.deserialize(deserializer);\n    const authenticator = TransactionAuthenticator.deserialize(deserializer);\n    return new SignedTransaction(raw_txn, authenticator);\n  }\n};\nvar RawTransactionWithData = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return MultiAgentRawTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for RawTransactionWithData: ${index}`);\n    }\n  }\n};\nvar MultiAgentRawTransaction = class extends RawTransactionWithData {\n  constructor(raw_txn, secondary_signer_addresses) {\n    super();\n    this.raw_txn = raw_txn;\n    this.secondary_signer_addresses = secondary_signer_addresses;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.raw_txn.serialize(serializer);\n    serializeVector(this.secondary_signer_addresses, serializer);\n  }\n  static load(deserializer) {\n    const rawTxn = RawTransaction.deserialize(deserializer);\n    const secondarySignerAddresses = deserializeVector(deserializer, AccountAddress);\n    return new MultiAgentRawTransaction(rawTxn, secondarySignerAddresses);\n  }\n};\nvar TransactionPayload = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionPayloadScript.load(deserializer);\n      case 2:\n        return TransactionPayloadEntryFunction.load(deserializer);\n      case 3:\n        return TransactionPayloadMultisig.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n};\nvar TransactionPayloadScript = class extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = Script.deserialize(deserializer);\n    return new TransactionPayloadScript(value);\n  }\n};\nvar TransactionPayloadEntryFunction = class extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = EntryFunction.deserialize(deserializer);\n    return new TransactionPayloadEntryFunction(value);\n  }\n};\nvar TransactionPayloadMultisig = class extends TransactionPayload {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = MultiSig.deserialize(deserializer);\n    return new TransactionPayloadMultisig(value);\n  }\n};\nvar ChainId = class {\n  constructor(value) {\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU8(this.value);\n  }\n  static deserialize(deserializer) {\n    const value = deserializer.deserializeU8();\n    return new ChainId(value);\n  }\n};\nvar TransactionArgument = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionArgumentU8.load(deserializer);\n      case 1:\n        return TransactionArgumentU64.load(deserializer);\n      case 2:\n        return TransactionArgumentU128.load(deserializer);\n      case 3:\n        return TransactionArgumentAddress.load(deserializer);\n      case 4:\n        return TransactionArgumentU8Vector.load(deserializer);\n      case 5:\n        return TransactionArgumentBool.load(deserializer);\n      case 6:\n        return TransactionArgumentU16.load(deserializer);\n      case 7:\n        return TransactionArgumentU32.load(deserializer);\n      case 8:\n        return TransactionArgumentU256.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionArgument: ${index}`);\n    }\n  }\n};\nvar TransactionArgumentU8 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeU8(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU8();\n    return new TransactionArgumentU8(value);\n  }\n};\nvar TransactionArgumentU16 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(6);\n    serializer.serializeU16(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU16();\n    return new TransactionArgumentU16(value);\n  }\n};\nvar TransactionArgumentU32 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(7);\n    serializer.serializeU32(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU32();\n    return new TransactionArgumentU32(value);\n  }\n};\nvar TransactionArgumentU64 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeU64(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU64();\n    return new TransactionArgumentU64(value);\n  }\n};\nvar TransactionArgumentU128 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(2);\n    serializer.serializeU128(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU128();\n    return new TransactionArgumentU128(value);\n  }\n};\nvar TransactionArgumentU256 = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(8);\n    serializer.serializeU256(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeU256();\n    return new TransactionArgumentU256(value);\n  }\n};\nvar TransactionArgumentAddress = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(3);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    const value = AccountAddress.deserialize(deserializer);\n    return new TransactionArgumentAddress(value);\n  }\n};\nvar TransactionArgumentU8Vector = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(4);\n    serializer.serializeBytes(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeBytes();\n    return new TransactionArgumentU8Vector(value);\n  }\n};\nvar TransactionArgumentBool = class extends TransactionArgument {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(5);\n    serializer.serializeBool(this.value);\n  }\n  static load(deserializer) {\n    const value = deserializer.deserializeBool();\n    return new TransactionArgumentBool(value);\n  }\n};\nvar Transaction = class {\n  getHashSalt() {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    hash.update(\"APTOS::Transaction\");\n    return hash.digest();\n  }\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return UserTransaction.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for Transaction: ${index}`);\n    }\n  }\n};\nvar UserTransaction = class extends Transaction {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  hash() {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    hash.update(this.getHashSalt());\n    hash.update(bcsToBytes(this));\n    return hash.digest();\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    this.value.serialize(serializer);\n  }\n  static load(deserializer) {\n    return new UserTransaction(SignedTransaction.deserialize(deserializer));\n  }\n};\n\n// src/aptos_types/abi.ts\nvar TypeArgumentABI = class {\n  constructor(name) {\n    this.name = name;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.name);\n  }\n  static deserialize(deserializer) {\n    const name = deserializer.deserializeStr();\n    return new TypeArgumentABI(name);\n  }\n};\nvar ArgumentABI = class {\n  constructor(name, type_tag) {\n    this.name = name;\n    this.type_tag = type_tag;\n  }\n  serialize(serializer) {\n    serializer.serializeStr(this.name);\n    this.type_tag.serialize(serializer);\n  }\n  static deserialize(deserializer) {\n    const name = deserializer.deserializeStr();\n    const typeTag = TypeTag.deserialize(deserializer);\n    return new ArgumentABI(name, typeTag);\n  }\n};\nvar ScriptABI = class {\n  static deserialize(deserializer) {\n    const index = deserializer.deserializeUleb128AsU32();\n    switch (index) {\n      case 0:\n        return TransactionScriptABI.load(deserializer);\n      case 1:\n        return EntryFunctionABI.load(deserializer);\n      default:\n        throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n    }\n  }\n};\nvar TransactionScriptABI = class extends ScriptABI {\n  constructor(name, doc, code, ty_args, args) {\n    super();\n    this.name = name;\n    this.doc = doc;\n    this.code = code;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(0);\n    serializer.serializeStr(this.name);\n    serializer.serializeStr(this.doc);\n    serializer.serializeBytes(this.code);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static load(deserializer) {\n    const name = deserializer.deserializeStr();\n    const doc = deserializer.deserializeStr();\n    const code = deserializer.deserializeBytes();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new TransactionScriptABI(name, doc, code, tyArgs, args);\n  }\n};\nvar EntryFunctionABI = class extends ScriptABI {\n  constructor(name, module_name, doc, ty_args, args) {\n    super();\n    this.name = name;\n    this.module_name = module_name;\n    this.doc = doc;\n    this.ty_args = ty_args;\n    this.args = args;\n  }\n  serialize(serializer) {\n    serializer.serializeU32AsUleb128(1);\n    serializer.serializeStr(this.name);\n    this.module_name.serialize(serializer);\n    serializer.serializeStr(this.doc);\n    serializeVector(this.ty_args, serializer);\n    serializeVector(this.args, serializer);\n  }\n  static load(deserializer) {\n    const name = deserializer.deserializeStr();\n    const moduleName = ModuleId.deserialize(deserializer);\n    const doc = deserializer.deserializeStr();\n    const tyArgs = deserializeVector(deserializer, TypeArgumentABI);\n    const args = deserializeVector(deserializer, ArgumentABI);\n    return new EntryFunctionABI(name, moduleName, doc, tyArgs, args);\n  }\n};\n\n// src/aptos_types/authentication_key.ts\n\nvar _AuthenticationKey = class {\n  constructor(bytes) {\n    if (bytes.length !== _AuthenticationKey.LENGTH) {\n      throw new Error(\"Expected a byte array of length 32\");\n    }\n    this.bytes = bytes;\n  }\n  static fromMultiEd25519PublicKey(publicKey) {\n    const pubKeyBytes = publicKey.toBytes();\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([_AuthenticationKey.MULTI_ED25519_SCHEME], pubKeyBytes.length);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    hash.update(bytes);\n    return new _AuthenticationKey(hash.digest());\n  }\n  static fromEd25519PublicKey(publicKey) {\n    const pubKeyBytes = publicKey.value;\n    const bytes = new Uint8Array(pubKeyBytes.length + 1);\n    bytes.set(pubKeyBytes);\n    bytes.set([_AuthenticationKey.ED25519_SCHEME], pubKeyBytes.length);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    hash.update(bytes);\n    return new _AuthenticationKey(hash.digest());\n  }\n  derivedAddress() {\n    return HexString.fromUint8Array(this.bytes);\n  }\n};\nvar AuthenticationKey = _AuthenticationKey;\nAuthenticationKey.LENGTH = 32;\nAuthenticationKey.MULTI_ED25519_SCHEME = 1;\nAuthenticationKey.ED25519_SCHEME = 0;\nAuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME = 255;\n\n// src/aptos_types/rotation_proof_challenge.ts\nvar RotationProofChallenge = class {\n  constructor(accountAddress, moduleName, structName, sequenceNumber, originator, currentAuthKey, newPublicKey) {\n    this.accountAddress = accountAddress;\n    this.moduleName = moduleName;\n    this.structName = structName;\n    this.sequenceNumber = sequenceNumber;\n    this.originator = originator;\n    this.currentAuthKey = currentAuthKey;\n    this.newPublicKey = newPublicKey;\n  }\n  serialize(serializer) {\n    this.accountAddress.serialize(serializer);\n    serializer.serializeStr(this.moduleName);\n    serializer.serializeStr(this.structName);\n    serializer.serializeU64(this.sequenceNumber);\n    this.originator.serialize(serializer);\n    this.currentAuthKey.serialize(serializer);\n    serializer.serializeBytes(this.newPublicKey);\n  }\n};\n\n// src/account/aptos_account.ts\nvar _AptosAccount = class {\n  static fromAptosAccountObject(obj) {\n    return new _AptosAccount(HexString.ensure(obj.privateKeyHex).toUint8Array(), obj.address);\n  }\n  static isValidPath(path) {\n    return /^m\\/44'\\/637'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$/.test(path);\n  }\n  static fromDerivePath(path, mnemonics) {\n    if (!_AptosAccount.isValidPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const normalizeMnemonics = mnemonics.trim().split(/\\s+/).map((part) => part.toLowerCase()).join(\" \");\n    const { key } = derivePath(path, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(_scure_bip39__WEBPACK_IMPORTED_MODULE_1__.mnemonicToSeedSync(normalizeMnemonics)));\n    return new _AptosAccount(key);\n  }\n  constructor(privateKeyBytes, address) {\n    if (privateKeyBytes) {\n      this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(privateKeyBytes.slice(0, 32));\n    } else {\n      this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair();\n    }\n    this.accountAddress = HexString.ensure(address || this.authKey().hex());\n  }\n  address() {\n    return this.accountAddress;\n  }\n  authKey() {\n    const pubKey = new Ed25519PublicKey(this.signingKey.publicKey);\n    const authKey = AuthenticationKey.fromEd25519PublicKey(pubKey);\n    return authKey.derivedAddress();\n  }\n  static getResourceAccountAddress(sourceAddress, seed) {\n    const source = bcsToBytes(AccountAddress.fromHex(sourceAddress));\n    const bytes = new Uint8Array([...source, ...seed, AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME]);\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    hash.update(bytes);\n    return HexString.fromUint8Array(hash.digest());\n  }\n  pubKey() {\n    return HexString.fromUint8Array(this.signingKey.publicKey);\n  }\n  signBuffer(buffer) {\n    const signature = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached(buffer, this.signingKey.secretKey);\n    return HexString.fromUint8Array(signature);\n  }\n  signHexString(hexString) {\n    const toSign = HexString.ensure(hexString).toUint8Array();\n    return this.signBuffer(toSign);\n  }\n  verifySignature(message, signature) {\n    const rawMessage = HexString.ensure(message).toUint8Array();\n    const rawSignature = HexString.ensure(signature).toUint8Array();\n    return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached.verify(rawMessage, rawSignature, this.signingKey.publicKey);\n  }\n  toPrivateKeyObject() {\n    return {\n      address: this.address().hex(),\n      publicKeyHex: this.pubKey().hex(),\n      privateKeyHex: HexString.fromUint8Array(this.signingKey.secretKey.slice(0, 32)).hex()\n    };\n  }\n};\nvar AptosAccount = _AptosAccount;\n__decorateClass([\n  Memoize()\n], AptosAccount.prototype, \"authKey\", 1);\nfunction getAddressFromAccountOrAddress(accountOrAddress) {\n  return accountOrAddress instanceof AptosAccount ? accountOrAddress.address() : HexString.ensure(accountOrAddress);\n}\n\n// src/providers/indexer.ts\n\n\n// src/indexer/generated/queries.ts\nvar TokenDataFieldsFragmentDoc = `\n    fragment TokenDataFields on current_token_datas {\n  creator_address\n  collection_name\n  description\n  metadata_uri\n  name\n  token_data_id_hash\n  collection_data_id_hash\n}\n    `;\nvar CollectionDataFieldsFragmentDoc = `\n    fragment CollectionDataFields on current_collection_datas {\n  metadata_uri\n  supply\n  description\n  collection_name\n  collection_data_id_hash\n  table_handle\n  creator_address\n}\n    `;\nvar GetAccountCoinsData = `\n    query getAccountCoinsData($owner_address: String, $offset: Int, $limit: Int) {\n  current_coin_balances(\n    where: {owner_address: {_eq: $owner_address}}\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    coin_type\n    coin_info {\n      name\n      decimals\n      symbol\n    }\n  }\n}\n    `;\nvar GetAccountCurrentTokens = `\n    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {\n  current_token_ownerships(\n    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}\n    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]\n    offset: $offset\n    limit: $limit\n  ) {\n    amount\n    current_token_data {\n      ...TokenDataFields\n    }\n    current_collection_data {\n      ...CollectionDataFields\n    }\n    last_transaction_version\n    property_version\n  }\n}\n    ${TokenDataFieldsFragmentDoc}\n${CollectionDataFieldsFragmentDoc}`;\nvar GetAccountTokensCount = `\n    query getAccountTokensCount($owner_address: String) {\n  current_token_ownerships_aggregate(\n    where: {owner_address: {_eq: $owner_address}, amount: {_gt: \"0\"}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetAccountTransactionsCount = `\n    query getAccountTransactionsCount($address: String) {\n  move_resources_aggregate(\n    where: {address: {_eq: $address}}\n    distinct_on: transaction_version\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetAccountTransactionsData = `\n    query getAccountTransactionsData($address: String, $limit: Int, $offset: Int) {\n  move_resources(\n    where: {address: {_eq: $address}}\n    order_by: {transaction_version: desc}\n    distinct_on: transaction_version\n    limit: $limit\n    offset: $offset\n  ) {\n    transaction_version\n  }\n}\n    `;\nvar GetCurrentDelegatorBalancesCount = `\n    query getCurrentDelegatorBalancesCount($poolAddress: String) {\n  current_delegator_balances_aggregate(\n    where: {pool_type: {_eq: \"active_shares\"}, pool_address: {_eq: $poolAddress}, amount: {_gt: \"0\"}}\n    distinct_on: delegator_address\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetDelegatedStakingActivities = `\n    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {\n  delegated_staking_activities(\n    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}\n  ) {\n    amount\n    delegator_address\n    event_index\n    event_type\n    pool_address\n    transaction_version\n  }\n}\n    `;\nvar GetIndexerLedgerInfo = `\n    query getIndexerLedgerInfo {\n  ledger_infos {\n    chain_id\n  }\n}\n    `;\nvar GetTokenActivities = `\n    query getTokenActivities($idHash: String!, $offset: Int, $limit: Int) {\n  token_activities(\n    where: {token_data_id_hash: {_eq: $idHash}}\n    order_by: {transaction_version: desc}\n    offset: $offset\n    limit: $limit\n  ) {\n    creator_address\n    collection_name\n    name\n    token_data_id_hash\n    collection_data_id_hash\n    from_address\n    to_address\n    transaction_version\n    transaction_timestamp\n    property_version\n    transfer_type\n    event_sequence_number\n    token_amount\n  }\n}\n    `;\nvar GetTokenActivitiesCount = `\n    query getTokenActivitiesCount($token_id: String) {\n  token_activities_aggregate(where: {token_data_id_hash: {_eq: $token_id}}) {\n    aggregate {\n      count\n    }\n  }\n}\n    `;\nvar GetTokenData = `\n    query getTokenData($token_id: String) {\n  current_token_datas(where: {token_data_id_hash: {_eq: $token_id}}) {\n    token_data_id_hash\n    name\n    collection_name\n    creator_address\n    default_properties\n    largest_property_version\n    maximum\n    metadata_uri\n    payee_address\n    royalty_points_denominator\n    royalty_points_numerator\n    supply\n  }\n}\n    `;\nvar GetTokenOwnersData = `\n    query getTokenOwnersData($token_id: String, $property_version: numeric) {\n  current_token_ownerships(\n    where: {token_data_id_hash: {_eq: $token_id}, property_version: {_eq: $property_version}}\n  ) {\n    owner_address\n  }\n}\n    `;\nvar GetTopUserTransactions = `\n    query getTopUserTransactions($limit: Int) {\n  user_transactions(limit: $limit, order_by: {version: desc}) {\n    version\n  }\n}\n    `;\nvar GetUserTransactions = `\n    query getUserTransactions($limit: Int, $start_version: bigint, $offset: Int) {\n  user_transactions(\n    limit: $limit\n    order_by: {version: desc}\n    where: {version: {_lte: $start_version}}\n    offset: $offset\n  ) {\n    version\n  }\n}\n    `;\n\n// src/providers/indexer.ts\nvar IndexerClient = class {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n  }\n  static validateAddress(address) {\n    if (address.length < 66) {\n      throw new Error(\"Address needs to be 66 chars long.\");\n    }\n  }\n  async queryIndexer(graphqlQuery) {\n    const { data } = await axios__WEBPACK_IMPORTED_MODULE_6__.post(this.endpoint, graphqlQuery);\n    if (data.errors) {\n      throw new Error(`Indexer data error ${JSON.stringify(data.errors, null, \" \")}`);\n    }\n    return data.data;\n  }\n  async getIndexerLedgerInfo() {\n    const graphqlQuery = {\n      query: GetIndexerLedgerInfo\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getAccountNFTs(ownerAddress, options) {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCurrentTokens,\n      variables: { address, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getTokenActivities(idHash, options) {\n    const graphqlQuery = {\n      query: GetTokenActivities,\n      variables: { idHash, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getAccountCoinsData(ownerAddress, options) {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountCoinsData,\n      variables: { owner_address: address, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getAccountTokensCount(ownerAddress) {\n    const address = HexString.ensure(ownerAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTokensCount,\n      variables: { owner_address: address }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getAccountTransactionsCount(accountAddress) {\n    const address = HexString.ensure(accountAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTransactionsCount,\n      variables: { address }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getAccountTransactionsData(accountAddress, options) {\n    const address = HexString.ensure(accountAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetAccountTransactionsData,\n      variables: { address, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getDelegatedStakingActivities(delegatorAddress, poolAddress) {\n    const delegator = HexString.ensure(delegatorAddress).hex();\n    const pool = HexString.ensure(poolAddress).hex();\n    IndexerClient.validateAddress(delegator);\n    IndexerClient.validateAddress(pool);\n    const graphqlQuery = {\n      query: GetDelegatedStakingActivities,\n      variables: {\n        delegatorAddress: delegator,\n        poolAddress: pool\n      }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getTokenActivitiesCount(tokenId) {\n    const graphqlQuery = {\n      query: GetTokenActivitiesCount,\n      variables: { token_id: tokenId }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getTokenData(tokenId) {\n    const graphqlQuery = {\n      query: GetTokenData,\n      variables: { token_id: tokenId }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getTokenOwnersData(tokenId, propertyVersion) {\n    const graphqlQuery = {\n      query: GetTokenOwnersData,\n      variables: { token_id: tokenId, property_version: propertyVersion }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getTopUserTransactions(limit) {\n    const graphqlQuery = {\n      query: GetTopUserTransactions,\n      variables: { limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getUserTransactions(startVersion, options) {\n    const graphqlQuery = {\n      query: GetUserTransactions,\n      variables: { start_version: startVersion, offset: options == null ? void 0 : options.offset, limit: options == null ? void 0 : options.limit }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n  async getCurrentDelegatorBalancesCount(poolAddress) {\n    const address = HexString.ensure(poolAddress).hex();\n    IndexerClient.validateAddress(address);\n    const graphqlQuery = {\n      query: GetCurrentDelegatorBalancesCount,\n      variables: { poolAddress: address }\n    };\n    return this.queryIndexer(graphqlQuery);\n  }\n};\n\n// src/generated/index.ts\nvar generated_exports = {};\n__export(generated_exports, {\n  $AccountData: () => $AccountData,\n  $AccountSignature: () => $AccountSignature,\n  $AccountSignature_Ed25519Signature: () => $AccountSignature_Ed25519Signature,\n  $AccountSignature_MultiEd25519Signature: () => $AccountSignature_MultiEd25519Signature,\n  $Address: () => $Address,\n  $AptosError: () => $AptosError,\n  $AptosErrorCode: () => $AptosErrorCode,\n  $Block: () => $Block,\n  $BlockMetadataTransaction: () => $BlockMetadataTransaction,\n  $DecodedTableData: () => $DecodedTableData,\n  $DeleteModule: () => $DeleteModule,\n  $DeleteResource: () => $DeleteResource,\n  $DeleteTableItem: () => $DeleteTableItem,\n  $DeletedTableData: () => $DeletedTableData,\n  $DirectWriteSet: () => $DirectWriteSet,\n  $Ed25519Signature: () => $Ed25519Signature,\n  $EncodeSubmissionRequest: () => $EncodeSubmissionRequest,\n  $EntryFunctionId: () => $EntryFunctionId,\n  $EntryFunctionPayload: () => $EntryFunctionPayload,\n  $Event: () => $Event,\n  $EventGuid: () => $EventGuid,\n  $GasEstimation: () => $GasEstimation,\n  $GenesisPayload: () => $GenesisPayload,\n  $GenesisPayload_WriteSetPayload: () => $GenesisPayload_WriteSetPayload,\n  $GenesisTransaction: () => $GenesisTransaction,\n  $HashValue: () => $HashValue,\n  $HealthCheckSuccess: () => $HealthCheckSuccess,\n  $HexEncodedBytes: () => $HexEncodedBytes,\n  $IdentifierWrapper: () => $IdentifierWrapper,\n  $IndexResponse: () => $IndexResponse,\n  $ModuleBundlePayload: () => $ModuleBundlePayload,\n  $MoveAbility: () => $MoveAbility,\n  $MoveFunction: () => $MoveFunction,\n  $MoveFunctionGenericTypeParam: () => $MoveFunctionGenericTypeParam,\n  $MoveFunctionVisibility: () => $MoveFunctionVisibility,\n  $MoveModule: () => $MoveModule,\n  $MoveModuleBytecode: () => $MoveModuleBytecode,\n  $MoveModuleId: () => $MoveModuleId,\n  $MoveResource: () => $MoveResource,\n  $MoveScriptBytecode: () => $MoveScriptBytecode,\n  $MoveStruct: () => $MoveStruct,\n  $MoveStructField: () => $MoveStructField,\n  $MoveStructGenericTypeParam: () => $MoveStructGenericTypeParam,\n  $MoveStructTag: () => $MoveStructTag,\n  $MoveStructValue: () => $MoveStructValue,\n  $MoveType: () => $MoveType,\n  $MoveValue: () => $MoveValue,\n  $MultiAgentSignature: () => $MultiAgentSignature,\n  $MultiEd25519Signature: () => $MultiEd25519Signature,\n  $MultisigPayload: () => $MultisigPayload,\n  $MultisigTransactionPayload: () => $MultisigTransactionPayload,\n  $PendingTransaction: () => $PendingTransaction,\n  $RawTableItemRequest: () => $RawTableItemRequest,\n  $RoleType: () => $RoleType,\n  $ScriptPayload: () => $ScriptPayload,\n  $ScriptWriteSet: () => $ScriptWriteSet,\n  $StateCheckpointTransaction: () => $StateCheckpointTransaction,\n  $StateKeyWrapper: () => $StateKeyWrapper,\n  $SubmitTransactionRequest: () => $SubmitTransactionRequest,\n  $TableItemRequest: () => $TableItemRequest,\n  $Transaction: () => $Transaction,\n  $TransactionPayload: () => $TransactionPayload,\n  $TransactionPayload_EntryFunctionPayload: () => $TransactionPayload_EntryFunctionPayload,\n  $TransactionPayload_ModuleBundlePayload: () => $TransactionPayload_ModuleBundlePayload,\n  $TransactionPayload_MultisigPayload: () => $TransactionPayload_MultisigPayload,\n  $TransactionPayload_ScriptPayload: () => $TransactionPayload_ScriptPayload,\n  $TransactionSignature: () => $TransactionSignature,\n  $TransactionSignature_Ed25519Signature: () => $TransactionSignature_Ed25519Signature,\n  $TransactionSignature_MultiAgentSignature: () => $TransactionSignature_MultiAgentSignature,\n  $TransactionSignature_MultiEd25519Signature: () => $TransactionSignature_MultiEd25519Signature,\n  $Transaction_BlockMetadataTransaction: () => $Transaction_BlockMetadataTransaction,\n  $Transaction_GenesisTransaction: () => $Transaction_GenesisTransaction,\n  $Transaction_PendingTransaction: () => $Transaction_PendingTransaction,\n  $Transaction_StateCheckpointTransaction: () => $Transaction_StateCheckpointTransaction,\n  $Transaction_UserTransaction: () => $Transaction_UserTransaction,\n  $TransactionsBatchSingleSubmissionFailure: () => $TransactionsBatchSingleSubmissionFailure,\n  $TransactionsBatchSubmissionResult: () => $TransactionsBatchSubmissionResult,\n  $U128: () => $U128,\n  $U256: () => $U256,\n  $U64: () => $U64,\n  $UserTransaction: () => $UserTransaction,\n  $VersionedEvent: () => $VersionedEvent,\n  $ViewRequest: () => $ViewRequest,\n  $WriteModule: () => $WriteModule,\n  $WriteResource: () => $WriteResource,\n  $WriteSet: () => $WriteSet,\n  $WriteSetChange: () => $WriteSetChange,\n  $WriteSetChange_DeleteModule: () => $WriteSetChange_DeleteModule,\n  $WriteSetChange_DeleteResource: () => $WriteSetChange_DeleteResource,\n  $WriteSetChange_DeleteTableItem: () => $WriteSetChange_DeleteTableItem,\n  $WriteSetChange_WriteModule: () => $WriteSetChange_WriteModule,\n  $WriteSetChange_WriteResource: () => $WriteSetChange_WriteResource,\n  $WriteSetChange_WriteTableItem: () => $WriteSetChange_WriteTableItem,\n  $WriteSetPayload: () => $WriteSetPayload,\n  $WriteSet_DirectWriteSet: () => $WriteSet_DirectWriteSet,\n  $WriteSet_ScriptWriteSet: () => $WriteSet_ScriptWriteSet,\n  $WriteTableItem: () => $WriteTableItem,\n  AccountsService: () => AccountsService,\n  ApiError: () => ApiError,\n  AptosErrorCode: () => AptosErrorCode,\n  AptosGeneratedClient: () => AptosGeneratedClient,\n  BaseHttpRequest: () => BaseHttpRequest,\n  BlocksService: () => BlocksService,\n  CancelError: () => CancelError,\n  CancelablePromise: () => CancelablePromise,\n  EventsService: () => EventsService,\n  GeneralService: () => GeneralService,\n  MoveFunctionVisibility: () => MoveFunctionVisibility,\n  OpenAPI: () => OpenAPI,\n  RoleType: () => RoleType,\n  TablesService: () => TablesService,\n  TransactionsService: () => TransactionsService,\n  ViewService: () => ViewService\n});\n\n// src/generated/core/BaseHttpRequest.ts\nvar BaseHttpRequest = class {\n  constructor(config) {\n    this.config = config;\n  }\n};\n\n// src/generated/core/request.ts\n\n\n\n// src/generated/core/ApiError.ts\nvar ApiError = class extends Error {\n  constructor(request2, response, message) {\n    super(message);\n    this.name = \"ApiError\";\n    this.url = response.url;\n    this.status = response.status;\n    this.statusText = response.statusText;\n    this.body = response.body;\n    this.request = request2;\n  }\n};\n\n// src/generated/core/CancelablePromise.ts\nvar CancelError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"CancelError\";\n  }\n  get isCancelled() {\n    return true;\n  }\n};\nvar CancelablePromise = class {\n  constructor(executor) {\n    this._isResolved = false;\n    this._isRejected = false;\n    this._isCancelled = false;\n    this._cancelHandlers = [];\n    this._promise = new Promise((resolve2, reject) => {\n      this._resolve = resolve2;\n      this._reject = reject;\n      const onResolve = (value) => {\n        var _a;\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n        this._isResolved = true;\n        (_a = this._resolve) == null ? void 0 : _a.call(this, value);\n      };\n      const onReject = (reason) => {\n        var _a;\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n        this._isRejected = true;\n        (_a = this._reject) == null ? void 0 : _a.call(this, reason);\n      };\n      const onCancel = (cancelHandler) => {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n          return;\n        }\n        this._cancelHandlers.push(cancelHandler);\n      };\n      Object.defineProperty(onCancel, \"isResolved\", {\n        get: () => this._isResolved\n      });\n      Object.defineProperty(onCancel, \"isRejected\", {\n        get: () => this._isRejected\n      });\n      Object.defineProperty(onCancel, \"isCancelled\", {\n        get: () => this._isCancelled\n      });\n      return executor(onResolve, onReject, onCancel);\n    });\n  }\n  then(onFulfilled, onRejected) {\n    return this._promise.then(onFulfilled, onRejected);\n  }\n  catch(onRejected) {\n    return this._promise.catch(onRejected);\n  }\n  finally(onFinally) {\n    return this._promise.finally(onFinally);\n  }\n  cancel() {\n    var _a;\n    if (this._isResolved || this._isRejected || this._isCancelled) {\n      return;\n    }\n    this._isCancelled = true;\n    if (this._cancelHandlers.length) {\n      try {\n        for (const cancelHandler of this._cancelHandlers) {\n          cancelHandler();\n        }\n      } catch (error) {\n        console.warn(\"Cancellation threw an error\", error);\n        return;\n      }\n    }\n    this._cancelHandlers.length = 0;\n    (_a = this._reject) == null ? void 0 : _a.call(this, new CancelError(\"Request aborted\"));\n  }\n  get isCancelled() {\n    return this._isCancelled;\n  }\n};\nSymbol.toStringTag;\n\n// src/generated/core/request.ts\nvar CookieJar = class {\n  constructor(jar2 = /* @__PURE__ */ new Map()) {\n    this.jar = jar2;\n  }\n  setCookie(url, cookieStr) {\n    var _a;\n    const key = url.origin.toLowerCase();\n    if (!this.jar.has(key)) {\n      this.jar.set(key, []);\n    }\n    const cookie = CookieJar.parse(cookieStr);\n    this.jar.set(key, [...((_a = this.jar.get(key)) == null ? void 0 : _a.filter((c) => c.name !== cookie.name)) || [], cookie]);\n  }\n  getCookies(url) {\n    var _a;\n    const key = url.origin.toLowerCase();\n    if (!this.jar.get(key)) {\n      return [];\n    }\n    return ((_a = this.jar.get(key)) == null ? void 0 : _a.filter((cookie) => !cookie.expires || cookie.expires > new Date())) || [];\n  }\n  static parse(str) {\n    if (typeof str !== \"string\") {\n      throw new Error(\"argument str must be a string\");\n    }\n    const parts = str.split(\";\").map((part) => part.trim());\n    let cookie;\n    if (parts.length > 0) {\n      const [name, value] = parts[0].split(\"=\");\n      if (!name || !value) {\n        throw new Error(\"Invalid cookie\");\n      }\n      cookie = {\n        name,\n        value\n      };\n    } else {\n      throw new Error(\"Invalid cookie\");\n    }\n    parts.slice(1).forEach((part) => {\n      const [name, value] = part.split(\"=\");\n      if (!name.trim()) {\n        throw new Error(\"Invalid cookie\");\n      }\n      const nameLow = name.toLowerCase();\n      const val = (value == null ? void 0 : value.charAt(0)) === \"'\" || (value == null ? void 0 : value.charAt(0)) === '\"' ? value == null ? void 0 : value.slice(1, -1) : value;\n      if (nameLow === \"expires\") {\n        cookie.expires = new Date(val);\n      }\n      if (nameLow === \"path\") {\n        cookie.path = val;\n      }\n      if (nameLow === \"samesite\") {\n        if (val !== \"Lax\" && val !== \"None\" && val !== \"Strict\") {\n          throw new Error(\"Invalid cookie SameSite value\");\n        }\n        cookie.sameSite = val;\n      }\n      if (nameLow === \"secure\") {\n        cookie.secure = true;\n      }\n    });\n    return cookie;\n  }\n};\nvar jar = new CookieJar();\naxios__WEBPACK_IMPORTED_MODULE_6__.interceptors.response.use((response) => {\n  if (Array.isArray(response.headers[\"set-cookie\"])) {\n    response.headers[\"set-cookie\"].forEach((c) => {\n      jar.setCookie(new URL(response.config.url), c);\n    });\n  }\n  return response;\n});\naxios__WEBPACK_IMPORTED_MODULE_6__.interceptors.request.use(function(config) {\n  const cookies = jar.getCookies(new URL(config.url));\n  if ((cookies == null ? void 0 : cookies.length) > 0 && config.headers) {\n    config.headers.cookie = cookies.map((cookie) => `${cookie.name}=${cookie.value}`).join(\"; \");\n  }\n  return config;\n});\nvar isDefined = (value) => {\n  return value !== void 0 && value !== null;\n};\nvar isString = (value) => {\n  return typeof value === \"string\";\n};\nvar isStringWithValue = (value) => {\n  return isString(value) && value !== \"\";\n};\nvar isBlob = (value) => {\n  return typeof value === \"object\" && typeof value.type === \"string\" && typeof value.stream === \"function\" && typeof value.arrayBuffer === \"function\" && typeof value.constructor === \"function\" && typeof value.constructor.name === \"string\" && /^(Blob|File)$/.test(value.constructor.name) && /^(Blob|File)$/.test(value[Symbol.toStringTag]);\n};\nvar isFormData = (value) => {\n  return value instanceof form_data__WEBPACK_IMPORTED_MODULE_7__;\n};\nvar isSuccess = (status) => {\n  return status >= 200 && status < 300;\n};\nvar base64 = (str) => {\n  return btoa(str);\n};\nvar getQueryString = (params) => {\n  const qs = [];\n  const append = (key, value) => {\n    qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n  };\n  const process = (key, value) => {\n    if (isDefined(value)) {\n      if (Array.isArray(value)) {\n        value.forEach((v) => {\n          process(key, v);\n        });\n      } else if (typeof value === \"object\") {\n        Object.entries(value).forEach(([k, v]) => {\n          process(`${key}[${k}]`, v);\n        });\n      } else {\n        append(key, value);\n      }\n    }\n  };\n  Object.entries(params).forEach(([key, value]) => {\n    process(key, value);\n  });\n  if (qs.length > 0) {\n    return `?${qs.join(\"&\")}`;\n  }\n  return \"\";\n};\nvar getUrl = (config, options) => {\n  const encoder = config.ENCODE_PATH || encodeURI;\n  const path = options.url.replace(\"{api-version}\", config.VERSION).replace(/{(.*?)}/g, (substring, group) => {\n    var _a;\n    if ((_a = options.path) == null ? void 0 : _a.hasOwnProperty(group)) {\n      return encoder(String(options.path[group]));\n    }\n    return substring;\n  });\n  const url = `${config.BASE}${path}`;\n  if (options.query) {\n    return `${url}${getQueryString(options.query)}`;\n  }\n  return url;\n};\nvar getFormData = (options) => {\n  if (options.formData) {\n    const formData = new form_data__WEBPACK_IMPORTED_MODULE_7__();\n    const process = (key, value) => {\n      if (isString(value) || isBlob(value)) {\n        formData.append(key, value);\n      } else {\n        formData.append(key, JSON.stringify(value));\n      }\n    };\n    Object.entries(options.formData).filter(([_, value]) => isDefined(value)).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        value.forEach((v) => process(key, v));\n      } else {\n        process(key, value);\n      }\n    });\n    return formData;\n  }\n  return void 0;\n};\nvar resolve = async (options, resolver) => {\n  if (typeof resolver === \"function\") {\n    return resolver(options);\n  }\n  return resolver;\n};\nvar getHeaders = async (config, options, formData) => {\n  const token = await resolve(options, config.TOKEN);\n  const username = await resolve(options, config.USERNAME);\n  const password = await resolve(options, config.PASSWORD);\n  const additionalHeaders = await resolve(options, config.HEADERS);\n  const formHeaders = typeof (formData == null ? void 0 : formData.getHeaders) === \"function\" && (formData == null ? void 0 : formData.getHeaders()) || {};\n  const headers = Object.entries({\n    Accept: \"application/json\",\n    ...additionalHeaders,\n    ...options.headers,\n    ...formHeaders\n  }).filter(([_, value]) => isDefined(value)).reduce((headers2, [key, value]) => ({\n    ...headers2,\n    [key]: String(value)\n  }), {});\n  if (isStringWithValue(token)) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  if (isStringWithValue(username) && isStringWithValue(password)) {\n    const credentials = base64(`${username}:${password}`);\n    headers[\"Authorization\"] = `Basic ${credentials}`;\n  }\n  if (options.body) {\n    if (options.mediaType) {\n      headers[\"Content-Type\"] = options.mediaType;\n    } else if (isBlob(options.body)) {\n      headers[\"Content-Type\"] = options.body.type || \"application/octet-stream\";\n    } else if (isString(options.body)) {\n      headers[\"Content-Type\"] = \"text/plain\";\n    } else if (!isFormData(options.body)) {\n      headers[\"Content-Type\"] = \"application/json\";\n    }\n  }\n  return headers;\n};\nvar getRequestBody = (options) => {\n  if (options.body) {\n    return options.body;\n  }\n  return void 0;\n};\nvar sendRequest = async (config, options, url, body, formData, headers, onCancel) => {\n  const source = axios__WEBPACK_IMPORTED_MODULE_6__.CancelToken.source();\n  const requestConfig = {\n    url,\n    headers,\n    data: body != null ? body : formData,\n    method: options.method,\n    withCredentials: config.WITH_CREDENTIALS,\n    cancelToken: source.token\n  };\n  const isBCS = Object.keys(config.HEADERS || {}).filter((k) => k.toLowerCase() === \"accept\").map((k) => config.HEADERS[k]).includes(\"application/x-bcs\");\n  if (isBCS) {\n    requestConfig.responseType = \"arraybuffer\";\n  }\n  onCancel(() => source.cancel(\"The user aborted a request.\"));\n  try {\n    return await axios__WEBPACK_IMPORTED_MODULE_6__.request(requestConfig);\n  } catch (error) {\n    const axiosError = error;\n    if (axiosError.response) {\n      return axiosError.response;\n    }\n    throw error;\n  }\n};\nvar getResponseHeader = (response, responseHeader) => {\n  if (responseHeader) {\n    const content = response.headers[responseHeader];\n    if (isString(content)) {\n      return content;\n    }\n  }\n  return void 0;\n};\nvar getResponseBody = (response) => {\n  if (response.status !== 204) {\n    return response.data;\n  }\n  return void 0;\n};\nvar catchErrorCodes = (options, result) => {\n  const errors = {\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    429: \"Too Many Requests\",\n    500: \"Internal Server Error\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    ...options.errors\n  };\n  const error = errors[result.status];\n  if (error) {\n    throw new ApiError(options, result, error);\n  }\n  if (!result.ok) {\n    throw new ApiError(options, result, \"Generic Error\");\n  }\n};\nvar request = (config, options) => {\n  return new CancelablePromise(async (resolve2, reject, onCancel) => {\n    try {\n      const url = getUrl(config, options);\n      const formData = getFormData(options);\n      const body = getRequestBody(options);\n      const headers = await getHeaders(config, options, formData);\n      if (!onCancel.isCancelled) {\n        const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n        const responseBody = getResponseBody(response);\n        const responseHeader = getResponseHeader(response, options.responseHeader);\n        const result = {\n          url,\n          ok: isSuccess(response.status),\n          status: response.status,\n          statusText: response.statusText,\n          body: responseHeader != null ? responseHeader : responseBody\n        };\n        catchErrorCodes(options, result);\n        const out = result.body;\n        try {\n          out[\"__headers\"] = response.headers;\n        } catch (_) {\n        }\n        resolve2(out);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n// src/generated/core/AxiosHttpRequest.ts\nvar AxiosHttpRequest = class extends BaseHttpRequest {\n  constructor(config) {\n    super(config);\n  }\n  request(options) {\n    return request(this.config, options);\n  }\n};\n\n// src/generated/services/AccountsService.ts\nvar AccountsService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  getAccount(address, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}\",\n      path: {\n        \"address\": address\n      },\n      query: {\n        \"ledger_version\": ledgerVersion\n      }\n    });\n  }\n  getAccountResources(address, ledgerVersion, start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/resources\",\n      path: {\n        \"address\": address\n      },\n      query: {\n        \"ledger_version\": ledgerVersion,\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n  getAccountModules(address, ledgerVersion, start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/modules\",\n      path: {\n        \"address\": address\n      },\n      query: {\n        \"ledger_version\": ledgerVersion,\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n  getAccountResource(address, resourceType, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/resource/{resource_type}\",\n      path: {\n        \"address\": address,\n        \"resource_type\": resourceType\n      },\n      query: {\n        \"ledger_version\": ledgerVersion\n      }\n    });\n  }\n  getAccountModule(address, moduleName, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/module/{module_name}\",\n      path: {\n        \"address\": address,\n        \"module_name\": moduleName\n      },\n      query: {\n        \"ledger_version\": ledgerVersion\n      }\n    });\n  }\n};\n\n// src/generated/services/BlocksService.ts\nvar BlocksService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  getBlockByHeight(blockHeight, withTransactions) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/blocks/by_height/{block_height}\",\n      path: {\n        \"block_height\": blockHeight\n      },\n      query: {\n        \"with_transactions\": withTransactions\n      }\n    });\n  }\n  getBlockByVersion(version, withTransactions) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/blocks/by_version/{version}\",\n      path: {\n        \"version\": version\n      },\n      query: {\n        \"with_transactions\": withTransactions\n      }\n    });\n  }\n};\n\n// src/generated/services/EventsService.ts\nvar EventsService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  getEventsByCreationNumber(address, creationNumber, start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/events/{creation_number}\",\n      path: {\n        \"address\": address,\n        \"creation_number\": creationNumber\n      },\n      query: {\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n  getEventsByEventHandle(address, eventHandle, fieldName, start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/events/{event_handle}/{field_name}\",\n      path: {\n        \"address\": address,\n        \"event_handle\": eventHandle,\n        \"field_name\": fieldName\n      },\n      query: {\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n};\n\n// src/generated/services/GeneralService.ts\nvar GeneralService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  spec() {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/spec\"\n    });\n  }\n  healthy(durationSecs) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/-/healthy\",\n      query: {\n        \"duration_secs\": durationSecs\n      }\n    });\n  }\n  getLedgerInfo() {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/\"\n    });\n  }\n};\n\n// src/generated/services/TablesService.ts\nvar TablesService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  getTableItem(tableHandle, requestBody, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/tables/{table_handle}/item\",\n      path: {\n        \"table_handle\": tableHandle\n      },\n      query: {\n        \"ledger_version\": ledgerVersion\n      },\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n  getRawTableItem(tableHandle, requestBody, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/tables/{table_handle}/raw_item\",\n      path: {\n        \"table_handle\": tableHandle\n      },\n      query: {\n        \"ledger_version\": ledgerVersion\n      },\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n};\n\n// src/generated/services/TransactionsService.ts\nvar TransactionsService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  getTransactions(start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/transactions\",\n      query: {\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n  submitTransaction(requestBody) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/transactions\",\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n  getTransactionByHash(txnHash) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/transactions/by_hash/{txn_hash}\",\n      path: {\n        \"txn_hash\": txnHash\n      }\n    });\n  }\n  getTransactionByVersion(txnVersion) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/transactions/by_version/{txn_version}\",\n      path: {\n        \"txn_version\": txnVersion\n      }\n    });\n  }\n  getAccountTransactions(address, start, limit) {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/accounts/{address}/transactions\",\n      path: {\n        \"address\": address\n      },\n      query: {\n        \"start\": start,\n        \"limit\": limit\n      }\n    });\n  }\n  submitBatchTransactions(requestBody) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/transactions/batch\",\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n  simulateTransaction(requestBody, estimateMaxGasAmount, estimateGasUnitPrice, estimatePrioritizedGasUnitPrice) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/transactions/simulate\",\n      query: {\n        \"estimate_max_gas_amount\": estimateMaxGasAmount,\n        \"estimate_gas_unit_price\": estimateGasUnitPrice,\n        \"estimate_prioritized_gas_unit_price\": estimatePrioritizedGasUnitPrice\n      },\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n  encodeSubmission(requestBody) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/transactions/encode_submission\",\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n  estimateGasPrice() {\n    return this.httpRequest.request({\n      method: \"GET\",\n      url: \"/estimate_gas_price\"\n    });\n  }\n};\n\n// src/generated/services/ViewService.ts\nvar ViewService = class {\n  constructor(httpRequest) {\n    this.httpRequest = httpRequest;\n  }\n  view(requestBody, ledgerVersion) {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/view\",\n      query: {\n        \"ledger_version\": ledgerVersion\n      },\n      body: requestBody,\n      mediaType: \"application/json\"\n    });\n  }\n};\n\n// src/generated/AptosGeneratedClient.ts\nvar AptosGeneratedClient = class {\n  constructor(config, HttpRequest = AxiosHttpRequest) {\n    var _a, _b, _c, _d;\n    this.request = new HttpRequest({\n      BASE: (_a = config == null ? void 0 : config.BASE) != null ? _a : \"/v1\",\n      VERSION: (_b = config == null ? void 0 : config.VERSION) != null ? _b : \"1.2.0\",\n      WITH_CREDENTIALS: (_c = config == null ? void 0 : config.WITH_CREDENTIALS) != null ? _c : false,\n      CREDENTIALS: (_d = config == null ? void 0 : config.CREDENTIALS) != null ? _d : \"include\",\n      TOKEN: config == null ? void 0 : config.TOKEN,\n      USERNAME: config == null ? void 0 : config.USERNAME,\n      PASSWORD: config == null ? void 0 : config.PASSWORD,\n      HEADERS: config == null ? void 0 : config.HEADERS,\n      ENCODE_PATH: config == null ? void 0 : config.ENCODE_PATH\n    });\n    this.accounts = new AccountsService(this.request);\n    this.blocks = new BlocksService(this.request);\n    this.events = new EventsService(this.request);\n    this.general = new GeneralService(this.request);\n    this.tables = new TablesService(this.request);\n    this.transactions = new TransactionsService(this.request);\n    this.view = new ViewService(this.request);\n  }\n};\n\n// src/generated/core/OpenAPI.ts\nvar OpenAPI = {\n  BASE: \"/v1\",\n  VERSION: \"1.2.0\",\n  WITH_CREDENTIALS: false,\n  CREDENTIALS: \"include\",\n  TOKEN: void 0,\n  USERNAME: void 0,\n  PASSWORD: void 0,\n  HEADERS: void 0,\n  ENCODE_PATH: void 0\n};\n\n// src/generated/models/AptosErrorCode.ts\nvar AptosErrorCode = /* @__PURE__ */ ((AptosErrorCode2) => {\n  AptosErrorCode2[\"ACCOUNT_NOT_FOUND\"] = \"account_not_found\";\n  AptosErrorCode2[\"RESOURCE_NOT_FOUND\"] = \"resource_not_found\";\n  AptosErrorCode2[\"MODULE_NOT_FOUND\"] = \"module_not_found\";\n  AptosErrorCode2[\"STRUCT_FIELD_NOT_FOUND\"] = \"struct_field_not_found\";\n  AptosErrorCode2[\"VERSION_NOT_FOUND\"] = \"version_not_found\";\n  AptosErrorCode2[\"TRANSACTION_NOT_FOUND\"] = \"transaction_not_found\";\n  AptosErrorCode2[\"TABLE_ITEM_NOT_FOUND\"] = \"table_item_not_found\";\n  AptosErrorCode2[\"BLOCK_NOT_FOUND\"] = \"block_not_found\";\n  AptosErrorCode2[\"VERSION_PRUNED\"] = \"version_pruned\";\n  AptosErrorCode2[\"BLOCK_PRUNED\"] = \"block_pruned\";\n  AptosErrorCode2[\"INVALID_INPUT\"] = \"invalid_input\";\n  AptosErrorCode2[\"INVALID_TRANSACTION_UPDATE\"] = \"invalid_transaction_update\";\n  AptosErrorCode2[\"SEQUENCE_NUMBER_TOO_OLD\"] = \"sequence_number_too_old\";\n  AptosErrorCode2[\"VM_ERROR\"] = \"vm_error\";\n  AptosErrorCode2[\"HEALTH_CHECK_FAILED\"] = \"health_check_failed\";\n  AptosErrorCode2[\"MEMPOOL_IS_FULL\"] = \"mempool_is_full\";\n  AptosErrorCode2[\"INTERNAL_ERROR\"] = \"internal_error\";\n  AptosErrorCode2[\"WEB_FRAMEWORK_ERROR\"] = \"web_framework_error\";\n  AptosErrorCode2[\"BCS_NOT_SUPPORTED\"] = \"bcs_not_supported\";\n  AptosErrorCode2[\"API_DISABLED\"] = \"api_disabled\";\n  return AptosErrorCode2;\n})(AptosErrorCode || {});\n\n// src/generated/models/MoveFunctionVisibility.ts\nvar MoveFunctionVisibility = /* @__PURE__ */ ((MoveFunctionVisibility2) => {\n  MoveFunctionVisibility2[\"PRIVATE\"] = \"private\";\n  MoveFunctionVisibility2[\"PUBLIC\"] = \"public\";\n  MoveFunctionVisibility2[\"FRIEND\"] = \"friend\";\n  return MoveFunctionVisibility2;\n})(MoveFunctionVisibility || {});\n\n// src/generated/models/RoleType.ts\nvar RoleType = /* @__PURE__ */ ((RoleType2) => {\n  RoleType2[\"VALIDATOR\"] = \"validator\";\n  RoleType2[\"FULL_NODE\"] = \"full_node\";\n  return RoleType2;\n})(RoleType || {});\n\n// src/generated/schemas/$AccountData.ts\nvar $AccountData = {\n  description: `Account data\n\n    A simplified version of the onchain Account resource`,\n  properties: {\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    authentication_key: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$AccountSignature.ts\nvar $AccountSignature = {\n  type: \"one-of\",\n  description: `Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.`,\n  contains: [{\n    type: \"AccountSignature_Ed25519Signature\"\n  }, {\n    type: \"AccountSignature_MultiEd25519Signature\"\n  }]\n};\n\n// src/generated/schemas/$AccountSignature_Ed25519Signature.ts\nvar $AccountSignature_Ed25519Signature = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"Ed25519Signature\"\n  }]\n};\n\n// src/generated/schemas/$AccountSignature_MultiEd25519Signature.ts\nvar $AccountSignature_MultiEd25519Signature = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"MultiEd25519Signature\"\n  }]\n};\n\n// src/generated/schemas/$Address.ts\nvar $Address = {\n  type: \"string\",\n  description: `A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    `,\n  format: \"hex\"\n};\n\n// src/generated/schemas/$AptosError.ts\nvar $AptosError = {\n  description: `This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.`,\n  properties: {\n    message: {\n      type: \"string\",\n      description: `A message describing the error`,\n      isRequired: true\n    },\n    error_code: {\n      type: \"AptosErrorCode\",\n      isRequired: true\n    },\n    vm_error_code: {\n      type: \"number\",\n      description: `A code providing VM error details when submitting transactions to the VM`,\n      format: \"uint64\"\n    }\n  }\n};\n\n// src/generated/schemas/$AptosErrorCode.ts\nvar $AptosErrorCode = {\n  type: \"Enum\"\n};\n\n// src/generated/schemas/$Block.ts\nvar $Block = {\n  description: `A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested`,\n  properties: {\n    block_height: {\n      type: \"U64\",\n      isRequired: true\n    },\n    block_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    block_timestamp: {\n      type: \"U64\",\n      isRequired: true\n    },\n    first_version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    last_version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    transactions: {\n      type: \"array\",\n      contains: {\n        type: \"Transaction\"\n      }\n    }\n  }\n};\n\n// src/generated/schemas/$BlockMetadataTransaction.ts\nvar $BlockMetadataTransaction = {\n  description: `A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block`,\n  properties: {\n    version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_change_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    event_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_checkpoint_hash: {\n      type: \"HashValue\"\n    },\n    gas_used: {\n      type: \"U64\",\n      isRequired: true\n    },\n    success: {\n      type: \"boolean\",\n      description: `Whether the transaction was successful`,\n      isRequired: true\n    },\n    vm_status: {\n      type: \"string\",\n      description: `The VM status of the transaction, can tell useful information in a failure`,\n      isRequired: true\n    },\n    accumulator_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    changes: {\n      type: \"array\",\n      contains: {\n        type: \"WriteSetChange\"\n      },\n      isRequired: true\n    },\n    id: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    epoch: {\n      type: \"U64\",\n      isRequired: true\n    },\n    round: {\n      type: \"U64\",\n      isRequired: true\n    },\n    events: {\n      type: \"array\",\n      contains: {\n        type: \"Event\"\n      },\n      isRequired: true\n    },\n    previous_block_votes_bitvec: {\n      type: \"array\",\n      contains: {\n        type: \"number\",\n        format: \"uint8\"\n      },\n      isRequired: true\n    },\n    proposer: {\n      type: \"Address\",\n      isRequired: true\n    },\n    failed_proposer_indices: {\n      type: \"array\",\n      contains: {\n        type: \"number\",\n        format: \"uint32\"\n      },\n      isRequired: true\n    },\n    timestamp: {\n      type: \"U64\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$DecodedTableData.ts\nvar $DecodedTableData = {\n  description: `Decoded table data`,\n  properties: {\n    key: {\n      description: `Key of table in JSON`,\n      properties: {},\n      isRequired: true\n    },\n    key_type: {\n      type: \"string\",\n      description: `Type of key`,\n      isRequired: true\n    },\n    value: {\n      description: `Value of table in JSON`,\n      properties: {},\n      isRequired: true\n    },\n    value_type: {\n      type: \"string\",\n      description: `Type of value`,\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$DeletedTableData.ts\nvar $DeletedTableData = {\n  description: `Deleted table data`,\n  properties: {\n    key: {\n      description: `Deleted key`,\n      properties: {},\n      isRequired: true\n    },\n    key_type: {\n      type: \"string\",\n      description: `Deleted key type`,\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$DeleteModule.ts\nvar $DeleteModule = {\n  description: `Delete a module`,\n  properties: {\n    address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    state_key_hash: {\n      type: \"string\",\n      description: `State key hash`,\n      isRequired: true\n    },\n    module: {\n      type: \"MoveModuleId\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$DeleteResource.ts\nvar $DeleteResource = {\n  description: `Delete a resource`,\n  properties: {\n    address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    state_key_hash: {\n      type: \"string\",\n      description: `State key hash`,\n      isRequired: true\n    },\n    resource: {\n      type: \"MoveStructTag\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$DeleteTableItem.ts\nvar $DeleteTableItem = {\n  description: `Delete a table item`,\n  properties: {\n    state_key_hash: {\n      type: \"string\",\n      isRequired: true\n    },\n    handle: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    key: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    data: {\n      type: \"DeletedTableData\"\n    }\n  }\n};\n\n// src/generated/schemas/$DirectWriteSet.ts\nvar $DirectWriteSet = {\n  properties: {\n    changes: {\n      type: \"array\",\n      contains: {\n        type: \"WriteSetChange\"\n      },\n      isRequired: true\n    },\n    events: {\n      type: \"array\",\n      contains: {\n        type: \"Event\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$Ed25519Signature.ts\nvar $Ed25519Signature = {\n  description: `A single Ed25519 signature`,\n  properties: {\n    public_key: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    signature: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$EncodeSubmissionRequest.ts\nvar $EncodeSubmissionRequest = {\n  description: `Request to encode a submission`,\n  properties: {\n    sender: {\n      type: \"Address\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    max_gas_amount: {\n      type: \"U64\",\n      isRequired: true\n    },\n    gas_unit_price: {\n      type: \"U64\",\n      isRequired: true\n    },\n    expiration_timestamp_secs: {\n      type: \"U64\",\n      isRequired: true\n    },\n    payload: {\n      type: \"TransactionPayload\",\n      isRequired: true\n    },\n    secondary_signers: {\n      type: \"array\",\n      contains: {\n        type: \"Address\"\n      }\n    }\n  }\n};\n\n// src/generated/schemas/$EntryFunctionId.ts\nvar $EntryFunctionId = {\n  type: \"string\",\n  description: `Entry function id is string representation of a entry function defined on-chain.\n\n    Format: \\`{address}::{module name}::{function name}\\`\n\n    Both \\`module name\\` and \\`function name\\` are case-sensitive.\n    `\n};\n\n// src/generated/schemas/$EntryFunctionPayload.ts\nvar $EntryFunctionPayload = {\n  description: `Payload which runs a single entry function`,\n  properties: {\n    function: {\n      type: \"EntryFunctionId\",\n      isRequired: true\n    },\n    type_arguments: {\n      type: \"array\",\n      contains: {\n        type: \"MoveType\"\n      },\n      isRequired: true\n    },\n    arguments: {\n      type: \"array\",\n      contains: {\n        properties: {}\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$Event.ts\nvar $Event = {\n  description: `An event from a transaction`,\n  properties: {\n    guid: {\n      type: \"EventGuid\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    type: {\n      type: \"MoveType\",\n      isRequired: true\n    },\n    data: {\n      description: `The JSON representation of the event`,\n      properties: {},\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$EventGuid.ts\nvar $EventGuid = {\n  properties: {\n    creation_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    account_address: {\n      type: \"Address\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$GasEstimation.ts\nvar $GasEstimation = {\n  description: `Struct holding the outputs of the estimate gas API`,\n  properties: {\n    deprioritized_gas_estimate: {\n      type: \"number\",\n      description: `The deprioritized estimate for the gas unit price`,\n      format: \"uint64\"\n    },\n    gas_estimate: {\n      type: \"number\",\n      description: `The current estimate for the gas unit price`,\n      isRequired: true,\n      format: \"uint64\"\n    },\n    prioritized_gas_estimate: {\n      type: \"number\",\n      description: `The prioritized estimate for the gas unit price`,\n      format: \"uint64\"\n    }\n  }\n};\n\n// src/generated/schemas/$GenesisPayload.ts\nvar $GenesisPayload = {\n  type: \"one-of\",\n  description: `The writeset payload of the Genesis transaction`,\n  contains: [{\n    type: \"GenesisPayload_WriteSetPayload\"\n  }]\n};\n\n// src/generated/schemas/$GenesisPayload_WriteSetPayload.ts\nvar $GenesisPayload_WriteSetPayload = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"WriteSetPayload\"\n  }]\n};\n\n// src/generated/schemas/$GenesisTransaction.ts\nvar $GenesisTransaction = {\n  description: `The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)`,\n  properties: {\n    version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_change_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    event_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_checkpoint_hash: {\n      type: \"HashValue\"\n    },\n    gas_used: {\n      type: \"U64\",\n      isRequired: true\n    },\n    success: {\n      type: \"boolean\",\n      description: `Whether the transaction was successful`,\n      isRequired: true\n    },\n    vm_status: {\n      type: \"string\",\n      description: `The VM status of the transaction, can tell useful information in a failure`,\n      isRequired: true\n    },\n    accumulator_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    changes: {\n      type: \"array\",\n      contains: {\n        type: \"WriteSetChange\"\n      },\n      isRequired: true\n    },\n    payload: {\n      type: \"GenesisPayload\",\n      isRequired: true\n    },\n    events: {\n      type: \"array\",\n      contains: {\n        type: \"Event\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$HashValue.ts\nvar $HashValue = {\n  type: \"string\"\n};\n\n// src/generated/schemas/$HealthCheckSuccess.ts\nvar $HealthCheckSuccess = {\n  description: `Representation of a successful healthcheck`,\n  properties: {\n    message: {\n      type: \"string\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$HexEncodedBytes.ts\nvar $HexEncodedBytes = {\n  type: \"string\",\n  description: `All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with \\`0x\\` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the \\`Address\\` type, HexEncodedBytes will not trim any zeros.\n    `,\n  format: \"hex\"\n};\n\n// src/generated/schemas/$IdentifierWrapper.ts\nvar $IdentifierWrapper = {\n  type: \"string\"\n};\n\n// src/generated/schemas/$IndexResponse.ts\nvar $IndexResponse = {\n  description: `The struct holding all data returned to the client by the\n    index endpoint (i.e., GET \"/\").  Only for responding in JSON`,\n  properties: {\n    chain_id: {\n      type: \"number\",\n      description: `Chain ID of the current chain`,\n      isRequired: true,\n      format: \"uint8\"\n    },\n    epoch: {\n      type: \"U64\",\n      isRequired: true\n    },\n    ledger_version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    oldest_ledger_version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    ledger_timestamp: {\n      type: \"U64\",\n      isRequired: true\n    },\n    node_role: {\n      type: \"RoleType\",\n      isRequired: true\n    },\n    oldest_block_height: {\n      type: \"U64\",\n      isRequired: true\n    },\n    block_height: {\n      type: \"U64\",\n      isRequired: true\n    },\n    git_hash: {\n      type: \"string\",\n      description: `Git hash of the build of the API endpoint.  Can be used to determine the exact\n            software version used by the API endpoint.`\n    }\n  }\n};\n\n// src/generated/schemas/$ModuleBundlePayload.ts\nvar $ModuleBundlePayload = {\n  properties: {\n    modules: {\n      type: \"array\",\n      contains: {\n        type: \"MoveModuleBytecode\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveAbility.ts\nvar $MoveAbility = {\n  type: \"string\"\n};\n\n// src/generated/schemas/$MoveFunction.ts\nvar $MoveFunction = {\n  description: `Move function`,\n  properties: {\n    name: {\n      type: \"IdentifierWrapper\",\n      isRequired: true\n    },\n    visibility: {\n      type: \"MoveFunctionVisibility\",\n      isRequired: true\n    },\n    is_entry: {\n      type: \"boolean\",\n      description: `Whether the function can be called as an entry function directly in a transaction`,\n      isRequired: true\n    },\n    is_view: {\n      type: \"boolean\",\n      description: `Whether the function is a view function or not`,\n      isRequired: true\n    },\n    generic_type_params: {\n      type: \"array\",\n      contains: {\n        type: \"MoveFunctionGenericTypeParam\"\n      },\n      isRequired: true\n    },\n    params: {\n      type: \"array\",\n      contains: {\n        type: \"MoveType\"\n      },\n      isRequired: true\n    },\n    return: {\n      type: \"array\",\n      contains: {\n        type: \"MoveType\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveFunctionGenericTypeParam.ts\nvar $MoveFunctionGenericTypeParam = {\n  description: `Move function generic type param`,\n  properties: {\n    constraints: {\n      type: \"array\",\n      contains: {\n        type: \"MoveAbility\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveFunctionVisibility.ts\nvar $MoveFunctionVisibility = {\n  type: \"Enum\"\n};\n\n// src/generated/schemas/$MoveModule.ts\nvar $MoveModule = {\n  description: `A Move module`,\n  properties: {\n    address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    name: {\n      type: \"IdentifierWrapper\",\n      isRequired: true\n    },\n    friends: {\n      type: \"array\",\n      contains: {\n        type: \"MoveModuleId\"\n      },\n      isRequired: true\n    },\n    exposed_functions: {\n      type: \"array\",\n      contains: {\n        type: \"MoveFunction\"\n      },\n      isRequired: true\n    },\n    structs: {\n      type: \"array\",\n      contains: {\n        type: \"MoveStruct\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveModuleBytecode.ts\nvar $MoveModuleBytecode = {\n  description: `Move module bytecode along with it's ABI`,\n  properties: {\n    bytecode: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    abi: {\n      type: \"MoveModule\"\n    }\n  }\n};\n\n// src/generated/schemas/$MoveModuleId.ts\nvar $MoveModuleId = {\n  type: \"string\",\n  description: `Move module id is a string representation of Move module.\n\n    Format: \\`{address}::{module name}\\`\n\n    \\`address\\` should be hex-encoded 32 byte account address that is prefixed with \\`0x\\`.\n\n    Module name is case-sensitive.\n    `\n};\n\n// src/generated/schemas/$MoveResource.ts\nvar $MoveResource = {\n  description: `A parsed Move resource`,\n  properties: {\n    type: {\n      type: \"MoveStructTag\",\n      isRequired: true\n    },\n    data: {\n      type: \"MoveStructValue\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveScriptBytecode.ts\nvar $MoveScriptBytecode = {\n  description: `Move script bytecode`,\n  properties: {\n    bytecode: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    abi: {\n      type: \"MoveFunction\"\n    }\n  }\n};\n\n// src/generated/schemas/$MoveStruct.ts\nvar $MoveStruct = {\n  description: `A move struct`,\n  properties: {\n    name: {\n      type: \"IdentifierWrapper\",\n      isRequired: true\n    },\n    is_native: {\n      type: \"boolean\",\n      description: `Whether the struct is a native struct of Move`,\n      isRequired: true\n    },\n    abilities: {\n      type: \"array\",\n      contains: {\n        type: \"MoveAbility\"\n      },\n      isRequired: true\n    },\n    generic_type_params: {\n      type: \"array\",\n      contains: {\n        type: \"MoveStructGenericTypeParam\"\n      },\n      isRequired: true\n    },\n    fields: {\n      type: \"array\",\n      contains: {\n        type: \"MoveStructField\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveStructField.ts\nvar $MoveStructField = {\n  description: `Move struct field`,\n  properties: {\n    name: {\n      type: \"IdentifierWrapper\",\n      isRequired: true\n    },\n    type: {\n      type: \"MoveType\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveStructGenericTypeParam.ts\nvar $MoveStructGenericTypeParam = {\n  description: `Move generic type param`,\n  properties: {\n    constraints: {\n      type: \"array\",\n      contains: {\n        type: \"MoveAbility\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MoveStructTag.ts\nvar $MoveStructTag = {\n  type: \"string\",\n  description: `String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. \\`move_module_address\\`, \\`module_name\\` and \\`struct_name\\`, all joined by \\`::\\`\n    2. \\`struct generic type parameters\\` joined by \\`, \\`\n\n    Examples:\n     * \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\\`\n     * \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/accounts) for more details.\n    `,\n  pattern: \"^0x[0-9a-zA-Z:_<>]+$\"\n};\n\n// src/generated/schemas/$MoveStructValue.ts\nvar $MoveStructValue = {\n  description: `This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move \\`bool\\` type value is serialized into \\`boolean\\`.\n\n    Move \\`u8\\`, \\`u16\\` and \\`u32\\` type value is serialized into \\`integer\\`.\n\n    Move \\`u64\\`, \\`u128\\` and \\`u256\\` type value is serialized into \\`string\\`.\n\n    Move \\`address\\` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - \\`0x1\\`\n    - \\`0x1668f6be25668c1a17cd8caf6b8d2f25\\`\n\n    Move \\`vector\\` type value is serialized into \\`array\\`, except \\`vector<u8>\\` which is serialized into a\n    HexEncodedBytes string with \\`0x\\` prefix.\n    For example:\n    - \\`vector<u64>{255, 255}\\` => \\`[\"255\", \"255\"]\\`\n    - \\`vector<u8>{255, 255}\\` => \\`0xffff\\`\n\n    Move \\`struct\\` type value is serialized into \\`object\\` that looks like this (except some Move stdlib types, see the following section):\n    \\`\\`\\`json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    \\`\\`\\`\n\n    For example:\n    \\`{ \"created\": \"0xa550c18\", \"role_id\": \"0\" }\\`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into \\`string\\`. For example, struct value \\`0x1::string::String{bytes: b\"Hello World!\"}\\`\n    is serialized as \\`\"Hello World!\"\\` in JSON.\n    `,\n  properties: {}\n};\n\n// src/generated/schemas/$MoveType.ts\nvar $MoveType = {\n  type: \"string\",\n  description: `String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u16\n    - u32\n    - u64\n    - u128\n    - u256\n    - address\n    - signer\n    - vector: \\`vector<{non-reference MoveTypeId}>\\`\n    - struct: \\`{address}::{module_name}::{struct_name}::<{generic types}>\\`\n\n    Vector type value examples:\n    - \\`vector<u8>\\`\n    - \\`vector<vector<u64>>\\`\n    - \\`vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>\\`\n\n    Struct type value examples:\n    - \\`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - \\`0x1::account::Account\\`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    `,\n  pattern: \"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$\"\n};\n\n// src/generated/schemas/$MoveValue.ts\nvar $MoveValue = {\n  type: \"any-of\",\n  description: `An enum of the possible Move value types`,\n  contains: [{\n    type: \"number\",\n    format: \"uint8\"\n  }, {\n    type: \"number\",\n    format: \"uint16\"\n  }, {\n    type: \"number\",\n    format: \"uint32\"\n  }, {\n    type: \"U64\"\n  }, {\n    type: \"U128\"\n  }, {\n    type: \"U256\"\n  }, {\n    type: \"boolean\"\n  }, {\n    type: \"Address\"\n  }, {\n    type: \"array\",\n    contains: {\n      type: \"MoveValue\"\n    }\n  }, {\n    type: \"HexEncodedBytes\"\n  }, {\n    type: \"MoveStructValue\"\n  }, {\n    type: \"string\"\n  }]\n};\n\n// src/generated/schemas/$MultiAgentSignature.ts\nvar $MultiAgentSignature = {\n  description: `Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts`,\n  properties: {\n    sender: {\n      type: \"AccountSignature\",\n      isRequired: true\n    },\n    secondary_signer_addresses: {\n      type: \"array\",\n      contains: {\n        type: \"Address\"\n      },\n      isRequired: true\n    },\n    secondary_signers: {\n      type: \"array\",\n      contains: {\n        type: \"AccountSignature\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MultiEd25519Signature.ts\nvar $MultiEd25519Signature = {\n  description: `A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction`,\n  properties: {\n    public_keys: {\n      type: \"array\",\n      contains: {\n        type: \"HexEncodedBytes\"\n      },\n      isRequired: true\n    },\n    signatures: {\n      type: \"array\",\n      contains: {\n        type: \"HexEncodedBytes\"\n      },\n      isRequired: true\n    },\n    threshold: {\n      type: \"number\",\n      description: `The number of signatures required for a successful transaction`,\n      isRequired: true,\n      format: \"uint8\"\n    },\n    bitmap: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$MultisigPayload.ts\nvar $MultisigPayload = {\n  description: `A multisig transaction that allows an owner of a multisig account to execute a pre-approved\n    transaction as the multisig account.`,\n  properties: {\n    multisig_address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    transaction_payload: {\n      type: \"MultisigTransactionPayload\"\n    }\n  }\n};\n\n// src/generated/schemas/$MultisigTransactionPayload.ts\nvar $MultisigTransactionPayload = {\n  type: \"any-of\",\n  contains: [{\n    type: \"EntryFunctionPayload\"\n  }]\n};\n\n// src/generated/schemas/$PendingTransaction.ts\nvar $PendingTransaction = {\n  description: `A transaction waiting in mempool`,\n  properties: {\n    hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    sender: {\n      type: \"Address\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    max_gas_amount: {\n      type: \"U64\",\n      isRequired: true\n    },\n    gas_unit_price: {\n      type: \"U64\",\n      isRequired: true\n    },\n    expiration_timestamp_secs: {\n      type: \"U64\",\n      isRequired: true\n    },\n    payload: {\n      type: \"TransactionPayload\",\n      isRequired: true\n    },\n    signature: {\n      type: \"TransactionSignature\"\n    }\n  }\n};\n\n// src/generated/schemas/$RawTableItemRequest.ts\nvar $RawTableItemRequest = {\n  description: `Table Item request for the GetTableItemRaw API`,\n  properties: {\n    key: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$RoleType.ts\nvar $RoleType = {\n  type: \"Enum\"\n};\n\n// src/generated/schemas/$ScriptPayload.ts\nvar $ScriptPayload = {\n  description: `Payload which runs a script that can run multiple functions`,\n  properties: {\n    code: {\n      type: \"MoveScriptBytecode\",\n      isRequired: true\n    },\n    type_arguments: {\n      type: \"array\",\n      contains: {\n        type: \"MoveType\"\n      },\n      isRequired: true\n    },\n    arguments: {\n      type: \"array\",\n      contains: {\n        properties: {}\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$ScriptWriteSet.ts\nvar $ScriptWriteSet = {\n  properties: {\n    execute_as: {\n      type: \"Address\",\n      isRequired: true\n    },\n    script: {\n      type: \"ScriptPayload\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$StateCheckpointTransaction.ts\nvar $StateCheckpointTransaction = {\n  description: `A state checkpoint transaction`,\n  properties: {\n    version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_change_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    event_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_checkpoint_hash: {\n      type: \"HashValue\"\n    },\n    gas_used: {\n      type: \"U64\",\n      isRequired: true\n    },\n    success: {\n      type: \"boolean\",\n      description: `Whether the transaction was successful`,\n      isRequired: true\n    },\n    vm_status: {\n      type: \"string\",\n      description: `The VM status of the transaction, can tell useful information in a failure`,\n      isRequired: true\n    },\n    accumulator_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    changes: {\n      type: \"array\",\n      contains: {\n        type: \"WriteSetChange\"\n      },\n      isRequired: true\n    },\n    timestamp: {\n      type: \"U64\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$StateKeyWrapper.ts\nvar $StateKeyWrapper = {\n  type: \"string\",\n  description: `Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    `\n};\n\n// src/generated/schemas/$SubmitTransactionRequest.ts\nvar $SubmitTransactionRequest = {\n  description: `A request to submit a transaction\n\n    This requires a transaction and a signature of it`,\n  properties: {\n    sender: {\n      type: \"Address\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    max_gas_amount: {\n      type: \"U64\",\n      isRequired: true\n    },\n    gas_unit_price: {\n      type: \"U64\",\n      isRequired: true\n    },\n    expiration_timestamp_secs: {\n      type: \"U64\",\n      isRequired: true\n    },\n    payload: {\n      type: \"TransactionPayload\",\n      isRequired: true\n    },\n    signature: {\n      type: \"TransactionSignature\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$TableItemRequest.ts\nvar $TableItemRequest = {\n  description: `Table Item request for the GetTableItem API`,\n  properties: {\n    key_type: {\n      type: \"MoveType\",\n      isRequired: true\n    },\n    value_type: {\n      type: \"MoveType\",\n      isRequired: true\n    },\n    key: {\n      description: `The value of the table item's key`,\n      properties: {},\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$Transaction.ts\nvar $Transaction = {\n  type: \"one-of\",\n  description: `Enum of the different types of transactions in Aptos`,\n  contains: [{\n    type: \"Transaction_PendingTransaction\"\n  }, {\n    type: \"Transaction_UserTransaction\"\n  }, {\n    type: \"Transaction_GenesisTransaction\"\n  }, {\n    type: \"Transaction_BlockMetadataTransaction\"\n  }, {\n    type: \"Transaction_StateCheckpointTransaction\"\n  }]\n};\n\n// src/generated/schemas/$Transaction_BlockMetadataTransaction.ts\nvar $Transaction_BlockMetadataTransaction = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"BlockMetadataTransaction\"\n  }]\n};\n\n// src/generated/schemas/$Transaction_GenesisTransaction.ts\nvar $Transaction_GenesisTransaction = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"GenesisTransaction\"\n  }]\n};\n\n// src/generated/schemas/$Transaction_PendingTransaction.ts\nvar $Transaction_PendingTransaction = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"PendingTransaction\"\n  }]\n};\n\n// src/generated/schemas/$Transaction_StateCheckpointTransaction.ts\nvar $Transaction_StateCheckpointTransaction = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"StateCheckpointTransaction\"\n  }]\n};\n\n// src/generated/schemas/$Transaction_UserTransaction.ts\nvar $Transaction_UserTransaction = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"UserTransaction\"\n  }]\n};\n\n// src/generated/schemas/$TransactionPayload.ts\nvar $TransactionPayload = {\n  type: \"one-of\",\n  description: `An enum of the possible transaction payloads`,\n  contains: [{\n    type: \"TransactionPayload_EntryFunctionPayload\"\n  }, {\n    type: \"TransactionPayload_ScriptPayload\"\n  }, {\n    type: \"TransactionPayload_ModuleBundlePayload\"\n  }, {\n    type: \"TransactionPayload_MultisigPayload\"\n  }]\n};\n\n// src/generated/schemas/$TransactionPayload_EntryFunctionPayload.ts\nvar $TransactionPayload_EntryFunctionPayload = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"EntryFunctionPayload\"\n  }]\n};\n\n// src/generated/schemas/$TransactionPayload_ModuleBundlePayload.ts\nvar $TransactionPayload_ModuleBundlePayload = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"ModuleBundlePayload\"\n  }]\n};\n\n// src/generated/schemas/$TransactionPayload_MultisigPayload.ts\nvar $TransactionPayload_MultisigPayload = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"MultisigPayload\"\n  }]\n};\n\n// src/generated/schemas/$TransactionPayload_ScriptPayload.ts\nvar $TransactionPayload_ScriptPayload = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"ScriptPayload\"\n  }]\n};\n\n// src/generated/schemas/$TransactionsBatchSingleSubmissionFailure.ts\nvar $TransactionsBatchSingleSubmissionFailure = {\n  description: `Information telling which batch submission transactions failed`,\n  properties: {\n    error: {\n      type: \"AptosError\",\n      isRequired: true\n    },\n    transaction_index: {\n      type: \"number\",\n      description: `The index of which transaction failed, same as submission order`,\n      isRequired: true,\n      format: \"uint64\"\n    }\n  }\n};\n\n// src/generated/schemas/$TransactionsBatchSubmissionResult.ts\nvar $TransactionsBatchSubmissionResult = {\n  description: `Batch transaction submission result\n\n    Tells which transactions failed`,\n  properties: {\n    transaction_failures: {\n      type: \"array\",\n      contains: {\n        type: \"TransactionsBatchSingleSubmissionFailure\"\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$TransactionSignature.ts\nvar $TransactionSignature = {\n  type: \"one-of\",\n  description: `An enum representing the different transaction signatures available`,\n  contains: [{\n    type: \"TransactionSignature_Ed25519Signature\"\n  }, {\n    type: \"TransactionSignature_MultiEd25519Signature\"\n  }, {\n    type: \"TransactionSignature_MultiAgentSignature\"\n  }]\n};\n\n// src/generated/schemas/$TransactionSignature_Ed25519Signature.ts\nvar $TransactionSignature_Ed25519Signature = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"Ed25519Signature\"\n  }]\n};\n\n// src/generated/schemas/$TransactionSignature_MultiAgentSignature.ts\nvar $TransactionSignature_MultiAgentSignature = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"MultiAgentSignature\"\n  }]\n};\n\n// src/generated/schemas/$TransactionSignature_MultiEd25519Signature.ts\nvar $TransactionSignature_MultiEd25519Signature = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"MultiEd25519Signature\"\n  }]\n};\n\n// src/generated/schemas/$U128.ts\nvar $U128 = {\n  type: \"string\",\n  description: `A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u128s in JSON natively.\n    `,\n  format: \"uint128\"\n};\n\n// src/generated/schemas/$U256.ts\nvar $U256 = {\n  type: \"string\",\n  description: `A string containing a 256-bit unsigned integer.\n\n    We represent u256 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u256s in JSON natively.\n    `,\n  format: \"uint256\"\n};\n\n// src/generated/schemas/$U64.ts\nvar $U64 = {\n  type: \"string\",\n  description: `A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    `,\n  format: \"uint64\"\n};\n\n// src/generated/schemas/$UserTransaction.ts\nvar $UserTransaction = {\n  description: `A transaction submitted by a user to change the state of the blockchain`,\n  properties: {\n    version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_change_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    event_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    state_checkpoint_hash: {\n      type: \"HashValue\"\n    },\n    gas_used: {\n      type: \"U64\",\n      isRequired: true\n    },\n    success: {\n      type: \"boolean\",\n      description: `Whether the transaction was successful`,\n      isRequired: true\n    },\n    vm_status: {\n      type: \"string\",\n      description: `The VM status of the transaction, can tell useful information in a failure`,\n      isRequired: true\n    },\n    accumulator_root_hash: {\n      type: \"HashValue\",\n      isRequired: true\n    },\n    changes: {\n      type: \"array\",\n      contains: {\n        type: \"WriteSetChange\"\n      },\n      isRequired: true\n    },\n    sender: {\n      type: \"Address\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    max_gas_amount: {\n      type: \"U64\",\n      isRequired: true\n    },\n    gas_unit_price: {\n      type: \"U64\",\n      isRequired: true\n    },\n    expiration_timestamp_secs: {\n      type: \"U64\",\n      isRequired: true\n    },\n    payload: {\n      type: \"TransactionPayload\",\n      isRequired: true\n    },\n    signature: {\n      type: \"TransactionSignature\"\n    },\n    events: {\n      type: \"array\",\n      contains: {\n        type: \"Event\"\n      },\n      isRequired: true\n    },\n    timestamp: {\n      type: \"U64\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$VersionedEvent.ts\nvar $VersionedEvent = {\n  description: `An event from a transaction with a version`,\n  properties: {\n    version: {\n      type: \"U64\",\n      isRequired: true\n    },\n    guid: {\n      type: \"EventGuid\",\n      isRequired: true\n    },\n    sequence_number: {\n      type: \"U64\",\n      isRequired: true\n    },\n    type: {\n      type: \"MoveType\",\n      isRequired: true\n    },\n    data: {\n      description: `The JSON representation of the event`,\n      properties: {},\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$ViewRequest.ts\nvar $ViewRequest = {\n  description: `View request for the Move View Function API`,\n  properties: {\n    function: {\n      type: \"EntryFunctionId\",\n      isRequired: true\n    },\n    type_arguments: {\n      type: \"array\",\n      contains: {\n        type: \"MoveType\"\n      },\n      isRequired: true\n    },\n    arguments: {\n      type: \"array\",\n      contains: {\n        properties: {}\n      },\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$WriteModule.ts\nvar $WriteModule = {\n  description: `Write a new module or update an existing one`,\n  properties: {\n    address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    state_key_hash: {\n      type: \"string\",\n      description: `State key hash`,\n      isRequired: true\n    },\n    data: {\n      type: \"MoveModuleBytecode\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$WriteResource.ts\nvar $WriteResource = {\n  description: `Write a resource or update an existing one`,\n  properties: {\n    address: {\n      type: \"Address\",\n      isRequired: true\n    },\n    state_key_hash: {\n      type: \"string\",\n      description: `State key hash`,\n      isRequired: true\n    },\n    data: {\n      type: \"MoveResource\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$WriteSet.ts\nvar $WriteSet = {\n  type: \"one-of\",\n  description: `The associated writeset with a payload`,\n  contains: [{\n    type: \"WriteSet_ScriptWriteSet\"\n  }, {\n    type: \"WriteSet_DirectWriteSet\"\n  }]\n};\n\n// src/generated/schemas/$WriteSet_DirectWriteSet.ts\nvar $WriteSet_DirectWriteSet = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"DirectWriteSet\"\n  }]\n};\n\n// src/generated/schemas/$WriteSet_ScriptWriteSet.ts\nvar $WriteSet_ScriptWriteSet = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"ScriptWriteSet\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange.ts\nvar $WriteSetChange = {\n  type: \"one-of\",\n  description: `A final state change of a transaction on a resource or module`,\n  contains: [{\n    type: \"WriteSetChange_DeleteModule\"\n  }, {\n    type: \"WriteSetChange_DeleteResource\"\n  }, {\n    type: \"WriteSetChange_DeleteTableItem\"\n  }, {\n    type: \"WriteSetChange_WriteModule\"\n  }, {\n    type: \"WriteSetChange_WriteResource\"\n  }, {\n    type: \"WriteSetChange_WriteTableItem\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_DeleteModule.ts\nvar $WriteSetChange_DeleteModule = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"DeleteModule\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_DeleteResource.ts\nvar $WriteSetChange_DeleteResource = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"DeleteResource\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_DeleteTableItem.ts\nvar $WriteSetChange_DeleteTableItem = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"DeleteTableItem\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_WriteModule.ts\nvar $WriteSetChange_WriteModule = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"WriteModule\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_WriteResource.ts\nvar $WriteSetChange_WriteResource = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"WriteResource\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetChange_WriteTableItem.ts\nvar $WriteSetChange_WriteTableItem = {\n  type: \"all-of\",\n  contains: [{\n    properties: {\n      type: {\n        type: \"string\",\n        isRequired: true\n      }\n    }\n  }, {\n    type: \"WriteTableItem\"\n  }]\n};\n\n// src/generated/schemas/$WriteSetPayload.ts\nvar $WriteSetPayload = {\n  description: `A writeset payload, used only for genesis`,\n  properties: {\n    write_set: {\n      type: \"WriteSet\",\n      isRequired: true\n    }\n  }\n};\n\n// src/generated/schemas/$WriteTableItem.ts\nvar $WriteTableItem = {\n  description: `Change set to write a table item`,\n  properties: {\n    state_key_hash: {\n      type: \"string\",\n      isRequired: true\n    },\n    handle: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    key: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    value: {\n      type: \"HexEncodedBytes\",\n      isRequired: true\n    },\n    data: {\n      type: \"DecodedTableData\"\n    }\n  }\n};\n\n// src/transaction_builder/builder.ts\n\n\n// src/transaction_builder/builder_utils.ts\nfunction assertType(val, types, message) {\n  if (!(types == null ? void 0 : types.includes(typeof val))) {\n    throw new Error(\n      message || `Invalid arg: ${val} type should be ${types instanceof Array ? types.join(\" or \") : types}`\n    );\n  }\n}\nfunction ensureBoolean(val) {\n  assertType(val, [\"boolean\", \"string\"]);\n  if (typeof val === \"boolean\") {\n    return val;\n  }\n  if (val === \"true\") {\n    return true;\n  }\n  if (val === \"false\") {\n    return false;\n  }\n  throw new Error(\"Invalid boolean string.\");\n}\nfunction ensureNumber(val) {\n  assertType(val, [\"number\", \"string\"]);\n  if (typeof val === \"number\") {\n    return val;\n  }\n  const res = Number.parseInt(val, 10);\n  if (Number.isNaN(res)) {\n    throw new Error(\"Invalid number string.\");\n  }\n  return res;\n}\nfunction ensureBigInt(val) {\n  assertType(val, [\"number\", \"bigint\", \"string\"]);\n  return BigInt(val);\n}\nfunction serializeArg(argVal, argType, serializer) {\n  if (argType instanceof TypeTagBool) {\n    serializer.serializeBool(ensureBoolean(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU8) {\n    serializer.serializeU8(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU16) {\n    serializer.serializeU16(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU32) {\n    serializer.serializeU32(ensureNumber(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU64) {\n    serializer.serializeU64(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU128) {\n    serializer.serializeU128(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagU256) {\n    serializer.serializeU256(ensureBigInt(argVal));\n    return;\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    addr.serialize(serializer);\n    return;\n  }\n  if (argType instanceof TypeTagVector) {\n    if (argType.value instanceof TypeTagU8) {\n      if (argVal instanceof Uint8Array) {\n        serializer.serializeBytes(argVal);\n        return;\n      }\n      if (typeof argVal === \"string\") {\n        serializer.serializeStr(argVal);\n        return;\n      }\n    }\n    if (!Array.isArray(argVal)) {\n      throw new Error(\"Invalid vector args.\");\n    }\n    serializer.serializeU32AsUleb128(argVal.length);\n    argVal.forEach((arg) => serializeArg(arg, argType.value, serializer));\n    return;\n  }\n  if (argType instanceof TypeTagStruct) {\n    const { address, module_name: moduleName, name } = argType.value;\n    if (`${HexString.fromUint8Array(address.address).toShortString()}::${moduleName.value}::${name.value}` !== \"0x1::string::String\") {\n      throw new Error(\"The only supported struct arg is of type 0x1::string::String\");\n    }\n    assertType(argVal, [\"string\"]);\n    serializer.serializeStr(argVal);\n    return;\n  }\n  throw new Error(\"Unsupported arg type.\");\n}\nfunction argToTransactionArgument(argVal, argType) {\n  if (argType instanceof TypeTagBool) {\n    return new TransactionArgumentBool(ensureBoolean(argVal));\n  }\n  if (argType instanceof TypeTagU8) {\n    return new TransactionArgumentU8(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU16) {\n    return new TransactionArgumentU16(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU32) {\n    return new TransactionArgumentU32(ensureNumber(argVal));\n  }\n  if (argType instanceof TypeTagU64) {\n    return new TransactionArgumentU64(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU128) {\n    return new TransactionArgumentU128(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagU256) {\n    return new TransactionArgumentU256(ensureBigInt(argVal));\n  }\n  if (argType instanceof TypeTagAddress) {\n    let addr;\n    if (typeof argVal === \"string\" || argVal instanceof HexString) {\n      addr = AccountAddress.fromHex(argVal);\n    } else if (argVal instanceof AccountAddress) {\n      addr = argVal;\n    } else {\n      throw new Error(\"Invalid account address.\");\n    }\n    return new TransactionArgumentAddress(addr);\n  }\n  if (argType instanceof TypeTagVector && argType.value instanceof TypeTagU8) {\n    if (!(argVal instanceof Uint8Array)) {\n      throw new Error(`${argVal} should be an instance of Uint8Array`);\n    }\n    return new TransactionArgumentU8Vector(argVal);\n  }\n  throw new Error(\"Unknown type for TransactionArgument.\");\n}\n\n// src/transaction_builder/builder.ts\nvar RAW_TRANSACTION_SALT = \"APTOS::RawTransaction\";\nvar RAW_TRANSACTION_WITH_DATA_SALT = \"APTOS::RawTransactionWithData\";\nvar TransactionBuilder = class {\n  constructor(signingFunction, rawTxnBuilder) {\n    this.rawTxnBuilder = rawTxnBuilder;\n    this.signingFunction = signingFunction;\n  }\n  build(func, ty_tags, args) {\n    if (!this.rawTxnBuilder) {\n      throw new Error(\"this.rawTxnBuilder doesn't exist.\");\n    }\n    return this.rawTxnBuilder.build(func, ty_tags, args);\n  }\n  static getSigningMessage(rawTxn) {\n    const hash = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n    if (rawTxn instanceof RawTransaction) {\n      hash.update(RAW_TRANSACTION_SALT);\n    } else if (rawTxn instanceof MultiAgentRawTransaction) {\n      hash.update(RAW_TRANSACTION_WITH_DATA_SALT);\n    } else {\n      throw new Error(\"Unknown transaction type.\");\n    }\n    const prefix = hash.digest();\n    const body = bcsToBytes(rawTxn);\n    const mergedArray = new Uint8Array(prefix.length + body.length);\n    mergedArray.set(prefix);\n    mergedArray.set(body, prefix.length);\n    return mergedArray;\n  }\n};\nvar TransactionBuilderEd25519 = class extends TransactionBuilder {\n  constructor(signingFunction, publicKey, rawTxnBuilder) {\n    super(signingFunction, rawTxnBuilder);\n    this.publicKey = publicKey;\n  }\n  rawToSigned(rawTxn) {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n    const authenticator = new TransactionAuthenticatorEd25519(\n      new Ed25519PublicKey(this.publicKey),\n      signature\n    );\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n  sign(rawTxn) {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n};\nvar TransactionBuilderMultiEd25519 = class extends TransactionBuilder {\n  constructor(signingFunction, publicKey) {\n    super(signingFunction);\n    this.publicKey = publicKey;\n  }\n  rawToSigned(rawTxn) {\n    const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n    const signature = this.signingFunction(signingMessage);\n    const authenticator = new TransactionAuthenticatorMultiEd25519(this.publicKey, signature);\n    return new SignedTransaction(rawTxn, authenticator);\n  }\n  sign(rawTxn) {\n    return bcsToBytes(this.rawToSigned(rawTxn));\n  }\n};\nvar TransactionBuilderABI = class {\n  constructor(abis, builderConfig) {\n    this.abiMap = /* @__PURE__ */ new Map();\n    abis.forEach((abi) => {\n      const deserializer = new Deserializer(abi);\n      const scriptABI = ScriptABI.deserialize(deserializer);\n      let k;\n      if (scriptABI instanceof EntryFunctionABI) {\n        const funcABI = scriptABI;\n        const { address: addr, name: moduleName } = funcABI.module_name;\n        k = `${HexString.fromUint8Array(addr.address).toShortString()}::${moduleName.value}::${funcABI.name}`;\n      } else {\n        const funcABI = scriptABI;\n        k = funcABI.name;\n      }\n      if (this.abiMap.has(k)) {\n        throw new Error(\"Found conflicting ABI interfaces\");\n      }\n      this.abiMap.set(k, scriptABI);\n    });\n    this.builderConfig = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      expSecFromNow: DEFAULT_TXN_EXP_SEC_FROM_NOW,\n      ...builderConfig\n    };\n  }\n  static toBCSArgs(abiArgs, args) {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n    return args.map((arg, i) => {\n      const serializer = new Serializer();\n      serializeArg(arg, abiArgs[i].type_tag, serializer);\n      return serializer.getBytes();\n    });\n  }\n  static toTransactionArguments(abiArgs, args) {\n    if (abiArgs.length !== args.length) {\n      throw new Error(\"Wrong number of args provided.\");\n    }\n    return args.map((arg, i) => argToTransactionArgument(arg, abiArgs[i].type_tag));\n  }\n  setSequenceNumber(seqNumber) {\n    this.builderConfig.sequenceNumber = BigInt(seqNumber);\n  }\n  buildTransactionPayload(func, ty_tags, args) {\n    const typeTags = ty_tags.map((ty_arg) => new TypeTagParser(ty_arg).parseTypeTag());\n    let payload;\n    if (!this.abiMap.has(func)) {\n      throw new Error(`Cannot find function: ${func}`);\n    }\n    const scriptABI = this.abiMap.get(func);\n    if (scriptABI instanceof EntryFunctionABI) {\n      const funcABI = scriptABI;\n      const bcsArgs = TransactionBuilderABI.toBCSArgs(funcABI.args, args);\n      payload = new TransactionPayloadEntryFunction(\n        new EntryFunction(funcABI.module_name, new Identifier(funcABI.name), typeTags, bcsArgs)\n      );\n    } else if (scriptABI instanceof TransactionScriptABI) {\n      const funcABI = scriptABI;\n      const scriptArgs = TransactionBuilderABI.toTransactionArguments(funcABI.args, args);\n      payload = new TransactionPayloadScript(new Script(funcABI.code, typeTags, scriptArgs));\n    } else {\n      throw new Error(\"Unknown ABI format.\");\n    }\n    return payload;\n  }\n  build(func, ty_tags, args) {\n    const { sender, sequenceNumber, gasUnitPrice, maxGasAmount, expSecFromNow, chainId } = this.builderConfig;\n    if (!gasUnitPrice) {\n      throw new Error(\"No gasUnitPrice provided.\");\n    }\n    const senderAccount = sender instanceof AccountAddress ? sender : AccountAddress.fromHex(sender);\n    const expTimestampSec = BigInt(Math.floor(Date.now() / 1e3) + Number(expSecFromNow));\n    const payload = this.buildTransactionPayload(func, ty_tags, args);\n    if (payload) {\n      return new RawTransaction(\n        senderAccount,\n        BigInt(sequenceNumber),\n        payload,\n        BigInt(maxGasAmount),\n        BigInt(gasUnitPrice),\n        expTimestampSec,\n        new ChainId(Number(chainId))\n      );\n    }\n    throw new Error(\"Invalid ABI.\");\n  }\n};\nvar TransactionBuilderRemoteABI = class {\n  constructor(aptosClient, builderConfig) {\n    this.aptosClient = aptosClient;\n    this.builderConfig = builderConfig;\n  }\n  async fetchABI(addr) {\n    const modules = await this.aptosClient.getAccountModules(addr);\n    const abis = modules.map((module) => module.abi).flatMap(\n      (abi) => abi.exposed_functions.filter((ef) => ef.is_entry).map(\n        (ef) => ({\n          fullName: `${abi.address}::${abi.name}::${ef.name}`,\n          ...ef\n        })\n      )\n    );\n    const abiMap = /* @__PURE__ */ new Map();\n    abis.forEach((abi) => {\n      abiMap.set(abi.fullName, abi);\n    });\n    return abiMap;\n  }\n  async build(func, ty_tags, args) {\n    const normlize = (s) => s.replace(/^0[xX]0*/g, \"0x\");\n    func = normlize(func);\n    const funcNameParts = func.split(\"::\");\n    if (funcNameParts.length !== 3) {\n      throw new Error(\n        \"'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer\"\n      );\n    }\n    const [addr, module] = func.split(\"::\");\n    const abiMap = await this.fetchABI(addr);\n    if (!abiMap.has(func)) {\n      throw new Error(`${func} doesn't exist.`);\n    }\n    const funcAbi = abiMap.get(func);\n    const abiArgs = funcAbi.params.filter((param) => param !== \"signer\" && param !== \"&signer\");\n    const typeArgABIs = abiArgs.map(\n      (abiArg, i) => new ArgumentABI(`var${i}`, new TypeTagParser(abiArg, ty_tags).parseTypeTag())\n    );\n    const entryFunctionABI = new EntryFunctionABI(\n      funcAbi.name,\n      ModuleId.fromStr(`${addr}::${module}`),\n      \"\",\n      funcAbi.generic_type_params.map((_, i) => new TypeArgumentABI(`${i}`)),\n      typeArgABIs\n    );\n    const { sender, ...rest } = this.builderConfig;\n    const senderAddress = sender instanceof AccountAddress ? HexString.fromUint8Array(sender.address) : sender;\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasUnitPrice }] = await Promise.all([\n      (rest == null ? void 0 : rest.sequenceNumber) ? Promise.resolve({ sequence_number: rest == null ? void 0 : rest.sequenceNumber }) : this.aptosClient.getAccount(senderAddress),\n      (rest == null ? void 0 : rest.chainId) ? Promise.resolve(rest == null ? void 0 : rest.chainId) : this.aptosClient.getChainId(),\n      (rest == null ? void 0 : rest.gasUnitPrice) ? Promise.resolve({ gas_estimate: rest == null ? void 0 : rest.gasUnitPrice }) : this.aptosClient.estimateGasPrice()\n    ]);\n    const builderABI = new TransactionBuilderABI([bcsToBytes(entryFunctionABI)], {\n      sender,\n      sequenceNumber,\n      chainId,\n      gasUnitPrice: BigInt(gasUnitPrice),\n      ...rest\n    });\n    return builderABI.build(func, ty_tags, args);\n  }\n};\n__decorateClass([\n  MemoizeExpiring(10 * 60 * 1e3)\n], TransactionBuilderRemoteABI.prototype, \"fetchABI\", 1);\n\n// src/providers/aptos_client.ts\nvar _AptosClient = class {\n  constructor(nodeUrl, config, doNotFixNodeUrl = false) {\n    if (!nodeUrl) {\n      throw new Error(\"Node URL cannot be empty.\");\n    }\n    const conf = config === void 0 || config === null ? {} : { ...config };\n    if (doNotFixNodeUrl) {\n      this.nodeUrl = nodeUrl;\n    } else {\n      this.nodeUrl = fixNodeUrl(nodeUrl);\n    }\n    conf.BASE = this.nodeUrl;\n    if ((config == null ? void 0 : config.WITH_CREDENTIALS) === false) {\n      conf.WITH_CREDENTIALS = false;\n    } else {\n      conf.WITH_CREDENTIALS = true;\n    }\n    this.client = new AptosGeneratedClient(conf);\n  }\n  async getAccount(accountAddress) {\n    return this.client.accounts.getAccount(HexString.ensure(accountAddress).hex());\n  }\n  async getAccountTransactions(accountAddress, query) {\n    var _a;\n    return this.client.transactions.getAccountTransactions(\n      HexString.ensure(accountAddress).hex(),\n      (_a = query == null ? void 0 : query.start) == null ? void 0 : _a.toString(),\n      query == null ? void 0 : query.limit\n    );\n  }\n  async getAccountModules(accountAddress, query) {\n    const f = this.client.accounts.getAccountModules.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 1e3, query);\n    return out;\n  }\n  async getAccountModule(accountAddress, moduleName, query) {\n    var _a;\n    return this.client.accounts.getAccountModule(\n      HexString.ensure(accountAddress).hex(),\n      moduleName,\n      (_a = query == null ? void 0 : query.ledgerVersion) == null ? void 0 : _a.toString()\n    );\n  }\n  async getAccountResources(accountAddress, query) {\n    const f = this.client.accounts.getAccountResources.bind({ httpRequest: this.client.request });\n    const out = await paginateWithCursor(f, accountAddress, 9999, query);\n    return out;\n  }\n  async getAccountResource(accountAddress, resourceType, query) {\n    var _a;\n    return this.client.accounts.getAccountResource(\n      HexString.ensure(accountAddress).hex(),\n      resourceType,\n      (_a = query == null ? void 0 : query.ledgerVersion) == null ? void 0 : _a.toString()\n    );\n  }\n  static generateBCSTransaction(accountFrom, rawTxn) {\n    const txnBuilder = new TransactionBuilderEd25519((signingMessage) => {\n      const sigHexStr = accountFrom.signBuffer(signingMessage);\n      return new aptos_types_exports.Ed25519Signature(sigHexStr.toUint8Array());\n    }, accountFrom.pubKey().toUint8Array());\n    return txnBuilder.sign(rawTxn);\n  }\n  static generateBCSSimulation(accountFrom, rawTxn) {\n    const txnBuilder = new TransactionBuilderEd25519((_signingMessage) => {\n      const invalidSigBytes = new Uint8Array(64);\n      return new aptos_types_exports.Ed25519Signature(invalidSigBytes);\n    }, accountFrom.pubKey().toUint8Array());\n    return txnBuilder.sign(rawTxn);\n  }\n  async generateTransaction(sender, payload, options) {\n    const config = { sender };\n    if (options == null ? void 0 : options.sequence_number) {\n      config.sequenceNumber = options.sequence_number;\n    }\n    if (options == null ? void 0 : options.gas_unit_price) {\n      config.gasUnitPrice = options.gas_unit_price;\n    }\n    if (options == null ? void 0 : options.max_gas_amount) {\n      config.maxGasAmount = options.max_gas_amount;\n    }\n    if (options == null ? void 0 : options.expiration_timestamp_secs) {\n      const timestamp = Number.parseInt(options.expiration_timestamp_secs, 10);\n      config.expSecFromNow = timestamp - Math.floor(Date.now() / 1e3);\n    }\n    const builder = new TransactionBuilderRemoteABI(this, config);\n    return builder.build(payload.function, payload.type_arguments, payload.arguments);\n  }\n  async signTransaction(accountFrom, rawTransaction) {\n    return Promise.resolve(_AptosClient.generateBCSTransaction(accountFrom, rawTransaction));\n  }\n  async getEventsByCreationNumber(address, creationNumber, query) {\n    var _a;\n    return this.client.events.getEventsByCreationNumber(\n      HexString.ensure(address).hex(),\n      creationNumber.toString(),\n      (_a = query == null ? void 0 : query.start) == null ? void 0 : _a.toString(),\n      query == null ? void 0 : query.limit\n    );\n  }\n  async getEventsByEventHandle(address, eventHandleStruct, fieldName, query) {\n    var _a;\n    return this.client.events.getEventsByEventHandle(\n      HexString.ensure(address).hex(),\n      eventHandleStruct,\n      fieldName,\n      (_a = query == null ? void 0 : query.start) == null ? void 0 : _a.toString(),\n      query == null ? void 0 : query.limit\n    );\n  }\n  async submitTransaction(signedTxn) {\n    return this.submitSignedBCSTransaction(signedTxn);\n  }\n  async simulateTransaction(accountOrPubkey, rawTransaction, query) {\n    let signedTxn;\n    if (accountOrPubkey instanceof AptosAccount) {\n      signedTxn = _AptosClient.generateBCSSimulation(accountOrPubkey, rawTransaction);\n    } else if (accountOrPubkey instanceof MultiEd25519PublicKey) {\n      const txnBuilder = new TransactionBuilderMultiEd25519(() => {\n        const { threshold } = accountOrPubkey;\n        const bits = [];\n        const signatures = [];\n        for (let i = 0; i < threshold; i += 1) {\n          bits.push(i);\n          signatures.push(new aptos_types_exports.Ed25519Signature(new Uint8Array(64)));\n        }\n        const bitmap = aptos_types_exports.MultiEd25519Signature.createBitmap(bits);\n        return new aptos_types_exports.MultiEd25519Signature(signatures, bitmap);\n      }, accountOrPubkey);\n      signedTxn = txnBuilder.sign(rawTransaction);\n    } else {\n      const txnBuilder = new TransactionBuilderEd25519(() => {\n        const invalidSigBytes = new Uint8Array(64);\n        return new aptos_types_exports.Ed25519Signature(invalidSigBytes);\n      }, accountOrPubkey.toBytes());\n      signedTxn = txnBuilder.sign(rawTransaction);\n    }\n    return this.submitBCSSimulation(signedTxn, query);\n  }\n  async submitSignedBCSTransaction(signedTxn) {\n    return this.client.request.request({\n      url: \"/transactions\",\n      method: \"POST\",\n      body: signedTxn,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\"\n    });\n  }\n  async submitBCSSimulation(bcsBody, query) {\n    var _a, _b, _c;\n    const queryParams = {\n      estimate_gas_unit_price: (_a = query == null ? void 0 : query.estimateGasUnitPrice) != null ? _a : false,\n      estimate_max_gas_amount: (_b = query == null ? void 0 : query.estimateMaxGasAmount) != null ? _b : false,\n      estimate_prioritized_gas_unit_price: (_c = query == null ? void 0 : query.estimatePrioritizedGasUnitPrice) != null ? _c : false\n    };\n    return this.client.request.request({\n      url: \"/transactions/simulate\",\n      query: queryParams,\n      method: \"POST\",\n      body: bcsBody,\n      mediaType: \"application/x.aptos.signed_transaction+bcs\"\n    });\n  }\n  async getTransactions(query) {\n    var _a;\n    return this.client.transactions.getTransactions((_a = query == null ? void 0 : query.start) == null ? void 0 : _a.toString(), query == null ? void 0 : query.limit);\n  }\n  async getTransactionByHash(txnHash) {\n    return this.client.transactions.getTransactionByHash(txnHash);\n  }\n  async getTransactionByVersion(txnVersion) {\n    return this.client.transactions.getTransactionByVersion(txnVersion.toString());\n  }\n  async transactionPending(txnHash) {\n    try {\n      const response = await this.client.transactions.getTransactionByHash(txnHash);\n      return response.type === \"pending_transaction\";\n    } catch (e) {\n      if ((e == null ? void 0 : e.status) === 404) {\n        return true;\n      }\n      throw e;\n    }\n  }\n  async waitForTransactionWithResult(txnHash, extraArgs) {\n    var _a, _b;\n    const timeoutSecs = (_a = extraArgs == null ? void 0 : extraArgs.timeoutSecs) != null ? _a : DEFAULT_TXN_TIMEOUT_SEC;\n    const checkSuccess = (_b = extraArgs == null ? void 0 : extraArgs.checkSuccess) != null ? _b : false;\n    let isPending = true;\n    let count = 0;\n    let lastTxn;\n    while (isPending) {\n      if (count >= timeoutSecs) {\n        break;\n      }\n      try {\n        lastTxn = await this.client.transactions.getTransactionByHash(txnHash);\n        isPending = lastTxn.type === \"pending_transaction\";\n        if (!isPending) {\n          break;\n        }\n      } catch (e) {\n        const isApiError = e instanceof ApiError;\n        const isRequestError = isApiError && e.status !== 404 && e.status >= 400 && e.status < 500;\n        if (!isApiError || isRequestError) {\n          throw e;\n        }\n      }\n      await sleep(1e3);\n      count += 1;\n    }\n    if (lastTxn === void 0) {\n      throw new Error(`Waiting for transaction ${txnHash} failed`);\n    }\n    if (isPending) {\n      throw new WaitForTransactionError(\n        `Waiting for transaction ${txnHash} timed out after ${timeoutSecs} seconds`,\n        lastTxn\n      );\n    }\n    if (!checkSuccess) {\n      return lastTxn;\n    }\n    if (!(lastTxn == null ? void 0 : lastTxn.success)) {\n      throw new FailedTransactionError(\n        `Transaction ${txnHash} committed to the blockchain but execution failed`,\n        lastTxn\n      );\n    }\n    return lastTxn;\n  }\n  async waitForTransaction(txnHash, extraArgs) {\n    await this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n  async getLedgerInfo() {\n    return this.client.general.getLedgerInfo();\n  }\n  async getChainId() {\n    const result = await this.getLedgerInfo();\n    return result.chain_id;\n  }\n  async getTableItem(handle, data, query) {\n    var _a;\n    const tableItem = await this.client.tables.getTableItem(handle, data, (_a = query == null ? void 0 : query.ledgerVersion) == null ? void 0 : _a.toString());\n    return tableItem;\n  }\n  async generateRawTransaction(accountFrom, payload, extraArgs) {\n    const [{ sequence_number: sequenceNumber }, chainId, { gas_estimate: gasEstimate }] = await Promise.all([\n      this.getAccount(accountFrom),\n      this.getChainId(),\n      (extraArgs == null ? void 0 : extraArgs.gasUnitPrice) ? Promise.resolve({ gas_estimate: extraArgs.gasUnitPrice }) : this.estimateGasPrice()\n    ]);\n    const { maxGasAmount, gasUnitPrice, expireTimestamp } = {\n      maxGasAmount: BigInt(DEFAULT_MAX_GAS_AMOUNT),\n      gasUnitPrice: BigInt(gasEstimate),\n      expireTimestamp: BigInt(Math.floor(Date.now() / 1e3) + DEFAULT_TXN_EXP_SEC_FROM_NOW),\n      ...extraArgs\n    };\n    return new aptos_types_exports.RawTransaction(\n      aptos_types_exports.AccountAddress.fromHex(accountFrom),\n      BigInt(sequenceNumber),\n      payload,\n      maxGasAmount,\n      gasUnitPrice,\n      expireTimestamp,\n      new aptos_types_exports.ChainId(chainId)\n    );\n  }\n  async generateSignSubmitTransaction(sender, payload, extraArgs) {\n    const rawTransaction = await this.generateRawTransaction(sender.address(), payload, extraArgs);\n    const bcsTxn = _AptosClient.generateBCSTransaction(sender, rawTransaction);\n    const pendingTransaction = await this.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async publishPackage(sender, packageMetadata, modules, extraArgs) {\n    const codeSerializer = new Serializer();\n    serializeVector(modules, codeSerializer);\n    const payload = new aptos_types_exports.TransactionPayloadEntryFunction(\n      aptos_types_exports.EntryFunction.natural(\n        \"0x1::code\",\n        \"publish_package_txn\",\n        [],\n        [bcsSerializeBytes(packageMetadata), codeSerializer.getBytes()]\n      )\n    );\n    return this.generateSignSubmitTransaction(sender, payload, extraArgs);\n  }\n  async generateSignSubmitWaitForTransaction(sender, payload, extraArgs) {\n    const txnHash = await this.generateSignSubmitTransaction(sender, payload, extraArgs);\n    return this.waitForTransactionWithResult(txnHash, extraArgs);\n  }\n  async estimateGasPrice() {\n    return this.client.transactions.estimateGasPrice();\n  }\n  async estimateMaxGasAmount(forAccount) {\n    const typeTag = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n    const [{ gas_estimate: gasUnitPrice }, resources] = await Promise.all([\n      this.estimateGasPrice(),\n      this.getAccountResources(forAccount)\n    ]);\n    const accountResource = resources.find((r) => r.type === typeTag);\n    const balance = BigInt(accountResource.data.coin.value);\n    return balance / BigInt(gasUnitPrice);\n  }\n  async rotateAuthKeyEd25519(forAccount, toPrivateKeyBytes, extraArgs) {\n    const { sequence_number: sequenceNumber, authentication_key: authKey } = await this.getAccount(\n      forAccount.address()\n    );\n    const helperAccount = new AptosAccount(toPrivateKeyBytes);\n    const challenge = new aptos_types_exports.RotationProofChallenge(\n      aptos_types_exports.AccountAddress.CORE_CODE_ADDRESS,\n      \"account\",\n      \"RotationProofChallenge\",\n      BigInt(sequenceNumber),\n      aptos_types_exports.AccountAddress.fromHex(forAccount.address()),\n      new aptos_types_exports.AccountAddress(new HexString(authKey).toUint8Array()),\n      helperAccount.pubKey().toUint8Array()\n    );\n    const challengeHex = HexString.fromUint8Array(bcsToBytes(challenge));\n    const proofSignedByCurrentPrivateKey = forAccount.signHexString(challengeHex);\n    const proofSignedByNewPrivateKey = helperAccount.signHexString(challengeHex);\n    const payload = new aptos_types_exports.TransactionPayloadEntryFunction(\n      aptos_types_exports.EntryFunction.natural(\n        \"0x1::account\",\n        \"rotate_authentication_key\",\n        [],\n        [\n          bcsSerializeU8(0),\n          bcsSerializeBytes(forAccount.pubKey().toUint8Array()),\n          bcsSerializeU8(0),\n          bcsSerializeBytes(helperAccount.pubKey().toUint8Array()),\n          bcsSerializeBytes(proofSignedByCurrentPrivateKey.toUint8Array()),\n          bcsSerializeBytes(proofSignedByNewPrivateKey.toUint8Array())\n        ]\n      )\n    );\n    const rawTransaction = await this.generateRawTransaction(forAccount.address(), payload, extraArgs);\n    const bcsTxn = _AptosClient.generateBCSTransaction(forAccount, rawTransaction);\n    return this.submitSignedBCSTransaction(bcsTxn);\n  }\n  async lookupOriginalAddress(addressOrAuthKey) {\n    const resource = await this.getAccountResource(\"0x1\", \"0x1::account::OriginatingAddress\");\n    const {\n      address_map: { handle }\n    } = resource.data;\n    const origAddress = await this.getTableItem(handle, {\n      key_type: \"address\",\n      value_type: \"address\",\n      key: HexString.ensure(addressOrAuthKey).hex()\n    });\n    return new HexString(origAddress);\n  }\n  async getBlockByHeight(blockHeight, withTransactions) {\n    return this.client.blocks.getBlockByHeight(blockHeight, withTransactions);\n  }\n  async getBlockByVersion(version, withTransactions) {\n    return this.client.blocks.getBlockByVersion(version, withTransactions);\n  }\n  async view(payload, ledger_version) {\n    return this.client.view.view(payload, ledger_version);\n  }\n  clearCache(tags) {\n    clear(tags);\n  }\n};\nvar AptosClient = _AptosClient;\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccount\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccountTransactions\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccountModules\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccountModule\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccountResources\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getAccountResource\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getEventsByCreationNumber\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getEventsByEventHandle\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"submitSignedBCSTransaction\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"submitBCSSimulation\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getTransactions\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getTransactionByHash\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getTransactionByVersion\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getLedgerInfo\", 1);\n__decorateClass([\n  Memoize()\n], AptosClient.prototype, \"getChainId\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getTableItem\", 1);\n__decorateClass([\n  parseApiError,\n  Memoize({\n    ttlMs: 5 * 60 * 1e3,\n    tags: [\"gas_estimates\"]\n  })\n], AptosClient.prototype, \"estimateGasPrice\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"estimateMaxGasAmount\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getBlockByHeight\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"getBlockByVersion\", 1);\n__decorateClass([\n  parseApiError\n], AptosClient.prototype, \"view\", 1);\nvar ApiError2 = class extends Error {\n  constructor(status, message, errorCode, vmErrorCode) {\n    super(message);\n    this.status = status;\n    this.message = message;\n    this.errorCode = errorCode;\n    this.vmErrorCode = vmErrorCode;\n  }\n};\nvar WaitForTransactionError = class extends Error {\n  constructor(message, lastSubmittedTransaction) {\n    super(message);\n    this.lastSubmittedTransaction = lastSubmittedTransaction;\n  }\n};\nvar FailedTransactionError = class extends Error {\n  constructor(message, transaction) {\n    super(message);\n    this.transaction = transaction;\n  }\n};\nfunction parseApiError(target, propertyKey, descriptor) {\n  const childFunction = descriptor.value;\n  descriptor.value = async function wrapper(...args) {\n    var _a, _b;\n    try {\n      const res = await childFunction.apply(this, [...args]);\n      return res;\n    } catch (e) {\n      if (e instanceof ApiError) {\n        throw new ApiError2(\n          e.status,\n          JSON.stringify({ message: e.message, ...e.body }),\n          (_a = e.body) == null ? void 0 : _a.error_code,\n          (_b = e.body) == null ? void 0 : _b.vm_error_code\n        );\n      }\n      throw e;\n    }\n  };\n  return descriptor;\n}\n\n// src/providers/provider.ts\nvar Provider = class {\n  constructor(network, config, doNotFixNodeUrl = false) {\n    let fullNodeUrl = null;\n    let indexerUrl = null;\n    if (typeof network === \"object\" && isCustomEndpoints(network)) {\n      fullNodeUrl = network.fullnodeUrl;\n      indexerUrl = network.indexerUrl;\n      this.network = \"CUSTOM\";\n    } else {\n      fullNodeUrl = NetworkToNodeAPI[network];\n      indexerUrl = NetworkToIndexerAPI[network];\n      this.network = network;\n    }\n    if (!fullNodeUrl || !indexerUrl) {\n      throw new Error(\"network is not provided\");\n    }\n    this.aptosClient = new AptosClient(fullNodeUrl, config, doNotFixNodeUrl);\n    this.indexerClient = new IndexerClient(indexerUrl);\n  }\n};\nfunction applyMixin(targetClass, baseClass, baseClassProp) {\n  Object.getOwnPropertyNames(baseClass.prototype).forEach((propertyName) => {\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, propertyName);\n    if (!propertyDescriptor)\n      return;\n    propertyDescriptor.value = function(...args) {\n      return this[baseClassProp][propertyName](...args);\n    };\n    Object.defineProperty(targetClass.prototype, propertyName, propertyDescriptor);\n  });\n}\napplyMixin(Provider, AptosClient, \"aptosClient\");\napplyMixin(Provider, IndexerClient, \"indexerClient\");\nfunction isCustomEndpoints(network) {\n  return network.fullnodeUrl !== void 0 && typeof network.fullnodeUrl === \"string\" && network.indexerUrl !== void 0 && typeof network.indexerUrl === \"string\";\n}\n\n// src/utils/property_map_serde.ts\nvar PropertyValue = class {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n};\nvar PropertyMap = class {\n  constructor() {\n    this.data = {};\n  }\n  setProperty(key, value) {\n    this.data[key] = value;\n  }\n};\nfunction getPropertyType(typ) {\n  let typeTag;\n  if (typ === \"string\" || typ === \"String\") {\n    typeTag = new TypeTagStruct(stringStructTag);\n  } else {\n    typeTag = new TypeTagParser(typ).parseTypeTag();\n  }\n  return typeTag;\n}\nfunction getPropertyValueRaw(values, types) {\n  if (values.length !== types.length) {\n    throw new Error(\"Length of property values and types not match\");\n  }\n  const results = new Array();\n  types.forEach((typ, index) => {\n    try {\n      const typeTag = getPropertyType(typ);\n      const serializer = new Serializer();\n      serializeArg(values[index], typeTag, serializer);\n      results.push(serializer.getBytes());\n    } catch (error) {\n      results.push(new TextEncoder().encode(values[index]));\n    }\n  });\n  return results;\n}\nfunction getSinglePropertyValueRaw(value, type) {\n  if (!value || !type) {\n    throw new Error(\"value or type can not be empty\");\n  }\n  try {\n    const typeTag = getPropertyType(type);\n    const serializer = new Serializer();\n    serializeArg(value, typeTag, serializer);\n    return serializer.getBytes();\n  } catch (error) {\n    return new TextEncoder().encode(value);\n  }\n}\nfunction deserializePropertyMap(rawPropertyMap) {\n  const entries = rawPropertyMap.map.data;\n  const pm = new PropertyMap();\n  entries.forEach((prop) => {\n    const { key } = prop;\n    const val = prop.value.value;\n    const typ = prop.value.type;\n    const typeTag = getPropertyType(typ);\n    const newValue = deserializeValueBasedOnTypeTag(typeTag, val);\n    const pv = new PropertyValue(typ, newValue);\n    pm.setProperty(key, pv);\n  });\n  return pm;\n}\nfunction deserializeValueBasedOnTypeTag(tag, val) {\n  const de = new Deserializer(new HexString(val).toUint8Array());\n  let res = \"\";\n  if (tag instanceof TypeTagU8) {\n    res = de.deserializeU8().toString();\n  } else if (tag instanceof TypeTagU64) {\n    res = de.deserializeU64().toString();\n  } else if (tag instanceof TypeTagU128) {\n    res = de.deserializeU128().toString();\n  } else if (tag instanceof TypeTagBool) {\n    res = de.deserializeBool() ? \"true\" : \"false\";\n  } else if (tag instanceof TypeTagAddress) {\n    res = HexString.fromUint8Array(de.deserializeFixedBytes(32)).hex();\n  } else if (tag instanceof TypeTagStruct && tag.isStringTypeTag()) {\n    res = de.deserializeStr();\n  } else {\n    res = val;\n  }\n  return res;\n}\n\n// src/aptos_types/token_types.ts\nvar token_types_exports = {};\n__export(token_types_exports, {\n  PropertyMap: () => PropertyMap,\n  PropertyValue: () => PropertyValue,\n  Token: () => Token,\n  TokenData: () => TokenData\n});\nvar TokenData = class {\n  constructor(collection, description, name, maximum, supply, uri, default_properties, mutability_config) {\n    this.collection = collection;\n    this.description = description;\n    this.name = name;\n    this.maximum = maximum;\n    this.supply = supply;\n    this.uri = uri;\n    this.default_properties = deserializePropertyMap(default_properties);\n    this.mutability_config = mutability_config;\n  }\n};\nvar Token = class {\n  constructor(id, amount, token_properties) {\n    this.id = id;\n    this.amount = amount;\n    this.token_properties = deserializePropertyMap(token_properties);\n  }\n};\n\n// src/plugins/token_client.ts\nvar TokenClient = class {\n  constructor(aptosClient) {\n    this.aptosClient = aptosClient;\n  }\n  async createCollection(account, name, description, uri, maxAmount = MAX_U64_BIG_INT, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_collection_script\",\n      [],\n      [name, description, uri, maxAmount, [false, false, false]]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async createToken(account, collectionName, name, description, supply, uri, max = MAX_U64_BIG_INT, royalty_payee_address = account.address(), royalty_points_denominator = 0, royalty_points_numerator = 0, property_keys = [], property_values = [], property_types = [], extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        [false, false, false, false, false],\n        property_keys,\n        getPropertyValueRaw(property_values, property_types),\n        property_types\n      ]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async createTokenWithMutabilityConfig(account, collectionName, name, description, supply, uri, max = MAX_U64_BIG_INT, royalty_payee_address = account.address(), royalty_points_denominator = 0, royalty_points_numerator = 0, property_keys = [], property_values = [], property_types = [], mutability_config = [false, false, false, false, false], extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::create_token_script\",\n      [],\n      [\n        collectionName,\n        name,\n        description,\n        supply,\n        max,\n        uri,\n        royalty_payee_address,\n        royalty_points_denominator,\n        royalty_points_numerator,\n        mutability_config,\n        property_keys,\n        property_values,\n        property_types\n      ]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async offerToken(account, receiver, creator, collectionName, name, amount, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async claimToken(account, sender, creator, collectionName, name, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::claim_script\",\n      [],\n      [sender, creator, collectionName, name, property_version]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async cancelTokenOffer(account, receiver, creator, collectionName, name, property_version = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token_transfers::cancel_offer_script\",\n      [],\n      [receiver, creator, collectionName, name, property_version]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async directTransferToken(sender, receiver, creator, collectionName, name, amount, propertyVersion = 0, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::direct_transfer_script\",\n      [],\n      [creator, collectionName, name, propertyVersion, amount]\n    );\n    const multiAgentTxn = new aptos_types_exports.MultiAgentRawTransaction(rawTxn, [\n      aptos_types_exports.AccountAddress.fromHex(receiver.address())\n    ]);\n    const senderSignature = new aptos_types_exports.Ed25519Signature(\n      sender.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array()\n    );\n    const senderAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(sender.signingKey.publicKey),\n      senderSignature\n    );\n    const receiverSignature = new aptos_types_exports.Ed25519Signature(\n      receiver.signBuffer(TransactionBuilder.getSigningMessage(multiAgentTxn)).toUint8Array()\n    );\n    const receiverAuthenticator = new aptos_types_exports.AccountAuthenticatorEd25519(\n      new aptos_types_exports.Ed25519PublicKey(receiver.signingKey.publicKey),\n      receiverSignature\n    );\n    const multiAgentAuthenticator = new aptos_types_exports.TransactionAuthenticatorMultiAgent(\n      senderAuthenticator,\n      [aptos_types_exports.AccountAddress.fromHex(receiver.address())],\n      [receiverAuthenticator]\n    );\n    const bcsTxn = bcsToBytes(new aptos_types_exports.SignedTransaction(rawTxn, multiAgentAuthenticator));\n    const transactionRes = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return transactionRes.hash;\n  }\n  async optInTokenTransfer(sender, optIn, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\"0x3::token::opt_in_direct_transfer\", [], [optIn]);\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async transferWithOptIn(sender, creator, collectionName, tokenName, propertyVersion, receiver, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: sender.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::transfer_with_opt_in\",\n      [],\n      [creator, collectionName, tokenName, propertyVersion, receiver, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(sender, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async burnByCreator(creator, ownerAddress, collection, name, PropertyVersion, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: creator.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn_by_creator\",\n      [],\n      [ownerAddress, collection, name, PropertyVersion, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(creator, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async burnByOwner(owner, creatorAddress, collection, name, PropertyVersion, amount, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: owner.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::burn\",\n      [],\n      [creatorAddress, collection, name, PropertyVersion, amount]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async mutateTokenProperties(account, tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: account.address(), ...extraArgs });\n    const rawTxn = await builder.build(\n      \"0x3::token::mutate_token_properties\",\n      [],\n      [tokenOwner, creator, collection_name, tokenName, propertyVersion, amount, keys, values, types]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async getCollectionData(creator, collectionName) {\n    const resources = await this.aptosClient.getAccountResources(creator);\n    const accountResource = resources.find(\n      (r) => r.type === \"0x3::token::Collections\"\n    );\n    const { handle } = accountResource.data.collection_data;\n    const getCollectionTableItemRequest = {\n      key_type: \"0x1::string::String\",\n      value_type: \"0x3::token::CollectionData\",\n      key: collectionName\n    };\n    const collectionTable = await this.aptosClient.getTableItem(handle, getCollectionTableItemRequest);\n    return collectionTable;\n  }\n  async getTokenData(creator, collectionName, tokenName) {\n    const creatorHex = creator instanceof HexString ? creator.hex() : creator;\n    const collection = await this.aptosClient.getAccountResource(\n      creatorHex,\n      \"0x3::token::Collections\"\n    );\n    const { handle } = collection.data.token_data;\n    const tokenDataId = {\n      creator: creatorHex,\n      collection: collectionName,\n      name: tokenName\n    };\n    const getTokenTableItemRequest = {\n      key_type: \"0x3::token::TokenDataId\",\n      value_type: \"0x3::token::TokenData\",\n      key: tokenDataId\n    };\n    const rawTokenData = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n    return new TokenData(\n      rawTokenData.collection,\n      rawTokenData.description,\n      rawTokenData.name,\n      rawTokenData.maximum,\n      rawTokenData.supply,\n      rawTokenData.uri,\n      rawTokenData.default_properties,\n      rawTokenData.mutability_config\n    );\n  }\n  async getToken(creator, collectionName, tokenName, property_version = \"0\") {\n    const tokenDataId = {\n      creator: creator instanceof HexString ? creator.hex() : creator,\n      collection: collectionName,\n      name: tokenName\n    };\n    return this.getTokenForAccount(creator, {\n      token_data_id: tokenDataId,\n      property_version\n    });\n  }\n  async getTokenForAccount(account, tokenId) {\n    const tokenStore = await this.aptosClient.getAccountResource(\n      account instanceof HexString ? account.hex() : account,\n      \"0x3::token::TokenStore\"\n    );\n    const { handle } = tokenStore.data.tokens;\n    const getTokenTableItemRequest = {\n      key_type: \"0x3::token::TokenId\",\n      value_type: \"0x3::token::Token\",\n      key: tokenId\n    };\n    try {\n      const rawToken = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n      return new Token(rawToken.id, rawToken.amount, rawToken.token_properties);\n    } catch (error) {\n      if ((error == null ? void 0 : error.status) === 404) {\n        return {\n          id: tokenId,\n          amount: \"0\",\n          token_properties: new PropertyMap()\n        };\n      }\n      return error;\n    }\n  }\n};\n\n// src/plugins/aptos_token.ts\nvar PropertyTypeMap = {\n  BOOLEAN: \"bool\",\n  U8: \"u8\",\n  U16: \"u16\",\n  U32: \"u32\",\n  U64: \"u64\",\n  U128: \"u128\",\n  U256: \"u256\",\n  ADDRESS: \"address\",\n  VECTOR: \"vector<u8>\",\n  STRING: \"string\"\n};\nvar AptosToken = class {\n  constructor(provider) {\n    this.tokenType = \"0x4::token::Token\";\n    this.provider = provider;\n  }\n  async submitTransaction(account, funcName, typeArgs, args, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider, {\n      sender: account.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(`0x4::aptos_token::${funcName}`, typeArgs, args);\n    const bcsTxn = AptosClient.generateBCSTransaction(account, rawTxn);\n    const pendingTransaction = await this.provider.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async createCollection(creator, description, name, uri, maxSupply = MAX_U64_BIG_INT, options, extraArgs) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;\n    return this.submitTransaction(\n      creator,\n      \"create_collection\",\n      [],\n      [\n        description,\n        maxSupply,\n        name,\n        uri,\n        (_a = options == null ? void 0 : options.mutableDescription) != null ? _a : true,\n        (_b = options == null ? void 0 : options.mutableRoyalty) != null ? _b : true,\n        (_c = options == null ? void 0 : options.mutableURI) != null ? _c : true,\n        (_d = options == null ? void 0 : options.mutableTokenDescription) != null ? _d : true,\n        (_e = options == null ? void 0 : options.mutableTokenName) != null ? _e : true,\n        (_f = options == null ? void 0 : options.mutableTokenProperties) != null ? _f : true,\n        (_g = options == null ? void 0 : options.mutableTokenURI) != null ? _g : true,\n        (_h = options == null ? void 0 : options.tokensBurnableByCreator) != null ? _h : true,\n        (_i = options == null ? void 0 : options.tokensFreezableByCreator) != null ? _i : true,\n        (_j = options == null ? void 0 : options.royaltyNumerator) != null ? _j : 0,\n        (_k = options == null ? void 0 : options.royaltyDenominator) != null ? _k : 0\n      ],\n      extraArgs\n    );\n  }\n  async mint(account, collection, description, name, uri, propertyKeys = [], propertyTypes = [], propertyValues = [], extraArgs) {\n    return this.submitTransaction(\n      account,\n      \"mint\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes)\n      ],\n      extraArgs\n    );\n  }\n  async mintSoulBound(account, collection, description, name, uri, recipient, propertyKeys = [], propertyTypes = [], propertyValues = [], extraArgs) {\n    return this.submitTransaction(\n      account,\n      \"mint_soul_bound\",\n      [],\n      [\n        collection,\n        description,\n        name,\n        uri,\n        propertyKeys,\n        propertyTypes,\n        getPropertyValueRaw(propertyValues, propertyTypes),\n        recipient.address().hex()\n      ],\n      extraArgs\n    );\n  }\n  async burnToken(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"burn\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  async freezeTokenTransafer(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"freeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  async unfreezeTokenTransafer(creator, token, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"unfreeze_transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex()],\n      extraArgs\n    );\n  }\n  async setTokenDescription(creator, token, description, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_description\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), description],\n      extraArgs\n    );\n  }\n  async setTokenName(creator, token, name, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_name\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), name],\n      extraArgs\n    );\n  }\n  async setTokenURI(creator, token, uri, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"set_uri\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), uri],\n      extraArgs\n    );\n  }\n  async addTokenProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"add_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType])\n      ],\n      extraArgs\n    );\n  }\n  async removeTokenProperty(creator, token, propertyKey, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"remove_property\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), propertyKey],\n      extraArgs\n    );\n  }\n  async updateTokenProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"update_property\",\n      [tokenType || this.tokenType],\n      [\n        HexString.ensure(token).hex(),\n        propertyKey,\n        PropertyTypeMap[propertyType],\n        getSinglePropertyValueRaw(propertyValue, PropertyTypeMap[propertyType])\n      ],\n      extraArgs\n    );\n  }\n  async addTypedProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"add_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs\n    );\n  }\n  async updateTypedProperty(creator, token, propertyKey, propertyType, propertyValue, tokenType, extraArgs) {\n    return this.submitTransaction(\n      creator,\n      \"update_typed_property\",\n      [tokenType || this.tokenType, PropertyTypeMap[propertyType]],\n      [HexString.ensure(token).hex(), propertyKey, propertyValue],\n      extraArgs\n    );\n  }\n  async transferTokenOwnership(owner, token, recipient, tokenType, extraArgs) {\n    const builder = new TransactionBuilderRemoteABI(this.provider.aptosClient, {\n      sender: owner.address(),\n      ...extraArgs\n    });\n    const rawTxn = await builder.build(\n      \"0x1::object::transfer\",\n      [tokenType || this.tokenType],\n      [HexString.ensure(token).hex(), HexString.ensure(recipient).hex()]\n    );\n    const bcsTxn = AptosClient.generateBCSTransaction(owner, rawTxn);\n    const pendingTransaction = await this.provider.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n};\n\n// src/plugins/coin_client.ts\nvar CoinClient = class {\n  constructor(aptosClient) {\n    this.aptosClient = aptosClient;\n  }\n  async transfer(from, to, amount, extraArgs) {\n    var _a;\n    const coinTypeToTransfer = (_a = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _a : APTOS_COIN;\n    const func = (extraArgs == null ? void 0 : extraArgs.createReceiverIfMissing) ? \"0x1::aptos_account::transfer_coins\" : \"0x1::coin::transfer\";\n    const toAddress = getAddressFromAccountOrAddress(to);\n    const builder = new TransactionBuilderRemoteABI(this.aptosClient, { sender: from.address(), ...extraArgs });\n    const rawTxn = await builder.build(func, [coinTypeToTransfer], [toAddress, amount]);\n    const bcsTxn = AptosClient.generateBCSTransaction(from, rawTxn);\n    const pendingTransaction = await this.aptosClient.submitSignedBCSTransaction(bcsTxn);\n    return pendingTransaction.hash;\n  }\n  async checkBalance(account, extraArgs) {\n    var _a;\n    const coinType = (_a = extraArgs == null ? void 0 : extraArgs.coinType) != null ? _a : APTOS_COIN;\n    const typeTag = `0x1::coin::CoinStore<${coinType}>`;\n    const address = getAddressFromAccountOrAddress(account);\n    const accountResource = await this.aptosClient.getAccountResource(address, typeTag);\n    return BigInt(accountResource.data.coin.value);\n  }\n};\n\n// src/plugins/faucet_client.ts\nvar FaucetClient = class extends AptosClient {\n  constructor(nodeUrl, faucetUrl, config) {\n    var _a, _b, _c;\n    super(nodeUrl, config);\n    if (!faucetUrl) {\n      throw new Error(\"Faucet URL cannot be empty.\");\n    }\n    this.faucetRequester = new AxiosHttpRequest({\n      BASE: faucetUrl,\n      VERSION: (_a = config == null ? void 0 : config.VERSION) != null ? _a : \"0.1.0\",\n      WITH_CREDENTIALS: (_b = config == null ? void 0 : config.WITH_CREDENTIALS) != null ? _b : false,\n      CREDENTIALS: (_c = config == null ? void 0 : config.CREDENTIALS) != null ? _c : \"include\",\n      TOKEN: config == null ? void 0 : config.TOKEN,\n      USERNAME: config == null ? void 0 : config.USERNAME,\n      PASSWORD: config == null ? void 0 : config.PASSWORD,\n      HEADERS: config == null ? void 0 : config.HEADERS,\n      ENCODE_PATH: config == null ? void 0 : config.ENCODE_PATH\n    });\n  }\n  async fundAccount(address, amount, timeoutSecs = DEFAULT_TXN_TIMEOUT_SEC) {\n    const tnxHashes = await this.faucetRequester.request({\n      method: \"POST\",\n      url: \"/mint\",\n      query: {\n        address: HexString.ensure(address).noPrefix(),\n        amount\n      }\n    });\n    const promises = [];\n    for (let i = 0; i < tnxHashes.length; i += 1) {\n      const tnxHash = tnxHashes[i];\n      promises.push(this.waitForTransaction(tnxHash, { timeoutSecs }));\n    }\n    await Promise.all(promises);\n    return tnxHashes;\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: () => (/* binding */ bool),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   exists: () => (/* binding */ exists),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   output: () => (/* binding */ output)\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL19hc3NlcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQSxtREFBbUQsRUFBRTtBQUNyRDtBQUNPO0FBQ1A7QUFDQSxpREFBaUQsRUFBRTtBQUNuRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELFFBQVEsa0JBQWtCLFNBQVM7QUFDaEc7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixJQUFJO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsTUFBTSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL19hc3NlcnQuanM/YTUwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gbnVtYmVyKG4pIHtcbiAgICBpZiAoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG4pIHx8IG4gPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdyb25nIHBvc2l0aXZlIGludGVnZXI6ICR7bn1gKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBib29sKGIpIHtcbiAgICBpZiAodHlwZW9mIGIgIT09ICdib29sZWFuJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBib29sZWFuLCBub3QgJHtifWApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzKGIsIC4uLmxlbmd0aHMpIHtcbiAgICBpZiAoIShiIGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKTtcbiAgICBpZiAobGVuZ3Rocy5sZW5ndGggPiAwICYmICFsZW5ndGhzLmluY2x1ZGVzKGIubGVuZ3RoKSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgVWludDhBcnJheSBvZiBsZW5ndGggJHtsZW5ndGhzfSwgbm90IG9mIGxlbmd0aD0ke2IubGVuZ3RofWApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc2goaGFzaCkge1xuICAgIGlmICh0eXBlb2YgaGFzaCAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgaGFzaC5jcmVhdGUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCBzaG91bGQgYmUgd3JhcHBlZCBieSB1dGlscy53cmFwQ29uc3RydWN0b3InKTtcbiAgICBudW1iZXIoaGFzaC5vdXRwdXRMZW4pO1xuICAgIG51bWJlcihoYXNoLmJsb2NrTGVuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBleGlzdHMoaW5zdGFuY2UsIGNoZWNrRmluaXNoZWQgPSB0cnVlKSB7XG4gICAgaWYgKGluc3RhbmNlLmRlc3Ryb3llZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZCcpO1xuICAgIGlmIChjaGVja0ZpbmlzaGVkICYmIGluc3RhbmNlLmZpbmlzaGVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2gjZGlnZXN0KCkgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvdXRwdXQob3V0LCBpbnN0YW5jZSkge1xuICAgIGJ5dGVzKG91dCk7XG4gICAgY29uc3QgbWluID0gaW5zdGFuY2Uub3V0cHV0TGVuO1xuICAgIGlmIChvdXQubGVuZ3RoIDwgbWluKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZGlnZXN0SW50bygpIGV4cGVjdHMgb3V0cHV0IGJ1ZmZlciBvZiBsZW5ndGggYXQgbGVhc3QgJHttaW59YCk7XG4gICAgfVxufVxuY29uc3QgYXNzZXJ0ID0ge1xuICAgIG51bWJlcixcbiAgICBib29sLFxuICAgIGJ5dGVzLFxuICAgIGhhc2gsXG4gICAgZXhpc3RzLFxuICAgIG91dHB1dCxcbn07XG5leHBvcnQgZGVmYXVsdCBhc3NlcnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA2: () => (/* binding */ SHA2)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL19zaGEyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUNxQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUJBQW1CLDJDQUFJO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscURBQVU7QUFDOUI7QUFDQTtBQUNBLFFBQVEseURBQWE7QUFDckIsZ0JBQWdCLHlCQUF5QjtBQUN6QyxlQUFlLGtEQUFPO0FBQ3RCO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHFEQUFVO0FBQzNDLHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFhO0FBQ3JCLFFBQVEseURBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0JBQStCO0FBQy9DLGNBQWMsTUFBTTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsY0FBYztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscURBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFxRDtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3NoYTIuanM/OGM3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJy4vX2Fzc2VydC5qcyc7XG5pbXBvcnQgeyBIYXNoLCBjcmVhdGVWaWV3LCB0b0J5dGVzIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmV4cG9ydCBjbGFzcyBTSEEyIGV4dGVuZHMgSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYmxvY2tMZW4sIG91dHB1dExlbiwgcGFkT2Zmc2V0LCBpc0xFKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRoaXMucGFkT2Zmc2V0ID0gcGFkT2Zmc2V0O1xuICAgICAgICB0aGlzLmlzTEUgPSBpc0xFO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KGJsb2NrTGVuKTtcbiAgICAgICAgdGhpcy52aWV3ID0gY3JlYXRlVmlldyh0aGlzLmJ1ZmZlcik7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIGNvbnN0IHsgdmlldywgYnVmZmVyLCBibG9ja0xlbiB9ID0gdGhpcztcbiAgICAgICAgZGF0YSA9IHRvQnl0ZXMoZGF0YSk7XG4gICAgICAgIGNvbnN0IGxlbiA9IGRhdGEubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBwb3MgPSAwOyBwb3MgPCBsZW47KSB7XG4gICAgICAgICAgICBjb25zdCB0YWtlID0gTWF0aC5taW4oYmxvY2tMZW4gLSB0aGlzLnBvcywgbGVuIC0gcG9zKTtcbiAgICAgICAgICAgIC8vIEZhc3QgcGF0aDogd2UgaGF2ZSBhdCBsZWFzdCBvbmUgYmxvY2sgaW4gaW5wdXQsIGNhc3QgaXQgdG8gdmlldyBhbmQgcHJvY2Vzc1xuICAgICAgICAgICAgaWYgKHRha2UgPT09IGJsb2NrTGVuKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YVZpZXcgPSBjcmVhdGVWaWV3KGRhdGEpO1xuICAgICAgICAgICAgICAgIGZvciAoOyBibG9ja0xlbiA8PSBsZW4gLSBwb3M7IHBvcyArPSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzKGRhdGFWaWV3LCBwb3MpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyLnNldChkYXRhLnN1YmFycmF5KHBvcywgcG9zICsgdGFrZSksIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvcyA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICB0aGlzLnJvdW5kQ2xlYW4oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIGFzc2VydC5vdXRwdXQob3V0LCB0aGlzKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIC8vIFBhZGRpbmdcbiAgICAgICAgLy8gV2UgY2FuIGF2b2lkIGFsbG9jYXRpb24gb2YgYnVmZmVyIGZvciBwYWRkaW5nIGNvbXBsZXRlbHkgaWYgaXRcbiAgICAgICAgLy8gd2FzIHByZXZpb3VzbHkgbm90IGFsbG9jYXRlZCBoZXJlLiBCdXQgaXQgd29uJ3QgY2hhbmdlIHBlcmZvcm1hbmNlLlxuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgdmlldywgYmxvY2tMZW4sIGlzTEUgfSA9IHRoaXM7XG4gICAgICAgIGxldCB7IHBvcyB9ID0gdGhpcztcbiAgICAgICAgLy8gYXBwZW5kIHRoZSBiaXQgJzEnIHRvIHRoZSBtZXNzYWdlXG4gICAgICAgIGJ1ZmZlcltwb3MrK10gPSAwYjEwMDAwMDAwO1xuICAgICAgICB0aGlzLmJ1ZmZlci5zdWJhcnJheShwb3MpLmZpbGwoMCk7XG4gICAgICAgIC8vIHdlIGhhdmUgbGVzcyB0aGFuIHBhZE9mZnNldCBsZWZ0IGluIGJ1ZmZlciwgc28gd2UgY2Fubm90IHB1dCBsZW5ndGggaW4gY3VycmVudCBibG9jaywgbmVlZCBwcm9jZXNzIGl0IGFuZCBwYWQgYWdhaW5cbiAgICAgICAgaWYgKHRoaXMucGFkT2Zmc2V0ID4gYmxvY2tMZW4gLSBwb3MpIHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgICAgIHBvcyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFkIHVudGlsIGZ1bGwgYmxvY2sgYnl0ZSB3aXRoIHplcm9zXG4gICAgICAgIGZvciAobGV0IGkgPSBwb3M7IGkgPCBibG9ja0xlbjsgaSsrKVxuICAgICAgICAgICAgYnVmZmVyW2ldID0gMDtcbiAgICAgICAgLy8gTm90ZTogc2hhNTEyIHJlcXVpcmVzIGxlbmd0aCB0byBiZSAxMjhiaXQgaW50ZWdlciwgYnV0IGxlbmd0aCBpbiBKUyB3aWxsIG92ZXJmbG93IGJlZm9yZSB0aGF0XG4gICAgICAgIC8vIFlvdSBuZWVkIHRvIHdyaXRlIGFyb3VuZCAyIGV4YWJ5dGVzICh1NjRfbWF4IC8gOCAvICgxMDI0Kio2KSkgZm9yIHRoaXMgdG8gaGFwcGVuLlxuICAgICAgICAvLyBTbyB3ZSBqdXN0IHdyaXRlIGxvd2VzdCA2NCBiaXRzIG9mIHRoYXQgdmFsdWUuXG4gICAgICAgIHNldEJpZ1VpbnQ2NCh2aWV3LCBibG9ja0xlbiAtIDgsIEJpZ0ludCh0aGlzLmxlbmd0aCAqIDgpLCBpc0xFKTtcbiAgICAgICAgdGhpcy5wcm9jZXNzKHZpZXcsIDApO1xuICAgICAgICBjb25zdCBvdmlldyA9IGNyZWF0ZVZpZXcob3V0KTtcbiAgICAgICAgdGhpcy5nZXQoKS5mb3JFYWNoKCh2LCBpKSA9PiBvdmlldy5zZXRVaW50MzIoNCAqIGksIHYsIGlzTEUpKTtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgb3V0cHV0TGVuIH0gPSB0aGlzO1xuICAgICAgICB0aGlzLmRpZ2VzdEludG8oYnVmZmVyKTtcbiAgICAgICAgY29uc3QgcmVzID0gYnVmZmVyLnNsaWNlKDAsIG91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIHRvIHx8ICh0byA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKCkpO1xuICAgICAgICB0by5zZXQoLi4udGhpcy5nZXQoKSk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIGJ1ZmZlciwgbGVuZ3RoLCBmaW5pc2hlZCwgZGVzdHJveWVkLCBwb3MgfSA9IHRoaXM7XG4gICAgICAgIHRvLmxlbmd0aCA9IGxlbmd0aDtcbiAgICAgICAgdG8ucG9zID0gcG9zO1xuICAgICAgICB0by5maW5pc2hlZCA9IGZpbmlzaGVkO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSBkZXN0cm95ZWQ7XG4gICAgICAgIGlmIChsZW5ndGggJSBibG9ja0xlbilcbiAgICAgICAgICAgIHRvLmJ1ZmZlci5zZXQoYnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL191NjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEMsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzPzBiNDgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVTMyX01BU0s2NCA9IEJpZ0ludCgyICoqIDMyIC0gMSk7XG5jb25zdCBfMzJuID0gQmlnSW50KDMyKTtcbi8vIFdlIGFyZSBub3QgdXNpbmcgQmlnVWludDY0QXJyYXksIGJlY2F1c2UgdGhleSBhcmUgZXh0cmVtZWx5IHNsb3cgYXMgcGVyIDIwMjJcbmV4cG9ydCBmdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0KGxzdCwgbGUgPSBmYWxzZSkge1xuICAgIGxldCBBaCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBsZXQgQWwgPSBuZXcgVWludDMyQXJyYXkobHN0Lmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgeyBoLCBsIH0gPSBmcm9tQmlnKGxzdFtpXSwgbGUpO1xuICAgICAgICBbQWhbaV0sIEFsW2ldXSA9IFtoLCBsXTtcbiAgICB9XG4gICAgcmV0dXJuIFtBaCwgQWxdO1xufVxuZXhwb3J0IGNvbnN0IHRvQmlnID0gKGgsIGwpID0+IChCaWdJbnQoaCA+Pj4gMCkgPDwgXzMybikgfCBCaWdJbnQobCA+Pj4gMCk7XG4vLyBmb3IgU2hpZnQgaW4gWzAsIDMyKVxuY29uc3Qgc2hyU0ggPSAoaCwgbCwgcykgPT4gaCA+Pj4gcztcbmNvbnN0IHNoclNMID0gKGgsIGwsIHMpID0+IChoIDw8ICgzMiAtIHMpKSB8IChsID4+PiBzKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gWzEsIDMyKVxuY29uc3Qgcm90clNIID0gKGgsIGwsIHMpID0+IChoID4+PiBzKSB8IChsIDw8ICgzMiAtIHMpKTtcbmNvbnN0IHJvdHJTTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoMzIgLSBzKSkgfCAobCA+Pj4gcyk7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluICgzMiwgNjQpLCBOT1RFOiAzMiBpcyBzcGVjaWFsIGNhc2UuXG5jb25zdCByb3RyQkggPSAoaCwgbCwgcykgPT4gKGggPDwgKDY0IC0gcykpIHwgKGwgPj4+IChzIC0gMzIpKTtcbmNvbnN0IHJvdHJCTCA9IChoLCBsLCBzKSA9PiAoaCA+Pj4gKHMgLSAzMikpIHwgKGwgPDwgKDY0IC0gcykpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBzaGlmdD09PTMyIChqdXN0IHN3YXBzIGwmaClcbmNvbnN0IHJvdHIzMkggPSAoaCwgbCkgPT4gbDtcbmNvbnN0IHJvdHIzMkwgPSAoaCwgbCkgPT4gaDtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RsU0ggPSAoaCwgbCwgcykgPT4gKGggPDwgcykgfCAobCA+Pj4gKDMyIC0gcykpO1xuY29uc3Qgcm90bFNMID0gKGgsIGwsIHMpID0+IChsIDw8IHMpIHwgKGggPj4+ICgzMiAtIHMpKTtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90bEJIID0gKGgsIGwsIHMpID0+IChsIDw8IChzIC0gMzIpKSB8IChoID4+PiAoNjQgLSBzKSk7XG5jb25zdCByb3RsQkwgPSAoaCwgbCwgcykgPT4gKGggPDwgKHMgLSAzMikpIHwgKGwgPj4+ICg2NCAtIHMpKTtcbi8vIEpTIHVzZXMgMzItYml0IHNpZ25lZCBpbnRlZ2VycyBmb3IgYml0d2lzZSBvcGVyYXRpb25zIHdoaWNoIG1lYW5zIHdlIGNhbm5vdFxuLy8gc2ltcGxlIHRha2UgY2Fycnkgb3V0IG9mIGxvdyBiaXQgc3VtIGJ5IHNoaWZ0LCB3ZSBuZWVkIHRvIHVzZSBkaXZpc2lvbi5cbi8vIFJlbW92aW5nIFwiZXhwb3J0XCIgaGFzIDUlIHBlcmYgcGVuYWx0eSAtXy1cbmV4cG9ydCBmdW5jdGlvbiBhZGQoQWgsIEFsLCBCaCwgQmwpIHtcbiAgICBjb25zdCBsID0gKEFsID4+PiAwKSArIChCbCA+Pj4gMCk7XG4gICAgcmV0dXJuIHsgaDogKEFoICsgQmggKyAoKGwgLyAyICoqIDMyKSB8IDApKSB8IDAsIGw6IGwgfCAwIH07XG59XG4vLyBBZGRpdGlvbiB3aXRoIG1vcmUgdGhhbiAyIGVsZW1lbnRzXG5jb25zdCBhZGQzTCA9IChBbCwgQmwsIENsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCk7XG5jb25zdCBhZGQzSCA9IChsb3csIEFoLCBCaCwgQ2gpID0+IChBaCArIEJoICsgQ2ggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDRMID0gKEFsLCBCbCwgQ2wsIERsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApO1xuY29uc3QgYWRkNEggPSAobG93LCBBaCwgQmgsIENoLCBEaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ1TCA9IChBbCwgQmwsIENsLCBEbCwgRWwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCkgKyAoRWwgPj4+IDApO1xuY29uc3QgYWRkNUggPSAobG93LCBBaCwgQmgsIENoLCBEaCwgRWgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArIEVoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IHU2NCA9IHtcbiAgICBmcm9tQmlnLCBzcGxpdCwgdG9CaWcsXG4gICAgc2hyU0gsIHNoclNMLFxuICAgIHJvdHJTSCwgcm90clNMLCByb3RyQkgsIHJvdHJCTCxcbiAgICByb3RyMzJILCByb3RyMzJMLFxuICAgIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCxcbiAgICBhZGQsIGFkZDNMLCBhZGQzSCwgYWRkNEwsIGFkZDRILCBhZGQ1SCwgYWRkNUwsXG59O1xuZXhwb3J0IGRlZmF1bHQgdTY0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n\nconst crypto = {\n    node: /*#__PURE__*/ (crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(crypto__WEBPACK_IMPORTED_MODULE_0__, 2))),\n    web: undefined,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2NyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDOUI7QUFDUCxVQUFVLDRMQUFVO0FBQ3BCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vY3J5cHRvLmpzPzBhOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbm9kZUNyeXB0byBmcm9tICdjcnlwdG8nO1xuZXhwb3J0IGNvbnN0IGNyeXB0byA9IHtcbiAgICBub2RlOiBub2RlQ3J5cHRvLFxuICAgIHdlYjogdW5kZWZpbmVkLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hmac: () => (/* binding */ hmac)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// HMAC (RFC 2104)\nclass HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(hash);\n        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL2htYWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ1M7QUFDM0M7QUFDQSxtQkFBbUIsMkNBQUk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFXO0FBQ25CLG9CQUFvQixrREFBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQixRQUFRLHdEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFO0FBQ2pFLGdCQUFnQix5REFBeUQ7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2FwdG9zL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9obWFjLmpzPzY4OGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tICcuL19hc3NlcnQuanMnO1xuaW1wb3J0IHsgSGFzaCwgdG9CeXRlcyB9IGZyb20gJy4vdXRpbHMuanMnO1xuLy8gSE1BQyAoUkZDIDIxMDQpXG5jbGFzcyBITUFDIGV4dGVuZHMgSGFzaCB7XG4gICAgY29uc3RydWN0b3IoaGFzaCwgX2tleSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgICAgIGFzc2VydC5oYXNoKGhhc2gpO1xuICAgICAgICBjb25zdCBrZXkgPSB0b0J5dGVzKF9rZXkpO1xuICAgICAgICB0aGlzLmlIYXNoID0gaGFzaC5jcmVhdGUoKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmlIYXNoLnVwZGF0ZSAhPT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGluc3RhbmNlIG9mIGNsYXNzIHdoaWNoIGV4dGVuZHMgdXRpbHMuSGFzaCcpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gdGhpcy5pSGFzaC5ibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSB0aGlzLmlIYXNoLm91dHB1dExlbjtcbiAgICAgICAgY29uc3QgYmxvY2tMZW4gPSB0aGlzLmJsb2NrTGVuO1xuICAgICAgICBjb25zdCBwYWQgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIC8vIGJsb2NrTGVuIGNhbiBiZSBiaWdnZXIgdGhhbiBvdXRwdXRMZW5cbiAgICAgICAgcGFkLnNldChrZXkubGVuZ3RoID4gYmxvY2tMZW4gPyBoYXNoLmNyZWF0ZSgpLnVwZGF0ZShrZXkpLmRpZ2VzdCgpIDoga2V5KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWQubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBwYWRbaV0gXj0gMHgzNjtcbiAgICAgICAgdGhpcy5pSGFzaC51cGRhdGUocGFkKTtcbiAgICAgICAgLy8gQnkgZG9pbmcgdXBkYXRlIChwcm9jZXNzaW5nIG9mIGZpcnN0IGJsb2NrKSBvZiBvdXRlciBoYXNoIGhlcmUgd2UgY2FuIHJlLXVzZSBpdCBiZXR3ZWVuIG11bHRpcGxlIGNhbGxzIHZpYSBjbG9uZVxuICAgICAgICB0aGlzLm9IYXNoID0gaGFzaC5jcmVhdGUoKTtcbiAgICAgICAgLy8gVW5kbyBpbnRlcm5hbCBYT1IgJiYgYXBwbHkgb3V0ZXIgWE9SXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFkLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgcGFkW2ldIF49IDB4MzYgXiAweDVjO1xuICAgICAgICB0aGlzLm9IYXNoLnVwZGF0ZShwYWQpO1xuICAgICAgICBwYWQuZmlsbCgwKTtcbiAgICB9XG4gICAgdXBkYXRlKGJ1Zikge1xuICAgICAgICBhc3NlcnQuZXhpc3RzKHRoaXMpO1xuICAgICAgICB0aGlzLmlIYXNoLnVwZGF0ZShidWYpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0SW50byhvdXQpIHtcbiAgICAgICAgYXNzZXJ0LmV4aXN0cyh0aGlzKTtcbiAgICAgICAgYXNzZXJ0LmJ5dGVzKG91dCwgdGhpcy5vdXRwdXRMZW4pO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5pSGFzaC5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHRoaXMub0hhc2gudXBkYXRlKG91dCk7XG4gICAgICAgIHRoaXMub0hhc2guZGlnZXN0SW50byhvdXQpO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheSh0aGlzLm9IYXNoLm91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZGlnZXN0SW50byhvdXQpO1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIC8vIENyZWF0ZSBuZXcgaW5zdGFuY2Ugd2l0aG91dCBjYWxsaW5nIGNvbnN0cnVjdG9yIHNpbmNlIGtleSBhbHJlYWR5IGluIHN0YXRlIGFuZCB3ZSBkb24ndCBrbm93IGl0LlxuICAgICAgICB0byB8fCAodG8gPSBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKSwge30pKTtcbiAgICAgICAgY29uc3QgeyBvSGFzaCwgaUhhc2gsIGZpbmlzaGVkLCBkZXN0cm95ZWQsIGJsb2NrTGVuLCBvdXRwdXRMZW4gfSA9IHRoaXM7XG4gICAgICAgIHRvID0gdG87XG4gICAgICAgIHRvLmZpbmlzaGVkID0gZmluaXNoZWQ7XG4gICAgICAgIHRvLmRlc3Ryb3llZCA9IGRlc3Ryb3llZDtcbiAgICAgICAgdG8uYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdG8ub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0by5vSGFzaCA9IG9IYXNoLl9jbG9uZUludG8odG8ub0hhc2gpO1xuICAgICAgICB0by5pSGFzaCA9IGlIYXNoLl9jbG9uZUludG8odG8uaUhhc2gpO1xuICAgICAgICByZXR1cm4gdG87XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vSGFzaC5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuaUhhc2guZGVzdHJveSgpO1xuICAgIH1cbn1cbi8qKlxuICogSE1BQzogUkZDMjEwNCBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGNvZGUuXG4gKiBAcGFyYW0gaGFzaCAtIGZ1bmN0aW9uIHRoYXQgd291bGQgYmUgdXNlZCBlLmcuIHNoYTI1NlxuICogQHBhcmFtIGtleSAtIG1lc3NhZ2Uga2V5XG4gKiBAcGFyYW0gbWVzc2FnZSAtIG1lc3NhZ2UgZGF0YVxuICovXG5leHBvcnQgY29uc3QgaG1hYyA9IChoYXNoLCBrZXksIG1lc3NhZ2UpID0+IG5ldyBITUFDKGhhc2gsIGtleSkudXBkYXRlKG1lc3NhZ2UpLmRpZ2VzdCgpO1xuaG1hYy5jcmVhdGUgPSAoaGFzaCwga2V5KSA9PiBuZXcgSE1BQyhoYXNoLCBrZXkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/hmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keccak: () => (/* binding */ Keccak),\n/* harmony export */   keccakP: () => (/* binding */ keccakP),\n/* harmony export */   keccak_224: () => (/* binding */ keccak_224),\n/* harmony export */   keccak_256: () => (/* binding */ keccak_256),\n/* harmony export */   keccak_384: () => (/* binding */ keccak_384),\n/* harmony export */   keccak_512: () => (/* binding */ keccak_512),\n/* harmony export */   sha3_224: () => (/* binding */ sha3_224),\n/* harmony export */   sha3_256: () => (/* binding */ sha3_256),\n/* harmony export */   sha3_384: () => (/* binding */ sha3_384),\n/* harmony export */   sha3_512: () => (/* binding */ sha3_512),\n/* harmony export */   shake128: () => (/* binding */ shake128),\n/* harmony export */   shake256: () => (/* binding */ shake256)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotlBH(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotlBL(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_2__.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this);\n        const { blockLen, state } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exists(this, false);\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nconst sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nconst sha3_256 = gen(0x06, 136, 256 / 8);\nconst sha3_384 = gen(0x06, 104, 384 / 8);\nconst sha3_512 = gen(0x06, 72, 512 / 8);\nconst keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nconst keccak_256 = gen(0x01, 136, 256 / 8);\nconst keccak_384 = gen(0x01, 104, 384 / 8);\nconst keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nconst shake128 = genShake(0x1f, 168, 128 / 8);\nconst shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL3NoYTMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ047QUFDK0Q7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxZQUFZO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHFEQUFTO0FBQzVDO0FBQ0Esb0NBQW9DLCtDQUFHLG1CQUFtQiwrQ0FBRztBQUM3RCxvQ0FBb0MsK0NBQUcsbUJBQW1CLCtDQUFHO0FBQzdEO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0NBQWtDLFlBQVk7QUFDOUM7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQyw0QkFBNEIsUUFBUTtBQUNwQztBQUNBLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQkFBcUIsMkNBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhDQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQixnQkFBZ0Isa0JBQWtCO0FBQ2xDLGVBQWUsa0RBQU87QUFDdEI7QUFDQSwwQkFBMEIsVUFBVTtBQUNwQztBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQixRQUFRLHdEQUFZO0FBQ3BCO0FBQ0E7QUFDQSxnQkFBZ0IsV0FBVztBQUMzQiw0Q0FBNEMsVUFBVTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0EsUUFBUSx5REFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlEQUFpRDtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDBEQUFlO0FBQ3JEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ1Asa0RBQWtELGtFQUF1QixXQUFXO0FBQzdFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vc2hhMy5qcz9jOWVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSAnLi9fYXNzZXJ0LmpzJztcbmltcG9ydCB1NjQgZnJvbSAnLi9fdTY0LmpzJztcbmltcG9ydCB7IEhhc2gsIHUzMiwgdG9CeXRlcywgd3JhcENvbnN0cnVjdG9yLCB3cmFwQ29uc3RydWN0b3JXaXRoT3B0cywgfSBmcm9tICcuL3V0aWxzLmpzJztcbi8vIFZhcmlvdXMgcGVyIHJvdW5kIGNvbnN0YW50cyBjYWxjdWxhdGlvbnNcbmNvbnN0IFtTSEEzX1BJLCBTSEEzX1JPVEwsIF9TSEEzX0lPVEFdID0gW1tdLCBbXSwgW11dO1xuY29uc3QgXzBuID0gQmlnSW50KDApO1xuY29uc3QgXzFuID0gQmlnSW50KDEpO1xuY29uc3QgXzJuID0gQmlnSW50KDIpO1xuY29uc3QgXzduID0gQmlnSW50KDcpO1xuY29uc3QgXzI1Nm4gPSBCaWdJbnQoMjU2KTtcbmNvbnN0IF8weDcxbiA9IEJpZ0ludCgweDcxKTtcbmZvciAobGV0IHJvdW5kID0gMCwgUiA9IF8xbiwgeCA9IDEsIHkgPSAwOyByb3VuZCA8IDI0OyByb3VuZCsrKSB7XG4gICAgLy8gUGlcbiAgICBbeCwgeV0gPSBbeSwgKDIgKiB4ICsgMyAqIHkpICUgNV07XG4gICAgU0hBM19QSS5wdXNoKDIgKiAoNSAqIHkgKyB4KSk7XG4gICAgLy8gUm90YXRpb25hbFxuICAgIFNIQTNfUk9UTC5wdXNoKCgoKHJvdW5kICsgMSkgKiAocm91bmQgKyAyKSkgLyAyKSAlIDY0KTtcbiAgICAvLyBJb3RhXG4gICAgbGV0IHQgPSBfMG47XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCA3OyBqKyspIHtcbiAgICAgICAgUiA9ICgoUiA8PCBfMW4pIF4gKChSID4+IF83bikgKiBfMHg3MW4pKSAlIF8yNTZuO1xuICAgICAgICBpZiAoUiAmIF8ybilcbiAgICAgICAgICAgIHQgXj0gXzFuIDw8ICgoXzFuIDw8IEJpZ0ludChqKSkgLSBfMW4pO1xuICAgIH1cbiAgICBfU0hBM19JT1RBLnB1c2godCk7XG59XG5jb25zdCBbU0hBM19JT1RBX0gsIFNIQTNfSU9UQV9MXSA9IHU2NC5zcGxpdChfU0hBM19JT1RBLCB0cnVlKTtcbi8vIExlZnQgcm90YXRpb24gKHdpdGhvdXQgMCwgMzIsIDY0KVxuY29uc3Qgcm90bEggPSAoaCwgbCwgcykgPT4gcyA+IDMyID8gdTY0LnJvdGxCSChoLCBsLCBzKSA6IHU2NC5yb3RsU0goaCwgbCwgcyk7XG5jb25zdCByb3RsTCA9IChoLCBsLCBzKSA9PiBzID4gMzIgPyB1NjQucm90bEJMKGgsIGwsIHMpIDogdTY0LnJvdGxTTChoLCBsLCBzKTtcbi8vIFNhbWUgYXMga2VjY2FrZjE2MDAsIGJ1dCBhbGxvd3MgdG8gc2tpcCBzb21lIHJvdW5kc1xuZXhwb3J0IGZ1bmN0aW9uIGtlY2Nha1Aocywgcm91bmRzID0gMjQpIHtcbiAgICBjb25zdCBCID0gbmV3IFVpbnQzMkFycmF5KDUgKiAyKTtcbiAgICAvLyBOT1RFOiBhbGwgaW5kaWNlcyBhcmUgeDIgc2luY2Ugd2Ugc3RvcmUgc3RhdGUgYXMgdTMyIGluc3RlYWQgb2YgdTY0IChiaWdpbnRzIHRvIHNsb3cgaW4ganMpXG4gICAgZm9yIChsZXQgcm91bmQgPSAyNCAtIHJvdW5kczsgcm91bmQgPCAyNDsgcm91bmQrKykge1xuICAgICAgICAvLyBUaGV0YSDOuFxuICAgICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IDEwOyB4KyspXG4gICAgICAgICAgICBCW3hdID0gc1t4XSBeIHNbeCArIDEwXSBeIHNbeCArIDIwXSBeIHNbeCArIDMwXSBeIHNbeCArIDQwXTtcbiAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCAxMDsgeCArPSAyKSB7XG4gICAgICAgICAgICBjb25zdCBpZHgxID0gKHggKyA4KSAlIDEwO1xuICAgICAgICAgICAgY29uc3QgaWR4MCA9ICh4ICsgMikgJSAxMDtcbiAgICAgICAgICAgIGNvbnN0IEIwID0gQltpZHgwXTtcbiAgICAgICAgICAgIGNvbnN0IEIxID0gQltpZHgwICsgMV07XG4gICAgICAgICAgICBjb25zdCBUaCA9IHJvdGxIKEIwLCBCMSwgMSkgXiBCW2lkeDFdO1xuICAgICAgICAgICAgY29uc3QgVGwgPSByb3RsTChCMCwgQjEsIDEpIF4gQltpZHgxICsgMV07XG4gICAgICAgICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IDUwOyB5ICs9IDEwKSB7XG4gICAgICAgICAgICAgICAgc1t4ICsgeV0gXj0gVGg7XG4gICAgICAgICAgICAgICAgc1t4ICsgeSArIDFdIF49IFRsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFJobyAoz4EpIGFuZCBQaSAoz4ApXG4gICAgICAgIGxldCBjdXJIID0gc1syXTtcbiAgICAgICAgbGV0IGN1ckwgPSBzWzNdO1xuICAgICAgICBmb3IgKGxldCB0ID0gMDsgdCA8IDI0OyB0KyspIHtcbiAgICAgICAgICAgIGNvbnN0IHNoaWZ0ID0gU0hBM19ST1RMW3RdO1xuICAgICAgICAgICAgY29uc3QgVGggPSByb3RsSChjdXJILCBjdXJMLCBzaGlmdCk7XG4gICAgICAgICAgICBjb25zdCBUbCA9IHJvdGxMKGN1ckgsIGN1ckwsIHNoaWZ0KTtcbiAgICAgICAgICAgIGNvbnN0IFBJID0gU0hBM19QSVt0XTtcbiAgICAgICAgICAgIGN1ckggPSBzW1BJXTtcbiAgICAgICAgICAgIGN1ckwgPSBzW1BJICsgMV07XG4gICAgICAgICAgICBzW1BJXSA9IFRoO1xuICAgICAgICAgICAgc1tQSSArIDFdID0gVGw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2hpICjPhylcbiAgICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCA1MDsgeSArPSAxMCkge1xuICAgICAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCAxMDsgeCsrKVxuICAgICAgICAgICAgICAgIEJbeF0gPSBzW3kgKyB4XTtcbiAgICAgICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgMTA7IHgrKylcbiAgICAgICAgICAgICAgICBzW3kgKyB4XSBePSB+QlsoeCArIDIpICUgMTBdICYgQlsoeCArIDQpICUgMTBdO1xuICAgICAgICB9XG4gICAgICAgIC8vIElvdGEgKM65KVxuICAgICAgICBzWzBdIF49IFNIQTNfSU9UQV9IW3JvdW5kXTtcbiAgICAgICAgc1sxXSBePSBTSEEzX0lPVEFfTFtyb3VuZF07XG4gICAgfVxuICAgIEIuZmlsbCgwKTtcbn1cbmV4cG9ydCBjbGFzcyBLZWNjYWsgZXh0ZW5kcyBIYXNoIHtcbiAgICAvLyBOT1RFOiB3ZSBhY2NlcHQgYXJndW1lbnRzIGluIGJ5dGVzIGluc3RlYWQgb2YgYml0cyBoZXJlLlxuICAgIGNvbnN0cnVjdG9yKGJsb2NrTGVuLCBzdWZmaXgsIG91dHB1dExlbiwgZW5hYmxlWE9GID0gZmFsc2UsIHJvdW5kcyA9IDI0KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYmxvY2tMZW4gPSBibG9ja0xlbjtcbiAgICAgICAgdGhpcy5zdWZmaXggPSBzdWZmaXg7XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0aGlzLmVuYWJsZVhPRiA9IGVuYWJsZVhPRjtcbiAgICAgICAgdGhpcy5yb3VuZHMgPSByb3VuZHM7XG4gICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgdGhpcy5wb3NPdXQgPSAwO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgICAgIC8vIENhbiBiZSBwYXNzZWQgZnJvbSB1c2VyIGFzIGRrTGVuXG4gICAgICAgIGFzc2VydC5udW1iZXIob3V0cHV0TGVuKTtcbiAgICAgICAgLy8gMTYwMCA9IDV4NSBtYXRyaXggb2YgNjRiaXQuICAxNjAwIGJpdHMgPT09IDIwMCBieXRlc1xuICAgICAgICBpZiAoMCA+PSB0aGlzLmJsb2NrTGVuIHx8IHRoaXMuYmxvY2tMZW4gPj0gMjAwKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTaGEzIHN1cHBvcnRzIG9ubHkga2VjY2FrLWYxNjAwIGZ1bmN0aW9uJyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgVWludDhBcnJheSgyMDApO1xuICAgICAgICB0aGlzLnN0YXRlMzIgPSB1MzIodGhpcy5zdGF0ZSk7XG4gICAgfVxuICAgIGtlY2NhaygpIHtcbiAgICAgICAga2VjY2FrUCh0aGlzLnN0YXRlMzIsIHRoaXMucm91bmRzKTtcbiAgICAgICAgdGhpcy5wb3NPdXQgPSAwO1xuICAgICAgICB0aGlzLnBvcyA9IDA7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcyk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIHN0YXRlIH0gPSB0aGlzO1xuICAgICAgICBkYXRhID0gdG9CeXRlcyhkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YWtlOyBpKyspXG4gICAgICAgICAgICAgICAgc3RhdGVbdGhpcy5wb3MrK10gXj0gZGF0YVtwb3MrK107XG4gICAgICAgICAgICBpZiAodGhpcy5wb3MgPT09IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgIHRoaXMua2VjY2FrKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGZpbmlzaCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZmluaXNoZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBjb25zdCB7IHN0YXRlLCBzdWZmaXgsIHBvcywgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIC8vIERvIHRoZSBwYWRkaW5nXG4gICAgICAgIHN0YXRlW3Bvc10gXj0gc3VmZml4O1xuICAgICAgICBpZiAoKHN1ZmZpeCAmIDB4ODApICE9PSAwICYmIHBvcyA9PT0gYmxvY2tMZW4gLSAxKVxuICAgICAgICAgICAgdGhpcy5rZWNjYWsoKTtcbiAgICAgICAgc3RhdGVbYmxvY2tMZW4gLSAxXSBePSAweDgwO1xuICAgICAgICB0aGlzLmtlY2NhaygpO1xuICAgIH1cbiAgICB3cml0ZUludG8ob3V0KSB7XG4gICAgICAgIGFzc2VydC5leGlzdHModGhpcywgZmFsc2UpO1xuICAgICAgICBhc3NlcnQuYnl0ZXMob3V0KTtcbiAgICAgICAgdGhpcy5maW5pc2goKTtcbiAgICAgICAgY29uc3QgYnVmZmVyT3V0ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBibG9ja0xlbiB9ID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgcG9zID0gMCwgbGVuID0gb3V0Lmxlbmd0aDsgcG9zIDwgbGVuOykge1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zT3V0ID49IGJsb2NrTGVuKVxuICAgICAgICAgICAgICAgIHRoaXMua2VjY2FrKCk7XG4gICAgICAgICAgICBjb25zdCB0YWtlID0gTWF0aC5taW4oYmxvY2tMZW4gLSB0aGlzLnBvc091dCwgbGVuIC0gcG9zKTtcbiAgICAgICAgICAgIG91dC5zZXQoYnVmZmVyT3V0LnN1YmFycmF5KHRoaXMucG9zT3V0LCB0aGlzLnBvc091dCArIHRha2UpLCBwb3MpO1xuICAgICAgICAgICAgdGhpcy5wb3NPdXQgKz0gdGFrZTtcbiAgICAgICAgICAgIHBvcyArPSB0YWtlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIHhvZkludG8ob3V0KSB7XG4gICAgICAgIC8vIFNoYTMvS2VjY2FrIHVzYWdlIHdpdGggWE9GIGlzIHByb2JhYmx5IG1pc3Rha2UsIG9ubHkgU0hBS0UgaW5zdGFuY2VzIGNhbiBkbyBYT0ZcbiAgICAgICAgaWYgKCF0aGlzLmVuYWJsZVhPRilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWE9GIGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhpcyBpbnN0YW5jZScpO1xuICAgICAgICByZXR1cm4gdGhpcy53cml0ZUludG8ob3V0KTtcbiAgICB9XG4gICAgeG9mKGJ5dGVzKSB7XG4gICAgICAgIGFzc2VydC5udW1iZXIoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gdGhpcy54b2ZJbnRvKG5ldyBVaW50OEFycmF5KGJ5dGVzKSk7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgIGFzc2VydC5vdXRwdXQob3V0LCB0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMuZmluaXNoZWQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2RpZ2VzdCgpIHdhcyBhbHJlYWR5IGNhbGxlZCcpO1xuICAgICAgICB0aGlzLndyaXRlSW50byhvdXQpO1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kaWdlc3RJbnRvKG5ldyBVaW50OEFycmF5KHRoaXMub3V0cHV0TGVuKSk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdGF0ZS5maWxsKDApO1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIHN1ZmZpeCwgb3V0cHV0TGVuLCByb3VuZHMsIGVuYWJsZVhPRiB9ID0gdGhpcztcbiAgICAgICAgdG8gfHwgKHRvID0gbmV3IEtlY2NhayhibG9ja0xlbiwgc3VmZml4LCBvdXRwdXRMZW4sIGVuYWJsZVhPRiwgcm91bmRzKSk7XG4gICAgICAgIHRvLnN0YXRlMzIuc2V0KHRoaXMuc3RhdGUzMik7XG4gICAgICAgIHRvLnBvcyA9IHRoaXMucG9zO1xuICAgICAgICB0by5wb3NPdXQgPSB0aGlzLnBvc091dDtcbiAgICAgICAgdG8uZmluaXNoZWQgPSB0aGlzLmZpbmlzaGVkO1xuICAgICAgICB0by5yb3VuZHMgPSByb3VuZHM7XG4gICAgICAgIC8vIFN1ZmZpeCBjYW4gY2hhbmdlIGluIGNTSEFLRVxuICAgICAgICB0by5zdWZmaXggPSBzdWZmaXg7XG4gICAgICAgIHRvLm91dHB1dExlbiA9IG91dHB1dExlbjtcbiAgICAgICAgdG8uZW5hYmxlWE9GID0gZW5hYmxlWE9GO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSB0aGlzLmRlc3Ryb3llZDtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbn1cbmNvbnN0IGdlbiA9IChzdWZmaXgsIGJsb2NrTGVuLCBvdXRwdXRMZW4pID0+IHdyYXBDb25zdHJ1Y3RvcigoKSA9PiBuZXcgS2VjY2FrKGJsb2NrTGVuLCBzdWZmaXgsIG91dHB1dExlbikpO1xuZXhwb3J0IGNvbnN0IHNoYTNfMjI0ID0gZ2VuKDB4MDYsIDE0NCwgMjI0IC8gOCk7XG4vKipcbiAqIFNIQTMtMjU2IGhhc2ggZnVuY3Rpb25cbiAqIEBwYXJhbSBtZXNzYWdlIC0gdGhhdCB3b3VsZCBiZSBoYXNoZWRcbiAqL1xuZXhwb3J0IGNvbnN0IHNoYTNfMjU2ID0gZ2VuKDB4MDYsIDEzNiwgMjU2IC8gOCk7XG5leHBvcnQgY29uc3Qgc2hhM18zODQgPSBnZW4oMHgwNiwgMTA0LCAzODQgLyA4KTtcbmV4cG9ydCBjb25zdCBzaGEzXzUxMiA9IGdlbigweDA2LCA3MiwgNTEyIC8gOCk7XG5leHBvcnQgY29uc3Qga2VjY2FrXzIyNCA9IGdlbigweDAxLCAxNDQsIDIyNCAvIDgpO1xuLyoqXG4gKiBrZWNjYWstMjU2IGhhc2ggZnVuY3Rpb24uIERpZmZlcmVudCBmcm9tIFNIQTMtMjU2LlxuICogQHBhcmFtIG1lc3NhZ2UgLSB0aGF0IHdvdWxkIGJlIGhhc2hlZFxuICovXG5leHBvcnQgY29uc3Qga2VjY2FrXzI1NiA9IGdlbigweDAxLCAxMzYsIDI1NiAvIDgpO1xuZXhwb3J0IGNvbnN0IGtlY2Nha18zODQgPSBnZW4oMHgwMSwgMTA0LCAzODQgLyA4KTtcbmV4cG9ydCBjb25zdCBrZWNjYWtfNTEyID0gZ2VuKDB4MDEsIDcyLCA1MTIgLyA4KTtcbmNvbnN0IGdlblNoYWtlID0gKHN1ZmZpeCwgYmxvY2tMZW4sIG91dHB1dExlbikgPT4gd3JhcENvbnN0cnVjdG9yV2l0aE9wdHMoKG9wdHMgPSB7fSkgPT4gbmV3IEtlY2NhayhibG9ja0xlbiwgc3VmZml4LCBvcHRzLmRrTGVuID09PSB1bmRlZmluZWQgPyBvdXRwdXRMZW4gOiBvcHRzLmRrTGVuLCB0cnVlKSk7XG5leHBvcnQgY29uc3Qgc2hha2UxMjggPSBnZW5TaGFrZSgweDFmLCAxNjgsIDEyOCAvIDgpO1xuZXhwb3J0IGNvbnN0IHNoYWtlMjU2ID0gZ2VuU2hha2UoMHgxZiwgMTM2LCAyNTYgLyA4KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha3.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA512: () => (/* binding */ SHA512),\n/* harmony export */   sha384: () => (/* binding */ sha384),\n/* harmony export */   sha512: () => (/* binding */ sha512),\n/* harmony export */   sha512_256: () => (/* binding */ sha512_256)\n/* harmony export */ });\n/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_sha2.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_sha2.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_u64.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nconst sha512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());\nconst sha512_256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());\nconst sha384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/sha512.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),\n/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/crypto.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\n\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.web) {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.node) {\n        return new Uint8Array(_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYXB0b3Mvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUM4QztBQUM5QztBQUNPO0FBQ0E7QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0VBQWdFLFdBQVc7QUFDM0U7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxzRUFBc0UsWUFBWTtBQUNsRjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLHdEQUFNO0FBQ2QsZUFBZSx3REFBTTtBQUNyQjtBQUNBLGFBQWEsd0RBQU07QUFDbkIsOEJBQThCLHdEQUFNO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9hcHRvcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vdXRpbHMuanM/NDE4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ibGUtaGFzaGVzIC0gTUlUIExpY2Vuc2UgKGMpIDIwMjIgUGF1bCBNaWxsZXIgKHBhdWxtaWxsci5jb20pICovXG4vLyBUaGUgaW1wb3J0IGhlcmUgaXMgdmlhIHRoZSBwYWNrYWdlIG5hbWUuIFRoaXMgaXMgdG8gZW5zdXJlXG4vLyB0aGF0IGV4cG9ydHMgbWFwcGluZy9yZXNvbHV0aW9uIGRvZXMgZmFsbCBpbnRvIHBsYWNlLlxuaW1wb3J0IHsgY3J5cHRvIH0gZnJvbSAnQG5vYmxlL2hhc2hlcy9jcnlwdG8nO1xuLy8gQ2FzdCBhcnJheSB0byBkaWZmZXJlbnQgdHlwZVxuZXhwb3J0IGNvbnN0IHU4ID0gKGFycikgPT4gbmV3IFVpbnQ4QXJyYXkoYXJyLmJ1ZmZlciwgYXJyLmJ5dGVPZmZzZXQsIGFyci5ieXRlTGVuZ3RoKTtcbmV4cG9ydCBjb25zdCB1MzIgPSAoYXJyKSA9PiBuZXcgVWludDMyQXJyYXkoYXJyLmJ1ZmZlciwgYXJyLmJ5dGVPZmZzZXQsIE1hdGguZmxvb3IoYXJyLmJ5dGVMZW5ndGggLyA0KSk7XG4vLyBDYXN0IGFycmF5IHRvIHZpZXdcbmV4cG9ydCBjb25zdCBjcmVhdGVWaWV3ID0gKGFycikgPT4gbmV3IERhdGFWaWV3KGFyci5idWZmZXIsIGFyci5ieXRlT2Zmc2V0LCBhcnIuYnl0ZUxlbmd0aCk7XG4vLyBUaGUgcm90YXRlIHJpZ2h0IChjaXJjdWxhciByaWdodCBzaGlmdCkgb3BlcmF0aW9uIGZvciB1aW50MzJcbmV4cG9ydCBjb25zdCByb3RyID0gKHdvcmQsIHNoaWZ0KSA9PiAod29yZCA8PCAoMzIgLSBzaGlmdCkpIHwgKHdvcmQgPj4+IHNoaWZ0KTtcbmV4cG9ydCBjb25zdCBpc0xFID0gbmV3IFVpbnQ4QXJyYXkobmV3IFVpbnQzMkFycmF5KFsweDExMjIzMzQ0XSkuYnVmZmVyKVswXSA9PT0gMHg0NDtcbi8vIFRoZXJlIGlzIGFsbW9zdCBubyBiaWcgZW5kaWFuIGhhcmR3YXJlLCBidXQganMgdHlwZWQgYXJyYXlzIHVzZXMgcGxhdGZvcm0gc3BlY2lmaWMgZW5kaWFubmVzcy5cbi8vIFNvLCBqdXN0IHRvIGJlIHN1cmUgbm90IHRvIGNvcnJ1cHQgYW55dGhpbmcuXG5pZiAoIWlzTEUpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb24gbGl0dGxlLWVuZGlhbiBoYXJkd2FyZSBpcyBub3Qgc3VwcG9ydGVkJyk7XG5jb25zdCBoZXhlcyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IDI1NiB9LCAodiwgaSkgPT4gaS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSk7XG4vKipcbiAqIEBleGFtcGxlIGJ5dGVzVG9IZXgoVWludDhBcnJheS5mcm9tKFsweGRlLCAweGFkLCAweGJlLCAweGVmXSkpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBieXRlc1RvSGV4KHVpbnQ4YSkge1xuICAgIC8vIHByZS1jYWNoaW5nIGltcHJvdmVzIHRoZSBzcGVlZCA2eFxuICAgIGlmICghKHVpbnQ4YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VpbnQ4QXJyYXkgZXhwZWN0ZWQnKTtcbiAgICBsZXQgaGV4ID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1aW50OGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaGV4ICs9IGhleGVzW3VpbnQ4YVtpXV07XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vKipcbiAqIEBleGFtcGxlIGhleFRvQnl0ZXMoJ2RlYWRiZWVmJylcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvQnl0ZXMoaGV4KSB7XG4gICAgaWYgKHR5cGVvZiBoZXggIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2hleFRvQnl0ZXM6IGV4cGVjdGVkIHN0cmluZywgZ290ICcgKyB0eXBlb2YgaGV4KTtcbiAgICB9XG4gICAgaWYgKGhleC5sZW5ndGggJSAyKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2hleFRvQnl0ZXM6IHJlY2VpdmVkIGludmFsaWQgdW5wYWRkZWQgaGV4Jyk7XG4gICAgY29uc3QgYXJyYXkgPSBuZXcgVWludDhBcnJheShoZXgubGVuZ3RoIC8gMik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBqID0gaSAqIDI7XG4gICAgICAgIGNvbnN0IGhleEJ5dGUgPSBoZXguc2xpY2UoaiwgaiArIDIpO1xuICAgICAgICBjb25zdCBieXRlID0gTnVtYmVyLnBhcnNlSW50KGhleEJ5dGUsIDE2KTtcbiAgICAgICAgaWYgKE51bWJlci5pc05hTihieXRlKSB8fCBieXRlIDwgMClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBieXRlIHNlcXVlbmNlJyk7XG4gICAgICAgIGFycmF5W2ldID0gYnl0ZTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xufVxuLy8gVGhlcmUgaXMgbm8gc2V0SW1tZWRpYXRlIGluIGJyb3dzZXIgYW5kIHNldFRpbWVvdXQgaXMgc2xvdy4gSG93ZXZlciwgY2FsbCB0byBhc3luYyBmdW5jdGlvbiB3aWxsIHJldHVybiBQcm9taXNlXG4vLyB3aGljaCB3aWxsIGJlIGZ1bGxmaWxlZCBvbmx5IG9uIG5leHQgc2NoZWR1bGVyIHF1ZXVlIHByb2Nlc3Npbmcgc3RlcCBhbmQgdGhpcyBpcyBleGFjdGx5IHdoYXQgd2UgbmVlZC5cbmV4cG9ydCBjb25zdCBuZXh0VGljayA9IGFzeW5jICgpID0+IHsgfTtcbi8vIFJldHVybnMgY29udHJvbCB0byB0aHJlYWQgZWFjaCAndGljaycgbXMgdG8gYXZvaWQgYmxvY2tpbmdcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhc3luY0xvb3AoaXRlcnMsIHRpY2ssIGNiKSB7XG4gICAgbGV0IHRzID0gRGF0ZS5ub3coKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZXJzOyBpKyspIHtcbiAgICAgICAgY2IoaSk7XG4gICAgICAgIC8vIERhdGUubm93KCkgaXMgbm90IG1vbm90b25pYywgc28gaW4gY2FzZSBpZiBjbG9jayBnb2VzIGJhY2t3YXJkcyB3ZSByZXR1cm4gcmV0dXJuIGNvbnRyb2wgdG9vXG4gICAgICAgIGNvbnN0IGRpZmYgPSBEYXRlLm5vdygpIC0gdHM7XG4gICAgICAgIGlmIChkaWZmID49IDAgJiYgZGlmZiA8IHRpY2spXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgYXdhaXQgbmV4dFRpY2soKTtcbiAgICAgICAgdHMgKz0gZGlmZjtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdXRmOFRvQnl0ZXMoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYHV0ZjhUb0J5dGVzIGV4cGVjdGVkIHN0cmluZywgZ290ICR7dHlwZW9mIHN0cn1gKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRvQnl0ZXMoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpXG4gICAgICAgIGRhdGEgPSB1dGY4VG9CeXRlcyhkYXRhKTtcbiAgICBpZiAoIShkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIGlucHV0IHR5cGUgaXMgVWludDhBcnJheSAoZ290ICR7dHlwZW9mIGRhdGF9KWApO1xuICAgIHJldHVybiBkYXRhO1xufVxuLyoqXG4gKiBDb25jYXRzIFVpbnQ4QXJyYXktcyBpbnRvIG9uZTsgbGlrZSBgQnVmZmVyLmNvbmNhdChbYnVmMSwgYnVmMl0pYFxuICogQGV4YW1wbGUgY29uY2F0Qnl0ZXMoYnVmMSwgYnVmMilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ5dGVzKC4uLmFycmF5cykge1xuICAgIGlmICghYXJyYXlzLmV2ZXJ5KChhKSA9PiBhIGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVWludDhBcnJheSBsaXN0IGV4cGVjdGVkJyk7XG4gICAgaWYgKGFycmF5cy5sZW5ndGggPT09IDEpXG4gICAgICAgIHJldHVybiBhcnJheXNbMF07XG4gICAgY29uc3QgbGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgoYSwgYXJyKSA9PiBhICsgYXJyLmxlbmd0aCwgMCk7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMCwgcGFkID0gMDsgaSA8IGFycmF5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBhcnIgPSBhcnJheXNbaV07XG4gICAgICAgIHJlc3VsdC5zZXQoYXJyLCBwYWQpO1xuICAgICAgICBwYWQgKz0gYXJyLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIEZvciBydW50aW1lIGNoZWNrIGlmIGNsYXNzIGltcGxlbWVudHMgaW50ZXJmYWNlXG5leHBvcnQgY2xhc3MgSGFzaCB7XG4gICAgLy8gU2FmZSB2ZXJzaW9uIHRoYXQgY2xvbmVzIGludGVybmFsIHN0YXRlXG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbG9uZUludG8oKTtcbiAgICB9XG59XG4vLyBDaGVjayBpZiBvYmplY3QgZG9lbnMndCBoYXZlIGN1c3RvbSBjb25zdHJ1Y3RvciAobGlrZSBVaW50OEFycmF5L0FycmF5KVxuY29uc3QgaXNQbGFpbk9iamVjdCA9IChvYmopID0+IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBPYmplY3RdJyAmJiBvYmouY29uc3RydWN0b3IgPT09IE9iamVjdDtcbmV4cG9ydCBmdW5jdGlvbiBjaGVja09wdHMoZGVmYXVsdHMsIG9wdHMpIHtcbiAgICBpZiAob3B0cyAhPT0gdW5kZWZpbmVkICYmICh0eXBlb2Ygb3B0cyAhPT0gJ29iamVjdCcgfHwgIWlzUGxhaW5PYmplY3Qob3B0cykpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdPcHRpb25zIHNob3VsZCBiZSBvYmplY3Qgb3IgdW5kZWZpbmVkJyk7XG4gICAgY29uc3QgbWVyZ2VkID0gT2JqZWN0LmFzc2lnbihkZWZhdWx0cywgb3B0cyk7XG4gICAgcmV0dXJuIG1lcmdlZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cmFwQ29uc3RydWN0b3IoaGFzaENvbnN0cnVjdG9yKSB7XG4gICAgY29uc3QgaGFzaEMgPSAobWVzc2FnZSkgPT4gaGFzaENvbnN0cnVjdG9yKCkudXBkYXRlKHRvQnl0ZXMobWVzc2FnZSkpLmRpZ2VzdCgpO1xuICAgIGNvbnN0IHRtcCA9IGhhc2hDb25zdHJ1Y3RvcigpO1xuICAgIGhhc2hDLm91dHB1dExlbiA9IHRtcC5vdXRwdXRMZW47XG4gICAgaGFzaEMuYmxvY2tMZW4gPSB0bXAuYmxvY2tMZW47XG4gICAgaGFzaEMuY3JlYXRlID0gKCkgPT4gaGFzaENvbnN0cnVjdG9yKCk7XG4gICAgcmV0dXJuIGhhc2hDO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBDb25zdHJ1Y3RvcldpdGhPcHRzKGhhc2hDb25zKSB7XG4gICAgY29uc3QgaGFzaEMgPSAobXNnLCBvcHRzKSA9PiBoYXNoQ29ucyhvcHRzKS51cGRhdGUodG9CeXRlcyhtc2cpKS5kaWdlc3QoKTtcbiAgICBjb25zdCB0bXAgPSBoYXNoQ29ucyh7fSk7XG4gICAgaGFzaEMub3V0cHV0TGVuID0gdG1wLm91dHB1dExlbjtcbiAgICBoYXNoQy5ibG9ja0xlbiA9IHRtcC5ibG9ja0xlbjtcbiAgICBoYXNoQy5jcmVhdGUgPSAob3B0cykgPT4gaGFzaENvbnMob3B0cyk7XG4gICAgcmV0dXJuIGhhc2hDO1xufVxuLyoqXG4gKiBTZWN1cmUgUFJOR1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tQnl0ZXMoYnl0ZXNMZW5ndGggPSAzMikge1xuICAgIGlmIChjcnlwdG8ud2ViKSB7XG4gICAgICAgIHJldHVybiBjcnlwdG8ud2ViLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShieXRlc0xlbmd0aCkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjcnlwdG8ubm9kZSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoY3J5cHRvLm5vZGUucmFuZG9tQnl0ZXMoYnl0ZXNMZW5ndGgpLmJ1ZmZlcik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZW52aXJvbm1lbnQgZG9lc24ndCBoYXZlIHJhbmRvbUJ5dGVzIGZ1bmN0aW9uXCIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/aptos/node_modules/@noble/hashes/esm/utils.js\n");

/***/ })

};
;