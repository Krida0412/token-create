/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/near-seed-phrase";
exports.ids = ["vendor-chunks/near-seed-phrase"];
exports.modules = {

/***/ "(ssr)/./node_modules/near-seed-phrase/index.js":
/*!************************************************!*\
  !*** ./node_modules/near-seed-phrase/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const bip39 = __webpack_require__(/*! bip39-light */ \"(ssr)/./node_modules/bip39-light/index.js\");\nconst { derivePath } = __webpack_require__(/*! near-hd-key */ \"(ssr)/./node_modules/near-hd-key/dist/index.js\");\nconst bs58 = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\nconst nacl = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\n\nconst KEY_DERIVATION_PATH = \"m/44'/397'/0'\"\n\nconst generateSeedPhrase = (entropy) => {\n    return parseSeedPhrase(entropy !== undefined ? bip39.entropyToMnemonic(entropy) : bip39.generateMnemonic())\n}\n\nconst normalizeSeedPhrase = (seedPhrase) => seedPhrase.trim().split(/\\s+/).map(part => part.toLowerCase()).join(' ')\n\nconst parseSeedPhrase = (seedPhrase, derivationPath) => {\n    const seed = bip39.mnemonicToSeed(normalizeSeedPhrase(seedPhrase))\n    const { key } = derivePath(derivationPath || KEY_DERIVATION_PATH, seed.toString('hex'))\n    const keyPair = nacl.sign.keyPair.fromSeed(key)\n    const publicKey = 'ed25519:' + bs58.encode(Buffer.from(keyPair.publicKey))\n    const secretKey = 'ed25519:' + bs58.encode(Buffer.from(keyPair.secretKey))\n    return { seedPhrase, secretKey, publicKey }\n}\n\nconst findSeedPhraseKey = (seedPhrase, publicKeys) => {\n    // TODO: Need to iterate through multiple possible derivation paths?\n    const keyInfo = parseSeedPhrase(seedPhrase)\n    if (publicKeys.indexOf(keyInfo.publicKey) < 0) {\n        return {}\n    }\n    return keyInfo\n}\n\nmodule.exports = {\n    KEY_DERIVATION_PATH,\n    generateSeedPhrase,\n    normalizeSeedPhrase,\n    parseSeedPhrase,\n    findSeedPhraseKey\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmVhci1zZWVkLXBocmFzZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsOERBQWE7QUFDbkMsUUFBUSxhQUFhLEVBQUUsbUJBQU8sQ0FBQyxtRUFBYTtBQUM1QyxhQUFhLG1CQUFPLENBQUMsZ0RBQU07QUFDM0IsYUFBYSxtQkFBTyxDQUFDLDhEQUFXOztBQUVoQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL25lYXItc2VlZC1waHJhc2UvaW5kZXguanM/NDU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiaXAzOSA9IHJlcXVpcmUoJ2JpcDM5LWxpZ2h0Jyk7XG5jb25zdCB7IGRlcml2ZVBhdGggfSA9IHJlcXVpcmUoJ25lYXItaGQta2V5Jyk7XG5jb25zdCBiczU4ID0gcmVxdWlyZSgnYnM1OCcpO1xuY29uc3QgbmFjbCA9IHJlcXVpcmUoJ3R3ZWV0bmFjbCcpO1xuXG5jb25zdCBLRVlfREVSSVZBVElPTl9QQVRIID0gXCJtLzQ0Jy8zOTcnLzAnXCJcblxuY29uc3QgZ2VuZXJhdGVTZWVkUGhyYXNlID0gKGVudHJvcHkpID0+IHtcbiAgICByZXR1cm4gcGFyc2VTZWVkUGhyYXNlKGVudHJvcHkgIT09IHVuZGVmaW5lZCA/IGJpcDM5LmVudHJvcHlUb01uZW1vbmljKGVudHJvcHkpIDogYmlwMzkuZ2VuZXJhdGVNbmVtb25pYygpKVxufVxuXG5jb25zdCBub3JtYWxpemVTZWVkUGhyYXNlID0gKHNlZWRQaHJhc2UpID0+IHNlZWRQaHJhc2UudHJpbSgpLnNwbGl0KC9cXHMrLykubWFwKHBhcnQgPT4gcGFydC50b0xvd2VyQ2FzZSgpKS5qb2luKCcgJylcblxuY29uc3QgcGFyc2VTZWVkUGhyYXNlID0gKHNlZWRQaHJhc2UsIGRlcml2YXRpb25QYXRoKSA9PiB7XG4gICAgY29uc3Qgc2VlZCA9IGJpcDM5Lm1uZW1vbmljVG9TZWVkKG5vcm1hbGl6ZVNlZWRQaHJhc2Uoc2VlZFBocmFzZSkpXG4gICAgY29uc3QgeyBrZXkgfSA9IGRlcml2ZVBhdGgoZGVyaXZhdGlvblBhdGggfHwgS0VZX0RFUklWQVRJT05fUEFUSCwgc2VlZC50b1N0cmluZygnaGV4JykpXG4gICAgY29uc3Qga2V5UGFpciA9IG5hY2wuc2lnbi5rZXlQYWlyLmZyb21TZWVkKGtleSlcbiAgICBjb25zdCBwdWJsaWNLZXkgPSAnZWQyNTUxOTonICsgYnM1OC5lbmNvZGUoQnVmZmVyLmZyb20oa2V5UGFpci5wdWJsaWNLZXkpKVxuICAgIGNvbnN0IHNlY3JldEtleSA9ICdlZDI1NTE5OicgKyBiczU4LmVuY29kZShCdWZmZXIuZnJvbShrZXlQYWlyLnNlY3JldEtleSkpXG4gICAgcmV0dXJuIHsgc2VlZFBocmFzZSwgc2VjcmV0S2V5LCBwdWJsaWNLZXkgfVxufVxuXG5jb25zdCBmaW5kU2VlZFBocmFzZUtleSA9IChzZWVkUGhyYXNlLCBwdWJsaWNLZXlzKSA9PiB7XG4gICAgLy8gVE9ETzogTmVlZCB0byBpdGVyYXRlIHRocm91Z2ggbXVsdGlwbGUgcG9zc2libGUgZGVyaXZhdGlvbiBwYXRocz9cbiAgICBjb25zdCBrZXlJbmZvID0gcGFyc2VTZWVkUGhyYXNlKHNlZWRQaHJhc2UpXG4gICAgaWYgKHB1YmxpY0tleXMuaW5kZXhPZihrZXlJbmZvLnB1YmxpY0tleSkgPCAwKSB7XG4gICAgICAgIHJldHVybiB7fVxuICAgIH1cbiAgICByZXR1cm4ga2V5SW5mb1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBLRVlfREVSSVZBVElPTl9QQVRILFxuICAgIGdlbmVyYXRlU2VlZFBocmFzZSxcbiAgICBub3JtYWxpemVTZWVkUGhyYXNlLFxuICAgIHBhcnNlU2VlZFBocmFzZSxcbiAgICBmaW5kU2VlZFBocmFzZUtleVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/near-seed-phrase/index.js\n");

/***/ })

};
;