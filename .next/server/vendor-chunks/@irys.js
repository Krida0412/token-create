/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@irys";
exports.ids = ["vendor-chunks/@irys"];
exports.modules = {

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/api.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/api.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst encoders = __webpack_require__(/*! ./encoders */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/index.js\");\nconst decoders = __webpack_require__(/*! ./decoders */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/index.js\");\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9hcGkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLG1CQUFPLENBQUMsc0dBQVk7QUFDckMsaUJBQWlCLG1CQUFPLENBQUMsc0dBQVk7QUFDckMsaUJBQWlCLG1CQUFPLENBQUMsMkRBQVU7O0FBRW5DOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9hcGkuanM/ZTExZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGVuY29kZXJzID0gcmVxdWlyZSgnLi9lbmNvZGVycycpO1xuY29uc3QgZGVjb2RlcnMgPSByZXF1aXJlKCcuL2RlY29kZXJzJyk7XG5jb25zdCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5cbmNvbnN0IGFwaSA9IGV4cG9ydHM7XG5cbmFwaS5kZWZpbmUgPSBmdW5jdGlvbiBkZWZpbmUobmFtZSwgYm9keSkge1xuICByZXR1cm4gbmV3IEVudGl0eShuYW1lLCBib2R5KTtcbn07XG5cbmZ1bmN0aW9uIEVudGl0eShuYW1lLCBib2R5KSB7XG4gIHRoaXMubmFtZSA9IG5hbWU7XG4gIHRoaXMuYm9keSA9IGJvZHk7XG5cbiAgdGhpcy5kZWNvZGVycyA9IHt9O1xuICB0aGlzLmVuY29kZXJzID0ge307XG59XG5cbkVudGl0eS5wcm90b3R5cGUuX2NyZWF0ZU5hbWVkID0gZnVuY3Rpb24gY3JlYXRlTmFtZWQoQmFzZSkge1xuICBjb25zdCBuYW1lID0gdGhpcy5uYW1lO1xuXG4gIGZ1bmN0aW9uIEdlbmVyYXRlZChlbnRpdHkpIHtcbiAgICB0aGlzLl9pbml0TmFtZWQoZW50aXR5LCBuYW1lKTtcbiAgfVxuICBpbmhlcml0cyhHZW5lcmF0ZWQsIEJhc2UpO1xuICBHZW5lcmF0ZWQucHJvdG90eXBlLl9pbml0TmFtZWQgPSBmdW5jdGlvbiBfaW5pdE5hbWVkKGVudGl0eSwgbmFtZSkge1xuICAgIEJhc2UuY2FsbCh0aGlzLCBlbnRpdHksIG5hbWUpO1xuICB9O1xuXG4gIHJldHVybiBuZXcgR2VuZXJhdGVkKHRoaXMpO1xufTtcblxuRW50aXR5LnByb3RvdHlwZS5fZ2V0RGVjb2RlciA9IGZ1bmN0aW9uIF9nZXREZWNvZGVyKGVuYykge1xuICBlbmMgPSBlbmMgfHwgJ2Rlcic7XG4gIC8vIExhemlseSBjcmVhdGUgZGVjb2RlclxuICBpZiAoIXRoaXMuZGVjb2RlcnMuaGFzT3duUHJvcGVydHkoZW5jKSlcbiAgICB0aGlzLmRlY29kZXJzW2VuY10gPSB0aGlzLl9jcmVhdGVOYW1lZChkZWNvZGVyc1tlbmNdKTtcbiAgcmV0dXJuIHRoaXMuZGVjb2RlcnNbZW5jXTtcbn07XG5cbkVudGl0eS5wcm90b3R5cGUuZGVjb2RlID0gZnVuY3Rpb24gZGVjb2RlKGRhdGEsIGVuYywgb3B0aW9ucykge1xuICByZXR1cm4gdGhpcy5fZ2V0RGVjb2RlcihlbmMpLmRlY29kZShkYXRhLCBvcHRpb25zKTtcbn07XG5cbkVudGl0eS5wcm90b3R5cGUuX2dldEVuY29kZXIgPSBmdW5jdGlvbiBfZ2V0RW5jb2RlcihlbmMpIHtcbiAgZW5jID0gZW5jIHx8ICdkZXInO1xuICAvLyBMYXppbHkgY3JlYXRlIGVuY29kZXJcbiAgaWYgKCF0aGlzLmVuY29kZXJzLmhhc093blByb3BlcnR5KGVuYykpXG4gICAgdGhpcy5lbmNvZGVyc1tlbmNdID0gdGhpcy5fY3JlYXRlTmFtZWQoZW5jb2RlcnNbZW5jXSk7XG4gIHJldHVybiB0aGlzLmVuY29kZXJzW2VuY107XG59O1xuXG5FbnRpdHkucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShkYXRhLCBlbmMsIC8qIGludGVybmFsICovIHJlcG9ydGVyKSB7XG4gIHJldHVybiB0aGlzLl9nZXRFbmNvZGVyKGVuYykuZW5jb2RlKGRhdGEsIHJlcG9ydGVyKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\nconst Reporter = (__webpack_require__(/*! ../base/reporter */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter);\nconst Buffer = (__webpack_require__(/*! safer-buffer */ \"(ssr)/./node_modules/safer-buffer/safer.js\").Buffer);\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9iYXNlL2J1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQkFBaUIsbUJBQU8sQ0FBQywyREFBVTtBQUNuQyxpQkFBaUIsMklBQW9DO0FBQ3JELGVBQWUsOEZBQThCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL25vZGVfbW9kdWxlcy9hc24xLmpzL2xpYi9hc24xL2Jhc2UvYnVmZmVyLmpzP2E4MjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5jb25zdCBSZXBvcnRlciA9IHJlcXVpcmUoJy4uL2Jhc2UvcmVwb3J0ZXInKS5SZXBvcnRlcjtcbmNvbnN0IEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmVyLWJ1ZmZlcicpLkJ1ZmZlcjtcblxuZnVuY3Rpb24gRGVjb2RlckJ1ZmZlcihiYXNlLCBvcHRpb25zKSB7XG4gIFJlcG9ydGVyLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGJhc2UpKSB7XG4gICAgdGhpcy5lcnJvcignSW5wdXQgbm90IEJ1ZmZlcicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuYmFzZSA9IGJhc2U7XG4gIHRoaXMub2Zmc2V0ID0gMDtcbiAgdGhpcy5sZW5ndGggPSBiYXNlLmxlbmd0aDtcbn1cbmluaGVyaXRzKERlY29kZXJCdWZmZXIsIFJlcG9ydGVyKTtcbmV4cG9ydHMuRGVjb2RlckJ1ZmZlciA9IERlY29kZXJCdWZmZXI7XG5cbkRlY29kZXJCdWZmZXIuaXNEZWNvZGVyQnVmZmVyID0gZnVuY3Rpb24gaXNEZWNvZGVyQnVmZmVyKGRhdGEpIHtcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBEZWNvZGVyQnVmZmVyKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyBPciBhY2NlcHQgY29tcGF0aWJsZSBBUElcbiAgY29uc3QgaXNDb21wYXRpYmxlID0gdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmXG4gICAgQnVmZmVyLmlzQnVmZmVyKGRhdGEuYmFzZSkgJiZcbiAgICBkYXRhLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdEZWNvZGVyQnVmZmVyJyAmJlxuICAgIHR5cGVvZiBkYXRhLm9mZnNldCA9PT0gJ251bWJlcicgJiZcbiAgICB0eXBlb2YgZGF0YS5sZW5ndGggPT09ICdudW1iZXInICYmXG4gICAgdHlwZW9mIGRhdGEuc2F2ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIHR5cGVvZiBkYXRhLnJlc3RvcmUgPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgZGF0YS5pc0VtcHR5ID09PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIGRhdGEucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIGRhdGEuc2tpcCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIHR5cGVvZiBkYXRhLnJhdyA9PT0gJ2Z1bmN0aW9uJztcblxuICByZXR1cm4gaXNDb21wYXRpYmxlO1xufTtcblxuRGVjb2RlckJ1ZmZlci5wcm90b3R5cGUuc2F2ZSA9IGZ1bmN0aW9uIHNhdmUoKSB7XG4gIHJldHVybiB7IG9mZnNldDogdGhpcy5vZmZzZXQsIHJlcG9ydGVyOiBSZXBvcnRlci5wcm90b3R5cGUuc2F2ZS5jYWxsKHRoaXMpIH07XG59O1xuXG5EZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24gcmVzdG9yZShzYXZlKSB7XG4gIC8vIFJldHVybiBza2lwcGVkIGRhdGFcbiAgY29uc3QgcmVzID0gbmV3IERlY29kZXJCdWZmZXIodGhpcy5iYXNlKTtcbiAgcmVzLm9mZnNldCA9IHNhdmUub2Zmc2V0O1xuICByZXMubGVuZ3RoID0gdGhpcy5vZmZzZXQ7XG5cbiAgdGhpcy5vZmZzZXQgPSBzYXZlLm9mZnNldDtcbiAgUmVwb3J0ZXIucHJvdG90eXBlLnJlc3RvcmUuY2FsbCh0aGlzLCBzYXZlLnJlcG9ydGVyKTtcblxuICByZXR1cm4gcmVzO1xufTtcblxuRGVjb2RlckJ1ZmZlci5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uIGlzRW1wdHkoKSB7XG4gIHJldHVybiB0aGlzLm9mZnNldCA9PT0gdGhpcy5sZW5ndGg7XG59O1xuXG5EZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDggPSBmdW5jdGlvbiByZWFkVUludDgoZmFpbCkge1xuICBpZiAodGhpcy5vZmZzZXQgKyAxIDw9IHRoaXMubGVuZ3RoKVxuICAgIHJldHVybiB0aGlzLmJhc2UucmVhZFVJbnQ4KHRoaXMub2Zmc2V0KyssIHRydWUpO1xuICBlbHNlXG4gICAgcmV0dXJuIHRoaXMuZXJyb3IoZmFpbCB8fCAnRGVjb2RlckJ1ZmZlciBvdmVycnVuJyk7XG59O1xuXG5EZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5za2lwID0gZnVuY3Rpb24gc2tpcChieXRlcywgZmFpbCkge1xuICBpZiAoISh0aGlzLm9mZnNldCArIGJ5dGVzIDw9IHRoaXMubGVuZ3RoKSlcbiAgICByZXR1cm4gdGhpcy5lcnJvcihmYWlsIHx8ICdEZWNvZGVyQnVmZmVyIG92ZXJydW4nKTtcblxuICBjb25zdCByZXMgPSBuZXcgRGVjb2RlckJ1ZmZlcih0aGlzLmJhc2UpO1xuXG4gIC8vIFNoYXJlIHJlcG9ydGVyIHN0YXRlXG4gIHJlcy5fcmVwb3J0ZXJTdGF0ZSA9IHRoaXMuX3JlcG9ydGVyU3RhdGU7XG5cbiAgcmVzLm9mZnNldCA9IHRoaXMub2Zmc2V0O1xuICByZXMubGVuZ3RoID0gdGhpcy5vZmZzZXQgKyBieXRlcztcbiAgdGhpcy5vZmZzZXQgKz0gYnl0ZXM7XG4gIHJldHVybiByZXM7XG59O1xuXG5EZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5yYXcgPSBmdW5jdGlvbiByYXcoc2F2ZSkge1xuICByZXR1cm4gdGhpcy5iYXNlLnNsaWNlKHNhdmUgPyBzYXZlLm9mZnNldCA6IHRoaXMub2Zmc2V0LCB0aGlzLmxlbmd0aCk7XG59O1xuXG5mdW5jdGlvbiBFbmNvZGVyQnVmZmVyKHZhbHVlLCByZXBvcnRlcikge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlLm1hcChmdW5jdGlvbihpdGVtKSB7XG4gICAgICBpZiAoIUVuY29kZXJCdWZmZXIuaXNFbmNvZGVyQnVmZmVyKGl0ZW0pKVxuICAgICAgICBpdGVtID0gbmV3IEVuY29kZXJCdWZmZXIoaXRlbSwgcmVwb3J0ZXIpO1xuICAgICAgdGhpcy5sZW5ndGggKz0gaXRlbS5sZW5ndGg7XG4gICAgICByZXR1cm4gaXRlbTtcbiAgICB9LCB0aGlzKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgaWYgKCEoMCA8PSB2YWx1ZSAmJiB2YWx1ZSA8PSAweGZmKSlcbiAgICAgIHJldHVybiByZXBvcnRlci5lcnJvcignbm9uLWJ5dGUgRW5jb2RlckJ1ZmZlciB2YWx1ZScpO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB0aGlzLmxlbmd0aCA9IDE7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB0aGlzLmxlbmd0aCA9IEJ1ZmZlci5ieXRlTGVuZ3RoKHZhbHVlKTtcbiAgfSBlbHNlIGlmIChCdWZmZXIuaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIHRoaXMubGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXBvcnRlci5lcnJvcignVW5zdXBwb3J0ZWQgdHlwZTogJyArIHR5cGVvZiB2YWx1ZSk7XG4gIH1cbn1cbmV4cG9ydHMuRW5jb2RlckJ1ZmZlciA9IEVuY29kZXJCdWZmZXI7XG5cbkVuY29kZXJCdWZmZXIuaXNFbmNvZGVyQnVmZmVyID0gZnVuY3Rpb24gaXNFbmNvZGVyQnVmZmVyKGRhdGEpIHtcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBFbmNvZGVyQnVmZmVyKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyBPciBhY2NlcHQgY29tcGF0aWJsZSBBUElcbiAgY29uc3QgaXNDb21wYXRpYmxlID0gdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmXG4gICAgZGF0YS5jb25zdHJ1Y3Rvci5uYW1lID09PSAnRW5jb2RlckJ1ZmZlcicgJiZcbiAgICB0eXBlb2YgZGF0YS5sZW5ndGggPT09ICdudW1iZXInICYmXG4gICAgdHlwZW9mIGRhdGEuam9pbiA9PT0gJ2Z1bmN0aW9uJztcblxuICByZXR1cm4gaXNDb21wYXRpYmxlO1xufTtcblxuRW5jb2RlckJ1ZmZlci5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIGpvaW4ob3V0LCBvZmZzZXQpIHtcbiAgaWYgKCFvdXQpXG4gICAgb3V0ID0gQnVmZmVyLmFsbG9jKHRoaXMubGVuZ3RoKTtcbiAgaWYgKCFvZmZzZXQpXG4gICAgb2Zmc2V0ID0gMDtcblxuICBpZiAodGhpcy5sZW5ndGggPT09IDApXG4gICAgcmV0dXJuIG91dDtcblxuICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSkge1xuICAgIHRoaXMudmFsdWUuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG4gICAgICBpdGVtLmpvaW4ob3V0LCBvZmZzZXQpO1xuICAgICAgb2Zmc2V0ICs9IGl0ZW0ubGVuZ3RoO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGlmICh0eXBlb2YgdGhpcy52YWx1ZSA9PT0gJ251bWJlcicpXG4gICAgICBvdXRbb2Zmc2V0XSA9IHRoaXMudmFsdWU7XG4gICAgZWxzZSBpZiAodHlwZW9mIHRoaXMudmFsdWUgPT09ICdzdHJpbmcnKVxuICAgICAgb3V0LndyaXRlKHRoaXMudmFsdWUsIG9mZnNldCk7XG4gICAgZWxzZSBpZiAoQnVmZmVyLmlzQnVmZmVyKHRoaXMudmFsdWUpKVxuICAgICAgdGhpcy52YWx1ZS5jb3B5KG91dCwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gdGhpcy5sZW5ndGg7XG4gIH1cblxuICByZXR1cm4gb3V0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/node.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Reporter = (__webpack_require__(/*! ../base/reporter */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter);\nconst EncoderBuffer = (__webpack_require__(/*! ../base/buffer */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js\").EncoderBuffer);\nconst DecoderBuffer = (__webpack_require__(/*! ../base/buffer */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer);\nconst assert = __webpack_require__(/*! minimalistic-assert */ \"(ssr)/./node_modules/minimalistic-assert/index.js\");\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9iYXNlL3JlcG9ydGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGlCQUFpQixtQkFBTyxDQUFDLDJEQUFVOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFdBQVc7QUFDWDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL25vZGVfbW9kdWxlcy9hc24xLmpzL2xpYi9hc24xL2Jhc2UvcmVwb3J0ZXIuanM/MjUzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcblxuZnVuY3Rpb24gUmVwb3J0ZXIob3B0aW9ucykge1xuICB0aGlzLl9yZXBvcnRlclN0YXRlID0ge1xuICAgIG9iajogbnVsbCxcbiAgICBwYXRoOiBbXSxcbiAgICBvcHRpb25zOiBvcHRpb25zIHx8IHt9LFxuICAgIGVycm9yczogW11cbiAgfTtcbn1cbmV4cG9ydHMuUmVwb3J0ZXIgPSBSZXBvcnRlcjtcblxuUmVwb3J0ZXIucHJvdG90eXBlLmlzRXJyb3IgPSBmdW5jdGlvbiBpc0Vycm9yKG9iaikge1xuICByZXR1cm4gb2JqIGluc3RhbmNlb2YgUmVwb3J0ZXJFcnJvcjtcbn07XG5cblJlcG9ydGVyLnByb3RvdHlwZS5zYXZlID0gZnVuY3Rpb24gc2F2ZSgpIHtcbiAgY29uc3Qgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlO1xuXG4gIHJldHVybiB7IG9iajogc3RhdGUub2JqLCBwYXRoTGVuOiBzdGF0ZS5wYXRoLmxlbmd0aCB9O1xufTtcblxuUmVwb3J0ZXIucHJvdG90eXBlLnJlc3RvcmUgPSBmdW5jdGlvbiByZXN0b3JlKGRhdGEpIHtcbiAgY29uc3Qgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlO1xuXG4gIHN0YXRlLm9iaiA9IGRhdGEub2JqO1xuICBzdGF0ZS5wYXRoID0gc3RhdGUucGF0aC5zbGljZSgwLCBkYXRhLnBhdGhMZW4pO1xufTtcblxuUmVwb3J0ZXIucHJvdG90eXBlLmVudGVyS2V5ID0gZnVuY3Rpb24gZW50ZXJLZXkoa2V5KSB7XG4gIHJldHVybiB0aGlzLl9yZXBvcnRlclN0YXRlLnBhdGgucHVzaChrZXkpO1xufTtcblxuUmVwb3J0ZXIucHJvdG90eXBlLmV4aXRLZXkgPSBmdW5jdGlvbiBleGl0S2V5KGluZGV4KSB7XG4gIGNvbnN0IHN0YXRlID0gdGhpcy5fcmVwb3J0ZXJTdGF0ZTtcblxuICBzdGF0ZS5wYXRoID0gc3RhdGUucGF0aC5zbGljZSgwLCBpbmRleCAtIDEpO1xufTtcblxuUmVwb3J0ZXIucHJvdG90eXBlLmxlYXZlS2V5ID0gZnVuY3Rpb24gbGVhdmVLZXkoaW5kZXgsIGtleSwgdmFsdWUpIHtcbiAgY29uc3Qgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlO1xuXG4gIHRoaXMuZXhpdEtleShpbmRleCk7XG4gIGlmIChzdGF0ZS5vYmogIT09IG51bGwpXG4gICAgc3RhdGUub2JqW2tleV0gPSB2YWx1ZTtcbn07XG5cblJlcG9ydGVyLnByb3RvdHlwZS5wYXRoID0gZnVuY3Rpb24gcGF0aCgpIHtcbiAgcmV0dXJuIHRoaXMuX3JlcG9ydGVyU3RhdGUucGF0aC5qb2luKCcvJyk7XG59O1xuXG5SZXBvcnRlci5wcm90b3R5cGUuZW50ZXJPYmplY3QgPSBmdW5jdGlvbiBlbnRlck9iamVjdCgpIHtcbiAgY29uc3Qgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlO1xuXG4gIGNvbnN0IHByZXYgPSBzdGF0ZS5vYmo7XG4gIHN0YXRlLm9iaiA9IHt9O1xuICByZXR1cm4gcHJldjtcbn07XG5cblJlcG9ydGVyLnByb3RvdHlwZS5sZWF2ZU9iamVjdCA9IGZ1bmN0aW9uIGxlYXZlT2JqZWN0KHByZXYpIHtcbiAgY29uc3Qgc3RhdGUgPSB0aGlzLl9yZXBvcnRlclN0YXRlO1xuXG4gIGNvbnN0IG5vdyA9IHN0YXRlLm9iajtcbiAgc3RhdGUub2JqID0gcHJldjtcbiAgcmV0dXJuIG5vdztcbn07XG5cblJlcG9ydGVyLnByb3RvdHlwZS5lcnJvciA9IGZ1bmN0aW9uIGVycm9yKG1zZykge1xuICBsZXQgZXJyO1xuICBjb25zdCBzdGF0ZSA9IHRoaXMuX3JlcG9ydGVyU3RhdGU7XG5cbiAgY29uc3QgaW5oZXJpdGVkID0gbXNnIGluc3RhbmNlb2YgUmVwb3J0ZXJFcnJvcjtcbiAgaWYgKGluaGVyaXRlZCkge1xuICAgIGVyciA9IG1zZztcbiAgfSBlbHNlIHtcbiAgICBlcnIgPSBuZXcgUmVwb3J0ZXJFcnJvcihzdGF0ZS5wYXRoLm1hcChmdW5jdGlvbihlbGVtKSB7XG4gICAgICByZXR1cm4gJ1snICsgSlNPTi5zdHJpbmdpZnkoZWxlbSkgKyAnXSc7XG4gICAgfSkuam9pbignJyksIG1zZy5tZXNzYWdlIHx8IG1zZywgbXNnLnN0YWNrKTtcbiAgfVxuXG4gIGlmICghc3RhdGUub3B0aW9ucy5wYXJ0aWFsKVxuICAgIHRocm93IGVycjtcblxuICBpZiAoIWluaGVyaXRlZClcbiAgICBzdGF0ZS5lcnJvcnMucHVzaChlcnIpO1xuXG4gIHJldHVybiBlcnI7XG59O1xuXG5SZXBvcnRlci5wcm90b3R5cGUud3JhcFJlc3VsdCA9IGZ1bmN0aW9uIHdyYXBSZXN1bHQocmVzdWx0KSB7XG4gIGNvbnN0IHN0YXRlID0gdGhpcy5fcmVwb3J0ZXJTdGF0ZTtcbiAgaWYgKCFzdGF0ZS5vcHRpb25zLnBhcnRpYWwpXG4gICAgcmV0dXJuIHJlc3VsdDtcblxuICByZXR1cm4ge1xuICAgIHJlc3VsdDogdGhpcy5pc0Vycm9yKHJlc3VsdCkgPyBudWxsIDogcmVzdWx0LFxuICAgIGVycm9yczogc3RhdGUuZXJyb3JzXG4gIH07XG59O1xuXG5mdW5jdGlvbiBSZXBvcnRlckVycm9yKHBhdGgsIG1zZykge1xuICB0aGlzLnBhdGggPSBwYXRoO1xuICB0aGlzLnJldGhyb3cobXNnKTtcbn1cbmluaGVyaXRzKFJlcG9ydGVyRXJyb3IsIEVycm9yKTtcblxuUmVwb3J0ZXJFcnJvci5wcm90b3R5cGUucmV0aHJvdyA9IGZ1bmN0aW9uIHJldGhyb3cobXNnKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1zZyArICcgYXQ6ICcgKyAodGhpcy5wYXRoIHx8ICcoc2hhbGxvdyknKTtcbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKVxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIFJlcG9ydGVyRXJyb3IpO1xuXG4gIGlmICghdGhpcy5zdGFjaykge1xuICAgIHRyeSB7XG4gICAgICAvLyBJRSBvbmx5IGFkZHMgc3RhY2sgd2hlbiB0aHJvd25cbiAgICAgIHRocm93IG5ldyBFcnJvcih0aGlzLm1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuc3RhY2sgPSBlLnN0YWNrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/reporter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/constants/der.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9jb25zdGFudHMvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9jb25zdGFudHMvZGVyLmpzPzM5NjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBIZWxwZXJcbmZ1bmN0aW9uIHJldmVyc2UobWFwKSB7XG4gIGNvbnN0IHJlcyA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKG1hcCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAvLyBDb252ZXJ0IGtleSB0byBpbnRlZ2VyIGlmIGl0IGlzIHN0cmluZ2lmaWVkXG4gICAgaWYgKChrZXkgfCAwKSA9PSBrZXkpXG4gICAgICBrZXkgPSBrZXkgfCAwO1xuXG4gICAgY29uc3QgdmFsdWUgPSBtYXBba2V5XTtcbiAgICByZXNbdmFsdWVdID0ga2V5O1xuICB9KTtcblxuICByZXR1cm4gcmVzO1xufVxuXG5leHBvcnRzLnRhZ0NsYXNzID0ge1xuICAwOiAndW5pdmVyc2FsJyxcbiAgMTogJ2FwcGxpY2F0aW9uJyxcbiAgMjogJ2NvbnRleHQnLFxuICAzOiAncHJpdmF0ZSdcbn07XG5leHBvcnRzLnRhZ0NsYXNzQnlOYW1lID0gcmV2ZXJzZShleHBvcnRzLnRhZ0NsYXNzKTtcblxuZXhwb3J0cy50YWcgPSB7XG4gIDB4MDA6ICdlbmQnLFxuICAweDAxOiAnYm9vbCcsXG4gIDB4MDI6ICdpbnQnLFxuICAweDAzOiAnYml0c3RyJyxcbiAgMHgwNDogJ29jdHN0cicsXG4gIDB4MDU6ICdudWxsXycsXG4gIDB4MDY6ICdvYmppZCcsXG4gIDB4MDc6ICdvYmpEZXNjJyxcbiAgMHgwODogJ2V4dGVybmFsJyxcbiAgMHgwOTogJ3JlYWwnLFxuICAweDBhOiAnZW51bScsXG4gIDB4MGI6ICdlbWJlZCcsXG4gIDB4MGM6ICd1dGY4c3RyJyxcbiAgMHgwZDogJ3JlbGF0aXZlT2lkJyxcbiAgMHgxMDogJ3NlcScsXG4gIDB4MTE6ICdzZXQnLFxuICAweDEyOiAnbnVtc3RyJyxcbiAgMHgxMzogJ3ByaW50c3RyJyxcbiAgMHgxNDogJ3Q2MXN0cicsXG4gIDB4MTU6ICd2aWRlb3N0cicsXG4gIDB4MTY6ICdpYTVzdHInLFxuICAweDE3OiAndXRjdGltZScsXG4gIDB4MTg6ICdnZW50aW1lJyxcbiAgMHgxOTogJ2dyYXBoc3RyJyxcbiAgMHgxYTogJ2lzbzY0NnN0cicsXG4gIDB4MWI6ICdnZW5zdHInLFxuICAweDFjOiAndW5pc3RyJyxcbiAgMHgxZDogJ2NoYXJzdHInLFxuICAweDFlOiAnYm1wc3RyJ1xufTtcbmV4cG9ydHMudGFnQnlOYW1lID0gcmV2ZXJzZShleHBvcnRzLnRhZyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/constants/der.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\n\nconst bignum = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/@irys/arweave/node_modules/bn.js/lib/bn.js\");\nconst DecoderBuffer = (__webpack_require__(/*! ../base/buffer */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer);\nconst Node = __webpack_require__(/*! ../base/node */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/node.js\");\n\n// Import DER constants\nconst der = __webpack_require__(/*! ../constants/der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/constants/der.js\");\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/der.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst decoders = exports;\n\ndecoders.der = __webpack_require__(/*! ./der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/der.js\");\ndecoders.pem = __webpack_require__(/*! ./pem */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/pem.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9kZWNvZGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxlQUFlLG1CQUFPLENBQUMsK0ZBQU87QUFDOUIsZUFBZSxtQkFBTyxDQUFDLCtGQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9kZWNvZGVycy9pbmRleC5qcz82ZDMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZGVjb2RlcnMgPSBleHBvcnRzO1xuXG5kZWNvZGVycy5kZXIgPSByZXF1aXJlKCcuL2RlcicpO1xuZGVjb2RlcnMucGVtID0gcmVxdWlyZSgnLi9wZW0nKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\nconst Buffer = (__webpack_require__(/*! safer-buffer */ \"(ssr)/./node_modules/safer-buffer/safer.js\").Buffer);\n\nconst DERDecoder = __webpack_require__(/*! ./der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/der.js\");\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9kZWNvZGVycy9wZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLG1CQUFPLENBQUMsMkRBQVU7QUFDbkMsZUFBZSw4RkFBOEI7O0FBRTdDLG1CQUFtQixtQkFBTyxDQUFDLCtGQUFPOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvbm9kZV9tb2R1bGVzL2FzbjEuanMvbGliL2FzbjEvZGVjb2RlcnMvcGVtLmpzP2Q0OWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG5jb25zdCBCdWZmZXIgPSByZXF1aXJlKCdzYWZlci1idWZmZXInKS5CdWZmZXI7XG5cbmNvbnN0IERFUkRlY29kZXIgPSByZXF1aXJlKCcuL2RlcicpO1xuXG5mdW5jdGlvbiBQRU1EZWNvZGVyKGVudGl0eSkge1xuICBERVJEZWNvZGVyLmNhbGwodGhpcywgZW50aXR5KTtcbiAgdGhpcy5lbmMgPSAncGVtJztcbn1cbmluaGVyaXRzKFBFTURlY29kZXIsIERFUkRlY29kZXIpO1xubW9kdWxlLmV4cG9ydHMgPSBQRU1EZWNvZGVyO1xuXG5QRU1EZWNvZGVyLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUoZGF0YSwgb3B0aW9ucykge1xuICBjb25zdCBsaW5lcyA9IGRhdGEudG9TdHJpbmcoKS5zcGxpdCgvW1xcclxcbl0rL2cpO1xuXG4gIGNvbnN0IGxhYmVsID0gb3B0aW9ucy5sYWJlbC50b1VwcGVyQ2FzZSgpO1xuXG4gIGNvbnN0IHJlID0gL14tLS0tLShCRUdJTnxFTkQpIChbXi1dKyktLS0tLSQvO1xuICBsZXQgc3RhcnQgPSAtMTtcbiAgbGV0IGVuZCA9IC0xO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBsaW5lc1tpXS5tYXRjaChyZSk7XG4gICAgaWYgKG1hdGNoID09PSBudWxsKVxuICAgICAgY29udGludWU7XG5cbiAgICBpZiAobWF0Y2hbMl0gIT09IGxhYmVsKVxuICAgICAgY29udGludWU7XG5cbiAgICBpZiAoc3RhcnQgPT09IC0xKSB7XG4gICAgICBpZiAobWF0Y2hbMV0gIT09ICdCRUdJTicpXG4gICAgICAgIGJyZWFrO1xuICAgICAgc3RhcnQgPSBpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAobWF0Y2hbMV0gIT09ICdFTkQnKVxuICAgICAgICBicmVhaztcbiAgICAgIGVuZCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKHN0YXJ0ID09PSAtMSB8fCBlbmQgPT09IC0xKVxuICAgIHRocm93IG5ldyBFcnJvcignUEVNIHNlY3Rpb24gbm90IGZvdW5kIGZvcjogJyArIGxhYmVsKTtcblxuICBjb25zdCBiYXNlNjQgPSBsaW5lcy5zbGljZShzdGFydCArIDEsIGVuZCkuam9pbignJyk7XG4gIC8vIFJlbW92ZSBleGNlc3NpdmUgc3ltYm9sc1xuICBiYXNlNjQucmVwbGFjZSgvW15hLXowLTkrLz1dKy9naSwgJycpO1xuXG4gIGNvbnN0IGlucHV0ID0gQnVmZmVyLmZyb20oYmFzZTY0LCAnYmFzZTY0Jyk7XG4gIHJldHVybiBERVJEZWNvZGVyLnByb3RvdHlwZS5kZWNvZGUuY2FsbCh0aGlzLCBpbnB1dCwgb3B0aW9ucyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/decoders/pem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\nconst Buffer = (__webpack_require__(/*! safer-buffer */ \"(ssr)/./node_modules/safer-buffer/safer.js\").Buffer);\nconst Node = __webpack_require__(/*! ../base/node */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/base/node.js\");\n\n// Import DER constants\nconst der = __webpack_require__(/*! ../constants/der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/constants/der.js\");\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/der.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst encoders = exports;\n\nencoders.der = __webpack_require__(/*! ./der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/der.js\");\nencoders.pem = __webpack_require__(/*! ./pem */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/pem.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9lbmNvZGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxlQUFlLG1CQUFPLENBQUMsK0ZBQU87QUFDOUIsZUFBZSxtQkFBTyxDQUFDLCtGQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9lbmNvZGVycy9pbmRleC5qcz8xMWMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZW5jb2RlcnMgPSBleHBvcnRzO1xuXG5lbmNvZGVycy5kZXIgPSByZXF1aXJlKCcuL2RlcicpO1xuZW5jb2RlcnMucGVtID0gcmVxdWlyZSgnLi9wZW0nKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"(ssr)/./node_modules/inherits/inherits.js\");\n\nconst DEREncoder = __webpack_require__(/*! ./der */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/der.js\");\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYXNuMS5qcy9saWIvYXNuMS9lbmNvZGVycy9wZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLG1CQUFPLENBQUMsMkRBQVU7O0FBRW5DLG1CQUFtQixtQkFBTyxDQUFDLCtGQUFPOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL25vZGVfbW9kdWxlcy9hc24xLmpzL2xpYi9hc24xL2VuY29kZXJzL3BlbS5qcz8yYmNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG5jb25zdCBERVJFbmNvZGVyID0gcmVxdWlyZSgnLi9kZXInKTtcblxuZnVuY3Rpb24gUEVNRW5jb2RlcihlbnRpdHkpIHtcbiAgREVSRW5jb2Rlci5jYWxsKHRoaXMsIGVudGl0eSk7XG4gIHRoaXMuZW5jID0gJ3BlbSc7XG59XG5pbmhlcml0cyhQRU1FbmNvZGVyLCBERVJFbmNvZGVyKTtcbm1vZHVsZS5leHBvcnRzID0gUEVNRW5jb2RlcjtcblxuUEVNRW5jb2Rlci5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24gZW5jb2RlKGRhdGEsIG9wdGlvbnMpIHtcbiAgY29uc3QgYnVmID0gREVSRW5jb2Rlci5wcm90b3R5cGUuZW5jb2RlLmNhbGwodGhpcywgZGF0YSk7XG5cbiAgY29uc3QgcCA9IGJ1Zi50b1N0cmluZygnYmFzZTY0Jyk7XG4gIGNvbnN0IG91dCA9IFsgJy0tLS0tQkVHSU4gJyArIG9wdGlvbnMubGFiZWwgKyAnLS0tLS0nIF07XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcC5sZW5ndGg7IGkgKz0gNjQpXG4gICAgb3V0LnB1c2gocC5zbGljZShpLCBpICsgNjQpKTtcbiAgb3V0LnB1c2goJy0tLS0tRU5EICcgKyBvcHRpb25zLmxhYmVsICsgJy0tLS0tJyk7XG4gIHJldHVybiBvdXQuam9pbignXFxuJyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/encoders/pem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/node_modules/bn.js/lib/bn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@irys/arweave/node_modules/bn.js/lib/bn.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYm4uanMvbGliL2JuLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLGVBQWUsb0RBQXdCO0FBQ3ZDO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04seUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFFBQVE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHlCQUF5QixtQkFBbUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtDQUFrQyxZQUFZO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSwwREFBMEQsbUJBQW1CO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUNBQXVDLHNCQUFzQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsU0FBUztBQUNqQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGlCQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRCQUE0QjtBQUM5QztBQUNBOztBQUVBLGtCQUFrQixhQUFhO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTixrQkFBa0IsYUFBYTtBQUMvQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNkJBQTZCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsV0FBVztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixvQkFBb0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFdBQVc7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLE9BQU87QUFDM0I7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBOztBQUVBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsR0FBRztBQUMzQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxvQkFBb0IsV0FBVztBQUMvQjs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7O0FBRUEsbUNBQW1DO0FBQ25DLHVDQUF1QztBQUN2Qzs7QUFFQTtBQUNBLHNCQUFzQixPQUFPO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsY0FBYztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTs7QUFFQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QixtQ0FBbUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLCtDQUErQztBQUNuRTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxzQkFBc0Isc0NBQXNDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlCQUF5QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsUUFBUTtBQUMxQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLG1DQUFtQztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEIsbUNBQW1DO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsOEJBQThCLG1DQUFtQztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixtQ0FBbUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQSxNQUFNOztBQUVOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsZ0NBQWdDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsUUFBUTtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixZQUFZO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0JBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLFFBQVE7QUFDckM7QUFDQSw4QkFBOEIsUUFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFFLE1BQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9ub2RlX21vZHVsZXMvYm4uanMvbGliL2JuLmpzP2Q0ZDIiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIFV0aWxzXG4gIGZ1bmN0aW9uIGFzc2VydCAodmFsLCBtc2cpIHtcbiAgICBpZiAoIXZhbCkgdGhyb3cgbmV3IEVycm9yKG1zZyB8fCAnQXNzZXJ0aW9uIGZhaWxlZCcpO1xuICB9XG5cbiAgLy8gQ291bGQgdXNlIGBpbmhlcml0c2AgbW9kdWxlLCBidXQgZG9uJ3Qgd2FudCB0byBtb3ZlIGZyb20gc2luZ2xlIGZpbGVcbiAgLy8gYXJjaGl0ZWN0dXJlIHlldC5cbiAgZnVuY3Rpb24gaW5oZXJpdHMgKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yO1xuICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9O1xuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGU7XG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKTtcbiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3I7XG4gIH1cblxuICAvLyBCTlxuXG4gIGZ1bmN0aW9uIEJOIChudW1iZXIsIGJhc2UsIGVuZGlhbikge1xuICAgIGlmIChCTi5pc0JOKG51bWJlcikpIHtcbiAgICAgIHJldHVybiBudW1iZXI7XG4gICAgfVxuXG4gICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgdGhpcy53b3JkcyA9IG51bGw7XG4gICAgdGhpcy5sZW5ndGggPSAwO1xuXG4gICAgLy8gUmVkdWN0aW9uIGNvbnRleHRcbiAgICB0aGlzLnJlZCA9IG51bGw7XG5cbiAgICBpZiAobnVtYmVyICE9PSBudWxsKSB7XG4gICAgICBpZiAoYmFzZSA9PT0gJ2xlJyB8fCBiYXNlID09PSAnYmUnKSB7XG4gICAgICAgIGVuZGlhbiA9IGJhc2U7XG4gICAgICAgIGJhc2UgPSAxMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faW5pdChudW1iZXIgfHwgMCwgYmFzZSB8fCAxMCwgZW5kaWFuIHx8ICdiZScpO1xuICAgIH1cbiAgfVxuICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEJOO1xuICB9IGVsc2Uge1xuICAgIGV4cG9ydHMuQk4gPSBCTjtcbiAgfVxuXG4gIEJOLkJOID0gQk47XG4gIEJOLndvcmRTaXplID0gMjY7XG5cbiAgdmFyIEJ1ZmZlcjtcbiAgdHJ5IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5CdWZmZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBCdWZmZXIgPSB3aW5kb3cuQnVmZmVyO1xuICAgIH0gZWxzZSB7XG4gICAgICBCdWZmZXIgPSByZXF1aXJlKCdidWZmZXInKS5CdWZmZXI7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gIH1cblxuICBCTi5pc0JOID0gZnVuY3Rpb24gaXNCTiAobnVtKSB7XG4gICAgaWYgKG51bSBpbnN0YW5jZW9mIEJOKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVtICE9PSBudWxsICYmIHR5cGVvZiBudW0gPT09ICdvYmplY3QnICYmXG4gICAgICBudW0uY29uc3RydWN0b3Iud29yZFNpemUgPT09IEJOLndvcmRTaXplICYmIEFycmF5LmlzQXJyYXkobnVtLndvcmRzKTtcbiAgfTtcblxuICBCTi5tYXggPSBmdW5jdGlvbiBtYXggKGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKGxlZnQuY21wKHJpZ2h0KSA+IDApIHJldHVybiBsZWZ0O1xuICAgIHJldHVybiByaWdodDtcbiAgfTtcblxuICBCTi5taW4gPSBmdW5jdGlvbiBtaW4gKGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKGxlZnQuY21wKHJpZ2h0KSA8IDApIHJldHVybiBsZWZ0O1xuICAgIHJldHVybiByaWdodDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX2luaXQgPSBmdW5jdGlvbiBpbml0IChudW1iZXIsIGJhc2UsIGVuZGlhbikge1xuICAgIGlmICh0eXBlb2YgbnVtYmVyID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuIHRoaXMuX2luaXROdW1iZXIobnVtYmVyLCBiYXNlLCBlbmRpYW4pO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbnVtYmVyID09PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHRoaXMuX2luaXRBcnJheShudW1iZXIsIGJhc2UsIGVuZGlhbik7XG4gICAgfVxuXG4gICAgaWYgKGJhc2UgPT09ICdoZXgnKSB7XG4gICAgICBiYXNlID0gMTY7XG4gICAgfVxuICAgIGFzc2VydChiYXNlID09PSAoYmFzZSB8IDApICYmIGJhc2UgPj0gMiAmJiBiYXNlIDw9IDM2KTtcblxuICAgIG51bWJlciA9IG51bWJlci50b1N0cmluZygpLnJlcGxhY2UoL1xccysvZywgJycpO1xuICAgIHZhciBzdGFydCA9IDA7XG4gICAgaWYgKG51bWJlclswXSA9PT0gJy0nKSB7XG4gICAgICBzdGFydCsrO1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDE7XG4gICAgfVxuXG4gICAgaWYgKHN0YXJ0IDwgbnVtYmVyLmxlbmd0aCkge1xuICAgICAgaWYgKGJhc2UgPT09IDE2KSB7XG4gICAgICAgIHRoaXMuX3BhcnNlSGV4KG51bWJlciwgc3RhcnQsIGVuZGlhbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9wYXJzZUJhc2UobnVtYmVyLCBiYXNlLCBzdGFydCk7XG4gICAgICAgIGlmIChlbmRpYW4gPT09ICdsZScpIHtcbiAgICAgICAgICB0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksIGJhc2UsIGVuZGlhbik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9pbml0TnVtYmVyID0gZnVuY3Rpb24gX2luaXROdW1iZXIgKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7XG4gICAgaWYgKG51bWJlciA8IDApIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgICAgbnVtYmVyID0gLW51bWJlcjtcbiAgICB9XG4gICAgaWYgKG51bWJlciA8IDB4NDAwMDAwMCkge1xuICAgICAgdGhpcy53b3JkcyA9IFsgbnVtYmVyICYgMHgzZmZmZmZmIF07XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgfSBlbHNlIGlmIChudW1iZXIgPCAweDEwMDAwMDAwMDAwMDAwKSB7XG4gICAgICB0aGlzLndvcmRzID0gW1xuICAgICAgICBudW1iZXIgJiAweDNmZmZmZmYsXG4gICAgICAgIChudW1iZXIgLyAweDQwMDAwMDApICYgMHgzZmZmZmZmXG4gICAgICBdO1xuICAgICAgdGhpcy5sZW5ndGggPSAyO1xuICAgIH0gZWxzZSB7XG4gICAgICBhc3NlcnQobnVtYmVyIDwgMHgyMDAwMDAwMDAwMDAwMCk7IC8vIDIgXiA1MyAodW5zYWZlKVxuICAgICAgdGhpcy53b3JkcyA9IFtcbiAgICAgICAgbnVtYmVyICYgMHgzZmZmZmZmLFxuICAgICAgICAobnVtYmVyIC8gMHg0MDAwMDAwKSAmIDB4M2ZmZmZmZixcbiAgICAgICAgMVxuICAgICAgXTtcbiAgICAgIHRoaXMubGVuZ3RoID0gMztcbiAgICB9XG5cbiAgICBpZiAoZW5kaWFuICE9PSAnbGUnKSByZXR1cm47XG5cbiAgICAvLyBSZXZlcnNlIHRoZSBieXRlc1xuICAgIHRoaXMuX2luaXRBcnJheSh0aGlzLnRvQXJyYXkoKSwgYmFzZSwgZW5kaWFuKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX2luaXRBcnJheSA9IGZ1bmN0aW9uIF9pbml0QXJyYXkgKG51bWJlciwgYmFzZSwgZW5kaWFuKSB7XG4gICAgLy8gUGVyaGFwcyBhIFVpbnQ4QXJyYXlcbiAgICBhc3NlcnQodHlwZW9mIG51bWJlci5sZW5ndGggPT09ICdudW1iZXInKTtcbiAgICBpZiAobnVtYmVyLmxlbmd0aCA8PSAwKSB7XG4gICAgICB0aGlzLndvcmRzID0gWyAwIF07XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCA9IE1hdGguY2VpbChudW1iZXIubGVuZ3RoIC8gMyk7XG4gICAgdGhpcy53b3JkcyA9IG5ldyBBcnJheSh0aGlzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gMDtcbiAgICB9XG5cbiAgICB2YXIgaiwgdztcbiAgICB2YXIgb2ZmID0gMDtcbiAgICBpZiAoZW5kaWFuID09PSAnYmUnKSB7XG4gICAgICBmb3IgKGkgPSBudW1iZXIubGVuZ3RoIC0gMSwgaiA9IDA7IGkgPj0gMDsgaSAtPSAzKSB7XG4gICAgICAgIHcgPSBudW1iZXJbaV0gfCAobnVtYmVyW2kgLSAxXSA8PCA4KSB8IChudW1iZXJbaSAtIDJdIDw8IDE2KTtcbiAgICAgICAgdGhpcy53b3Jkc1tqXSB8PSAodyA8PCBvZmYpICYgMHgzZmZmZmZmO1xuICAgICAgICB0aGlzLndvcmRzW2ogKyAxXSA9ICh3ID4+PiAoMjYgLSBvZmYpKSAmIDB4M2ZmZmZmZjtcbiAgICAgICAgb2ZmICs9IDI0O1xuICAgICAgICBpZiAob2ZmID49IDI2KSB7XG4gICAgICAgICAgb2ZmIC09IDI2O1xuICAgICAgICAgIGorKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZW5kaWFuID09PSAnbGUnKSB7XG4gICAgICBmb3IgKGkgPSAwLCBqID0gMDsgaSA8IG51bWJlci5sZW5ndGg7IGkgKz0gMykge1xuICAgICAgICB3ID0gbnVtYmVyW2ldIHwgKG51bWJlcltpICsgMV0gPDwgOCkgfCAobnVtYmVyW2kgKyAyXSA8PCAxNik7XG4gICAgICAgIHRoaXMud29yZHNbal0gfD0gKHcgPDwgb2ZmKSAmIDB4M2ZmZmZmZjtcbiAgICAgICAgdGhpcy53b3Jkc1tqICsgMV0gPSAodyA+Pj4gKDI2IC0gb2ZmKSkgJiAweDNmZmZmZmY7XG4gICAgICAgIG9mZiArPSAyNDtcbiAgICAgICAgaWYgKG9mZiA+PSAyNikge1xuICAgICAgICAgIG9mZiAtPSAyNjtcbiAgICAgICAgICBqKys7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBmdW5jdGlvbiBwYXJzZUhleDRCaXRzIChzdHJpbmcsIGluZGV4KSB7XG4gICAgdmFyIGMgPSBzdHJpbmcuY2hhckNvZGVBdChpbmRleCk7XG4gICAgLy8gJ0EnIC0gJ0YnXG4gICAgaWYgKGMgPj0gNjUgJiYgYyA8PSA3MCkge1xuICAgICAgcmV0dXJuIGMgLSA1NTtcbiAgICAvLyAnYScgLSAnZidcbiAgICB9IGVsc2UgaWYgKGMgPj0gOTcgJiYgYyA8PSAxMDIpIHtcbiAgICAgIHJldHVybiBjIC0gODc7XG4gICAgLy8gJzAnIC0gJzknXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAoYyAtIDQ4KSAmIDB4ZjtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUhleEJ5dGUgKHN0cmluZywgbG93ZXJCb3VuZCwgaW5kZXgpIHtcbiAgICB2YXIgciA9IHBhcnNlSGV4NEJpdHMoc3RyaW5nLCBpbmRleCk7XG4gICAgaWYgKGluZGV4IC0gMSA+PSBsb3dlckJvdW5kKSB7XG4gICAgICByIHw9IHBhcnNlSGV4NEJpdHMoc3RyaW5nLCBpbmRleCAtIDEpIDw8IDQ7XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLl9wYXJzZUhleCA9IGZ1bmN0aW9uIF9wYXJzZUhleCAobnVtYmVyLCBzdGFydCwgZW5kaWFuKSB7XG4gICAgLy8gQ3JlYXRlIHBvc3NpYmx5IGJpZ2dlciBhcnJheSB0byBlbnN1cmUgdGhhdCBpdCBmaXRzIHRoZSBudW1iZXJcbiAgICB0aGlzLmxlbmd0aCA9IE1hdGguY2VpbCgobnVtYmVyLmxlbmd0aCAtIHN0YXJ0KSAvIDYpO1xuICAgIHRoaXMud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IDA7XG4gICAgfVxuXG4gICAgLy8gMjQtYml0cyBjaHVua3NcbiAgICB2YXIgb2ZmID0gMDtcbiAgICB2YXIgaiA9IDA7XG5cbiAgICB2YXIgdztcbiAgICBpZiAoZW5kaWFuID09PSAnYmUnKSB7XG4gICAgICBmb3IgKGkgPSBudW1iZXIubGVuZ3RoIC0gMTsgaSA+PSBzdGFydDsgaSAtPSAyKSB7XG4gICAgICAgIHcgPSBwYXJzZUhleEJ5dGUobnVtYmVyLCBzdGFydCwgaSkgPDwgb2ZmO1xuICAgICAgICB0aGlzLndvcmRzW2pdIHw9IHcgJiAweDNmZmZmZmY7XG4gICAgICAgIGlmIChvZmYgPj0gMTgpIHtcbiAgICAgICAgICBvZmYgLT0gMTg7XG4gICAgICAgICAgaiArPSAxO1xuICAgICAgICAgIHRoaXMud29yZHNbal0gfD0gdyA+Pj4gMjY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb2ZmICs9IDg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHBhcnNlTGVuZ3RoID0gbnVtYmVyLmxlbmd0aCAtIHN0YXJ0O1xuICAgICAgZm9yIChpID0gcGFyc2VMZW5ndGggJSAyID09PSAwID8gc3RhcnQgKyAxIDogc3RhcnQ7IGkgPCBudW1iZXIubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgdyA9IHBhcnNlSGV4Qnl0ZShudW1iZXIsIHN0YXJ0LCBpKSA8PCBvZmY7XG4gICAgICAgIHRoaXMud29yZHNbal0gfD0gdyAmIDB4M2ZmZmZmZjtcbiAgICAgICAgaWYgKG9mZiA+PSAxOCkge1xuICAgICAgICAgIG9mZiAtPSAxODtcbiAgICAgICAgICBqICs9IDE7XG4gICAgICAgICAgdGhpcy53b3Jkc1tqXSB8PSB3ID4+PiAyNjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvZmYgKz0gODtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBmdW5jdGlvbiBwYXJzZUJhc2UgKHN0ciwgc3RhcnQsIGVuZCwgbXVsKSB7XG4gICAgdmFyIHIgPSAwO1xuICAgIHZhciBsZW4gPSBNYXRoLm1pbihzdHIubGVuZ3RoLCBlbmQpO1xuICAgIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgYyA9IHN0ci5jaGFyQ29kZUF0KGkpIC0gNDg7XG5cbiAgICAgIHIgKj0gbXVsO1xuXG4gICAgICAvLyAnYSdcbiAgICAgIGlmIChjID49IDQ5KSB7XG4gICAgICAgIHIgKz0gYyAtIDQ5ICsgMHhhO1xuXG4gICAgICAvLyAnQSdcbiAgICAgIH0gZWxzZSBpZiAoYyA+PSAxNykge1xuICAgICAgICByICs9IGMgLSAxNyArIDB4YTtcblxuICAgICAgLy8gJzAnIC0gJzknXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByICs9IGM7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLl9wYXJzZUJhc2UgPSBmdW5jdGlvbiBfcGFyc2VCYXNlIChudW1iZXIsIGJhc2UsIHN0YXJ0KSB7XG4gICAgLy8gSW5pdGlhbGl6ZSBhcyB6ZXJvXG4gICAgdGhpcy53b3JkcyA9IFsgMCBdO1xuICAgIHRoaXMubGVuZ3RoID0gMTtcblxuICAgIC8vIEZpbmQgbGVuZ3RoIG9mIGxpbWIgaW4gYmFzZVxuICAgIGZvciAodmFyIGxpbWJMZW4gPSAwLCBsaW1iUG93ID0gMTsgbGltYlBvdyA8PSAweDNmZmZmZmY7IGxpbWJQb3cgKj0gYmFzZSkge1xuICAgICAgbGltYkxlbisrO1xuICAgIH1cbiAgICBsaW1iTGVuLS07XG4gICAgbGltYlBvdyA9IChsaW1iUG93IC8gYmFzZSkgfCAwO1xuXG4gICAgdmFyIHRvdGFsID0gbnVtYmVyLmxlbmd0aCAtIHN0YXJ0O1xuICAgIHZhciBtb2QgPSB0b3RhbCAlIGxpbWJMZW47XG4gICAgdmFyIGVuZCA9IE1hdGgubWluKHRvdGFsLCB0b3RhbCAtIG1vZCkgKyBzdGFydDtcblxuICAgIHZhciB3b3JkID0gMDtcbiAgICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gbGltYkxlbikge1xuICAgICAgd29yZCA9IHBhcnNlQmFzZShudW1iZXIsIGksIGkgKyBsaW1iTGVuLCBiYXNlKTtcblxuICAgICAgdGhpcy5pbXVsbihsaW1iUG93KTtcbiAgICAgIGlmICh0aGlzLndvcmRzWzBdICsgd29yZCA8IDB4NDAwMDAwMCkge1xuICAgICAgICB0aGlzLndvcmRzWzBdICs9IHdvcmQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9pYWRkbih3b3JkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobW9kICE9PSAwKSB7XG4gICAgICB2YXIgcG93ID0gMTtcbiAgICAgIHdvcmQgPSBwYXJzZUJhc2UobnVtYmVyLCBpLCBudW1iZXIubGVuZ3RoLCBiYXNlKTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG1vZDsgaSsrKSB7XG4gICAgICAgIHBvdyAqPSBiYXNlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmltdWxuKHBvdyk7XG4gICAgICBpZiAodGhpcy53b3Jkc1swXSArIHdvcmQgPCAweDQwMDAwMDApIHtcbiAgICAgICAgdGhpcy53b3Jkc1swXSArPSB3b3JkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5faWFkZG4od29yZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5jb3B5ID0gZnVuY3Rpb24gY29weSAoZGVzdCkge1xuICAgIGRlc3Qud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgZGVzdC53b3Jkc1tpXSA9IHRoaXMud29yZHNbaV07XG4gICAgfVxuICAgIGRlc3QubGVuZ3RoID0gdGhpcy5sZW5ndGg7XG4gICAgZGVzdC5uZWdhdGl2ZSA9IHRoaXMubmVnYXRpdmU7XG4gICAgZGVzdC5yZWQgPSB0aGlzLnJlZDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSAoKSB7XG4gICAgdmFyIHIgPSBuZXcgQk4obnVsbCk7XG4gICAgdGhpcy5jb3B5KHIpO1xuICAgIHJldHVybiByO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5fZXhwYW5kID0gZnVuY3Rpb24gX2V4cGFuZCAoc2l6ZSkge1xuICAgIHdoaWxlICh0aGlzLmxlbmd0aCA8IHNpemUpIHtcbiAgICAgIHRoaXMud29yZHNbdGhpcy5sZW5ndGgrK10gPSAwO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvLyBSZW1vdmUgbGVhZGluZyBgMGAgZnJvbSBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLnN0cmlwID0gZnVuY3Rpb24gc3RyaXAgKCkge1xuICAgIHdoaWxlICh0aGlzLmxlbmd0aCA+IDEgJiYgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCAtIDFdID09PSAwKSB7XG4gICAgICB0aGlzLmxlbmd0aC0tO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5fbm9ybVNpZ24oKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX25vcm1TaWduID0gZnVuY3Rpb24gX25vcm1TaWduICgpIHtcbiAgICAvLyAtMCA9IDBcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDEgJiYgdGhpcy53b3Jkc1swXSA9PT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24gaW5zcGVjdCAoKSB7XG4gICAgcmV0dXJuICh0aGlzLnJlZCA/ICc8Qk4tUjogJyA6ICc8Qk46ICcpICsgdGhpcy50b1N0cmluZygxNikgKyAnPic7XG4gIH07XG5cbiAgLypcblxuICB2YXIgemVyb3MgPSBbXTtcbiAgdmFyIGdyb3VwU2l6ZXMgPSBbXTtcbiAgdmFyIGdyb3VwQmFzZXMgPSBbXTtcblxuICB2YXIgcyA9ICcnO1xuICB2YXIgaSA9IC0xO1xuICB3aGlsZSAoKytpIDwgQk4ud29yZFNpemUpIHtcbiAgICB6ZXJvc1tpXSA9IHM7XG4gICAgcyArPSAnMCc7XG4gIH1cbiAgZ3JvdXBTaXplc1swXSA9IDA7XG4gIGdyb3VwU2l6ZXNbMV0gPSAwO1xuICBncm91cEJhc2VzWzBdID0gMDtcbiAgZ3JvdXBCYXNlc1sxXSA9IDA7XG4gIHZhciBiYXNlID0gMiAtIDE7XG4gIHdoaWxlICgrK2Jhc2UgPCAzNiArIDEpIHtcbiAgICB2YXIgZ3JvdXBTaXplID0gMDtcbiAgICB2YXIgZ3JvdXBCYXNlID0gMTtcbiAgICB3aGlsZSAoZ3JvdXBCYXNlIDwgKDEgPDwgQk4ud29yZFNpemUpIC8gYmFzZSkge1xuICAgICAgZ3JvdXBCYXNlICo9IGJhc2U7XG4gICAgICBncm91cFNpemUgKz0gMTtcbiAgICB9XG4gICAgZ3JvdXBTaXplc1tiYXNlXSA9IGdyb3VwU2l6ZTtcbiAgICBncm91cEJhc2VzW2Jhc2VdID0gZ3JvdXBCYXNlO1xuICB9XG5cbiAgKi9cblxuICB2YXIgemVyb3MgPSBbXG4gICAgJycsXG4gICAgJzAnLFxuICAgICcwMCcsXG4gICAgJzAwMCcsXG4gICAgJzAwMDAnLFxuICAgICcwMDAwMCcsXG4gICAgJzAwMDAwMCcsXG4gICAgJzAwMDAwMDAnLFxuICAgICcwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnXG4gIF07XG5cbiAgdmFyIGdyb3VwU2l6ZXMgPSBbXG4gICAgMCwgMCxcbiAgICAyNSwgMTYsIDEyLCAxMSwgMTAsIDksIDgsXG4gICAgOCwgNywgNywgNywgNywgNiwgNixcbiAgICA2LCA2LCA2LCA2LCA2LCA1LCA1LFxuICAgIDUsIDUsIDUsIDUsIDUsIDUsIDUsXG4gICAgNSwgNSwgNSwgNSwgNSwgNSwgNVxuICBdO1xuXG4gIHZhciBncm91cEJhc2VzID0gW1xuICAgIDAsIDAsXG4gICAgMzM1NTQ0MzIsIDQzMDQ2NzIxLCAxNjc3NzIxNiwgNDg4MjgxMjUsIDYwNDY2MTc2LCA0MDM1MzYwNywgMTY3NzcyMTYsXG4gICAgNDMwNDY3MjEsIDEwMDAwMDAwLCAxOTQ4NzE3MSwgMzU4MzE4MDgsIDYyNzQ4NTE3LCA3NTI5NTM2LCAxMTM5MDYyNSxcbiAgICAxNjc3NzIxNiwgMjQxMzc1NjksIDM0MDEyMjI0LCA0NzA0NTg4MSwgNjQwMDAwMDAsIDQwODQxMDEsIDUxNTM2MzIsXG4gICAgNjQzNjM0MywgNzk2MjYyNCwgOTc2NTYyNSwgMTE4ODEzNzYsIDE0MzQ4OTA3LCAxNzIxMDM2OCwgMjA1MTExNDksXG4gICAgMjQzMDAwMDAsIDI4NjI5MTUxLCAzMzU1NDQzMiwgMzkxMzUzOTMsIDQ1NDM1NDI0LCA1MjUyMTg3NSwgNjA0NjYxNzZcbiAgXTtcblxuICBCTi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyAoYmFzZSwgcGFkZGluZykge1xuICAgIGJhc2UgPSBiYXNlIHx8IDEwO1xuICAgIHBhZGRpbmcgPSBwYWRkaW5nIHwgMCB8fCAxO1xuXG4gICAgdmFyIG91dDtcbiAgICBpZiAoYmFzZSA9PT0gMTYgfHwgYmFzZSA9PT0gJ2hleCcpIHtcbiAgICAgIG91dCA9ICcnO1xuICAgICAgdmFyIG9mZiA9IDA7XG4gICAgICB2YXIgY2FycnkgPSAwO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB3ID0gdGhpcy53b3Jkc1tpXTtcbiAgICAgICAgdmFyIHdvcmQgPSAoKCh3IDw8IG9mZikgfCBjYXJyeSkgJiAweGZmZmZmZikudG9TdHJpbmcoMTYpO1xuICAgICAgICBjYXJyeSA9ICh3ID4+PiAoMjQgLSBvZmYpKSAmIDB4ZmZmZmZmO1xuICAgICAgICBvZmYgKz0gMjtcbiAgICAgICAgaWYgKG9mZiA+PSAyNikge1xuICAgICAgICAgIG9mZiAtPSAyNjtcbiAgICAgICAgICBpLS07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhcnJ5ICE9PSAwIHx8IGkgIT09IHRoaXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIG91dCA9IHplcm9zWzYgLSB3b3JkLmxlbmd0aF0gKyB3b3JkICsgb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCA9IHdvcmQgKyBvdXQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgICBvdXQgPSBjYXJyeS50b1N0cmluZygxNikgKyBvdXQ7XG4gICAgICB9XG4gICAgICB3aGlsZSAob3V0Lmxlbmd0aCAlIHBhZGRpbmcgIT09IDApIHtcbiAgICAgICAgb3V0ID0gJzAnICsgb3V0O1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgICAgb3V0ID0gJy0nICsgb3V0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG5cbiAgICBpZiAoYmFzZSA9PT0gKGJhc2UgfCAwKSAmJiBiYXNlID49IDIgJiYgYmFzZSA8PSAzNikge1xuICAgICAgLy8gdmFyIGdyb3VwU2l6ZSA9IE1hdGguZmxvb3IoQk4ud29yZFNpemUgKiBNYXRoLkxOMiAvIE1hdGgubG9nKGJhc2UpKTtcbiAgICAgIHZhciBncm91cFNpemUgPSBncm91cFNpemVzW2Jhc2VdO1xuICAgICAgLy8gdmFyIGdyb3VwQmFzZSA9IE1hdGgucG93KGJhc2UsIGdyb3VwU2l6ZSk7XG4gICAgICB2YXIgZ3JvdXBCYXNlID0gZ3JvdXBCYXNlc1tiYXNlXTtcbiAgICAgIG91dCA9ICcnO1xuICAgICAgdmFyIGMgPSB0aGlzLmNsb25lKCk7XG4gICAgICBjLm5lZ2F0aXZlID0gMDtcbiAgICAgIHdoaWxlICghYy5pc1plcm8oKSkge1xuICAgICAgICB2YXIgciA9IGMubW9kbihncm91cEJhc2UpLnRvU3RyaW5nKGJhc2UpO1xuICAgICAgICBjID0gYy5pZGl2bihncm91cEJhc2UpO1xuXG4gICAgICAgIGlmICghYy5pc1plcm8oKSkge1xuICAgICAgICAgIG91dCA9IHplcm9zW2dyb3VwU2l6ZSAtIHIubGVuZ3RoXSArIHIgKyBvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3V0ID0gciArIG91dDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHRoaXMuaXNaZXJvKCkpIHtcbiAgICAgICAgb3V0ID0gJzAnICsgb3V0O1xuICAgICAgfVxuICAgICAgd2hpbGUgKG91dC5sZW5ndGggJSBwYWRkaW5nICE9PSAwKSB7XG4gICAgICAgIG91dCA9ICcwJyArIG91dDtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICAgIG91dCA9ICctJyArIG91dDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuXG4gICAgYXNzZXJ0KGZhbHNlLCAnQmFzZSBzaG91bGQgYmUgYmV0d2VlbiAyIGFuZCAzNicpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS50b051bWJlciA9IGZ1bmN0aW9uIHRvTnVtYmVyICgpIHtcbiAgICB2YXIgcmV0ID0gdGhpcy53b3Jkc1swXTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDIpIHtcbiAgICAgIHJldCArPSB0aGlzLndvcmRzWzFdICogMHg0MDAwMDAwO1xuICAgIH0gZWxzZSBpZiAodGhpcy5sZW5ndGggPT09IDMgJiYgdGhpcy53b3Jkc1syXSA9PT0gMHgwMSkge1xuICAgICAgLy8gTk9URTogYXQgdGhpcyBzdGFnZSBpdCBpcyBrbm93biB0aGF0IHRoZSB0b3AgYml0IGlzIHNldFxuICAgICAgcmV0ICs9IDB4MTAwMDAwMDAwMDAwMDAgKyAodGhpcy53b3Jkc1sxXSAqIDB4NDAwMDAwMCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmxlbmd0aCA+IDIpIHtcbiAgICAgIGFzc2VydChmYWxzZSwgJ051bWJlciBjYW4gb25seSBzYWZlbHkgc3RvcmUgdXAgdG8gNTMgYml0cycpO1xuICAgIH1cbiAgICByZXR1cm4gKHRoaXMubmVnYXRpdmUgIT09IDApID8gLXJldCA6IHJldDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gdG9KU09OICgpIHtcbiAgICByZXR1cm4gdGhpcy50b1N0cmluZygxNik7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnRvQnVmZmVyID0gZnVuY3Rpb24gdG9CdWZmZXIgKGVuZGlhbiwgbGVuZ3RoKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBCdWZmZXIgIT09ICd1bmRlZmluZWQnKTtcbiAgICByZXR1cm4gdGhpcy50b0FycmF5TGlrZShCdWZmZXIsIGVuZGlhbiwgbGVuZ3RoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkgKGVuZGlhbiwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9BcnJheUxpa2UoQXJyYXksIGVuZGlhbiwgbGVuZ3RoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudG9BcnJheUxpa2UgPSBmdW5jdGlvbiB0b0FycmF5TGlrZSAoQXJyYXlUeXBlLCBlbmRpYW4sIGxlbmd0aCkge1xuICAgIHZhciBieXRlTGVuZ3RoID0gdGhpcy5ieXRlTGVuZ3RoKCk7XG4gICAgdmFyIHJlcUxlbmd0aCA9IGxlbmd0aCB8fCBNYXRoLm1heCgxLCBieXRlTGVuZ3RoKTtcbiAgICBhc3NlcnQoYnl0ZUxlbmd0aCA8PSByZXFMZW5ndGgsICdieXRlIGFycmF5IGxvbmdlciB0aGFuIGRlc2lyZWQgbGVuZ3RoJyk7XG4gICAgYXNzZXJ0KHJlcUxlbmd0aCA+IDAsICdSZXF1ZXN0ZWQgYXJyYXkgbGVuZ3RoIDw9IDAnKTtcblxuICAgIHRoaXMuc3RyaXAoKTtcbiAgICB2YXIgbGl0dGxlRW5kaWFuID0gZW5kaWFuID09PSAnbGUnO1xuICAgIHZhciByZXMgPSBuZXcgQXJyYXlUeXBlKHJlcUxlbmd0aCk7XG5cbiAgICB2YXIgYiwgaTtcbiAgICB2YXIgcSA9IHRoaXMuY2xvbmUoKTtcbiAgICBpZiAoIWxpdHRsZUVuZGlhbikge1xuICAgICAgLy8gQXNzdW1lIGJpZy1lbmRpYW5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCByZXFMZW5ndGggLSBieXRlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzW2ldID0gMDtcbiAgICAgIH1cblxuICAgICAgZm9yIChpID0gMDsgIXEuaXNaZXJvKCk7IGkrKykge1xuICAgICAgICBiID0gcS5hbmRsbigweGZmKTtcbiAgICAgICAgcS5pdXNocm4oOCk7XG5cbiAgICAgICAgcmVzW3JlcUxlbmd0aCAtIGkgLSAxXSA9IGI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoaSA9IDA7ICFxLmlzWmVybygpOyBpKyspIHtcbiAgICAgICAgYiA9IHEuYW5kbG4oMHhmZik7XG4gICAgICAgIHEuaXVzaHJuKDgpO1xuXG4gICAgICAgIHJlc1tpXSA9IGI7XG4gICAgICB9XG5cbiAgICAgIGZvciAoOyBpIDwgcmVxTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzW2ldID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIGlmIChNYXRoLmNsejMyKSB7XG4gICAgQk4ucHJvdG90eXBlLl9jb3VudEJpdHMgPSBmdW5jdGlvbiBfY291bnRCaXRzICh3KSB7XG4gICAgICByZXR1cm4gMzIgLSBNYXRoLmNsejMyKHcpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgQk4ucHJvdG90eXBlLl9jb3VudEJpdHMgPSBmdW5jdGlvbiBfY291bnRCaXRzICh3KSB7XG4gICAgICB2YXIgdCA9IHc7XG4gICAgICB2YXIgciA9IDA7XG4gICAgICBpZiAodCA+PSAweDEwMDApIHtcbiAgICAgICAgciArPSAxMztcbiAgICAgICAgdCA+Pj49IDEzO1xuICAgICAgfVxuICAgICAgaWYgKHQgPj0gMHg0MCkge1xuICAgICAgICByICs9IDc7XG4gICAgICAgIHQgPj4+PSA3O1xuICAgICAgfVxuICAgICAgaWYgKHQgPj0gMHg4KSB7XG4gICAgICAgIHIgKz0gNDtcbiAgICAgICAgdCA+Pj49IDQ7XG4gICAgICB9XG4gICAgICBpZiAodCA+PSAweDAyKSB7XG4gICAgICAgIHIgKz0gMjtcbiAgICAgICAgdCA+Pj49IDI7XG4gICAgICB9XG4gICAgICByZXR1cm4gciArIHQ7XG4gICAgfTtcbiAgfVxuXG4gIEJOLnByb3RvdHlwZS5femVyb0JpdHMgPSBmdW5jdGlvbiBfemVyb0JpdHMgKHcpIHtcbiAgICAvLyBTaG9ydC1jdXRcbiAgICBpZiAodyA9PT0gMCkgcmV0dXJuIDI2O1xuXG4gICAgdmFyIHQgPSB3O1xuICAgIHZhciByID0gMDtcbiAgICBpZiAoKHQgJiAweDFmZmYpID09PSAwKSB7XG4gICAgICByICs9IDEzO1xuICAgICAgdCA+Pj49IDEzO1xuICAgIH1cbiAgICBpZiAoKHQgJiAweDdmKSA9PT0gMCkge1xuICAgICAgciArPSA3O1xuICAgICAgdCA+Pj49IDc7XG4gICAgfVxuICAgIGlmICgodCAmIDB4ZikgPT09IDApIHtcbiAgICAgIHIgKz0gNDtcbiAgICAgIHQgPj4+PSA0O1xuICAgIH1cbiAgICBpZiAoKHQgJiAweDMpID09PSAwKSB7XG4gICAgICByICs9IDI7XG4gICAgICB0ID4+Pj0gMjtcbiAgICB9XG4gICAgaWYgKCh0ICYgMHgxKSA9PT0gMCkge1xuICAgICAgcisrO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbiAgfTtcblxuICAvLyBSZXR1cm4gbnVtYmVyIG9mIHVzZWQgYml0cyBpbiBhIEJOXG4gIEJOLnByb3RvdHlwZS5iaXRMZW5ndGggPSBmdW5jdGlvbiBiaXRMZW5ndGggKCkge1xuICAgIHZhciB3ID0gdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCAtIDFdO1xuICAgIHZhciBoaSA9IHRoaXMuX2NvdW50Qml0cyh3KTtcbiAgICByZXR1cm4gKHRoaXMubGVuZ3RoIC0gMSkgKiAyNiArIGhpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHRvQml0QXJyYXkgKG51bSkge1xuICAgIHZhciB3ID0gbmV3IEFycmF5KG51bS5iaXRMZW5ndGgoKSk7XG5cbiAgICBmb3IgKHZhciBiaXQgPSAwOyBiaXQgPCB3Lmxlbmd0aDsgYml0KyspIHtcbiAgICAgIHZhciBvZmYgPSAoYml0IC8gMjYpIHwgMDtcbiAgICAgIHZhciB3Yml0ID0gYml0ICUgMjY7XG5cbiAgICAgIHdbYml0XSA9IChudW0ud29yZHNbb2ZmXSAmICgxIDw8IHdiaXQpKSA+Pj4gd2JpdDtcbiAgICB9XG5cbiAgICByZXR1cm4gdztcbiAgfVxuXG4gIC8vIE51bWJlciBvZiB0cmFpbGluZyB6ZXJvIGJpdHNcbiAgQk4ucHJvdG90eXBlLnplcm9CaXRzID0gZnVuY3Rpb24gemVyb0JpdHMgKCkge1xuICAgIGlmICh0aGlzLmlzWmVybygpKSByZXR1cm4gMDtcblxuICAgIHZhciByID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBiID0gdGhpcy5femVyb0JpdHModGhpcy53b3Jkc1tpXSk7XG4gICAgICByICs9IGI7XG4gICAgICBpZiAoYiAhPT0gMjYpIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuYnl0ZUxlbmd0aCA9IGZ1bmN0aW9uIGJ5dGVMZW5ndGggKCkge1xuICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5iaXRMZW5ndGgoKSAvIDgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS50b1R3b3MgPSBmdW5jdGlvbiB0b1R3b3MgKHdpZHRoKSB7XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIHJldHVybiB0aGlzLmFicygpLmlub3RuKHdpZHRoKS5pYWRkbigxKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZnJvbVR3b3MgPSBmdW5jdGlvbiBmcm9tVHdvcyAod2lkdGgpIHtcbiAgICBpZiAodGhpcy50ZXN0bih3aWR0aCAtIDEpKSB7XG4gICAgICByZXR1cm4gdGhpcy5ub3RuKHdpZHRoKS5pYWRkbigxKS5pbmVnKCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNsb25lKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlzTmVnID0gZnVuY3Rpb24gaXNOZWcgKCkge1xuICAgIHJldHVybiB0aGlzLm5lZ2F0aXZlICE9PSAwO1xuICB9O1xuXG4gIC8vIFJldHVybiBuZWdhdGl2ZSBjbG9uZSBvZiBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uIG5lZyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pbmVnKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmluZWcgPSBmdW5jdGlvbiBpbmVnICgpIHtcbiAgICBpZiAoIXRoaXMuaXNaZXJvKCkpIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgXj0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvLyBPciBgbnVtYCB3aXRoIGB0aGlzYCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaXVvciA9IGZ1bmN0aW9uIGl1b3IgKG51bSkge1xuICAgIHdoaWxlICh0aGlzLmxlbmd0aCA8IG51bS5sZW5ndGgpIHtcbiAgICAgIHRoaXMud29yZHNbdGhpcy5sZW5ndGgrK10gPSAwO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXSB8IG51bS53b3Jkc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5pb3IgPSBmdW5jdGlvbiBpb3IgKG51bSkge1xuICAgIGFzc2VydCgodGhpcy5uZWdhdGl2ZSB8IG51bS5uZWdhdGl2ZSkgPT09IDApO1xuICAgIHJldHVybiB0aGlzLml1b3IobnVtKTtcbiAgfTtcblxuICAvLyBPciBgbnVtYCB3aXRoIGB0aGlzYFxuICBCTi5wcm90b3R5cGUub3IgPSBmdW5jdGlvbiBvciAobnVtKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pb3IobnVtKTtcbiAgICByZXR1cm4gbnVtLmNsb25lKCkuaW9yKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51b3IgPSBmdW5jdGlvbiB1b3IgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaXVvcihudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5pdW9yKHRoaXMpO1xuICB9O1xuXG4gIC8vIEFuZCBgbnVtYCB3aXRoIGB0aGlzYCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaXVhbmQgPSBmdW5jdGlvbiBpdWFuZCAobnVtKSB7XG4gICAgLy8gYiA9IG1pbi1sZW5ndGgobnVtLCB0aGlzKVxuICAgIHZhciBiO1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHtcbiAgICAgIGIgPSBudW07XG4gICAgfSBlbHNlIHtcbiAgICAgIGIgPSB0aGlzO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IHRoaXMud29yZHNbaV0gJiBudW0ud29yZHNbaV07XG4gICAgfVxuXG4gICAgdGhpcy5sZW5ndGggPSBiLmxlbmd0aDtcblxuICAgIHJldHVybiB0aGlzLnN0cmlwKCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmlhbmQgPSBmdW5jdGlvbiBpYW5kIChudW0pIHtcbiAgICBhc3NlcnQoKHRoaXMubmVnYXRpdmUgfCBudW0ubmVnYXRpdmUpID09PSAwKTtcbiAgICByZXR1cm4gdGhpcy5pdWFuZChudW0pO1xuICB9O1xuXG4gIC8vIEFuZCBgbnVtYCB3aXRoIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuYW5kID0gZnVuY3Rpb24gYW5kIChudW0pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9uZSgpLmlhbmQobnVtKTtcbiAgICByZXR1cm4gbnVtLmNsb25lKCkuaWFuZCh0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUudWFuZCA9IGZ1bmN0aW9uIHVhbmQgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaXVhbmQobnVtKTtcbiAgICByZXR1cm4gbnVtLmNsb25lKCkuaXVhbmQodGhpcyk7XG4gIH07XG5cbiAgLy8gWG9yIGBudW1gIHdpdGggYHRoaXNgIGluLXBsYWNlXG4gIEJOLnByb3RvdHlwZS5pdXhvciA9IGZ1bmN0aW9uIGl1eG9yIChudW0pIHtcbiAgICAvLyBhLmxlbmd0aCA+IGIubGVuZ3RoXG4gICAgdmFyIGE7XG4gICAgdmFyIGI7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkge1xuICAgICAgYSA9IHRoaXM7XG4gICAgICBiID0gbnVtO1xuICAgIH0gZWxzZSB7XG4gICAgICBhID0gbnVtO1xuICAgICAgYiA9IHRoaXM7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gYS53b3Jkc1tpXSBeIGIud29yZHNbaV07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMgIT09IGEpIHtcbiAgICAgIGZvciAoOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gYS53b3Jkc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCA9IGEubGVuZ3RoO1xuXG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXhvciA9IGZ1bmN0aW9uIGl4b3IgKG51bSkge1xuICAgIGFzc2VydCgodGhpcy5uZWdhdGl2ZSB8IG51bS5uZWdhdGl2ZSkgPT09IDApO1xuICAgIHJldHVybiB0aGlzLml1eG9yKG51bSk7XG4gIH07XG5cbiAgLy8gWG9yIGBudW1gIHdpdGggYHRoaXNgXG4gIEJOLnByb3RvdHlwZS54b3IgPSBmdW5jdGlvbiB4b3IgKG51bSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IG51bS5sZW5ndGgpIHJldHVybiB0aGlzLmNsb25lKCkuaXhvcihudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5peG9yKHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51eG9yID0gZnVuY3Rpb24gdXhvciAobnVtKSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXhvcihudW0pO1xuICAgIHJldHVybiBudW0uY2xvbmUoKS5pdXhvcih0aGlzKTtcbiAgfTtcblxuICAvLyBOb3QgYGB0aGlzYGAgd2l0aCBgYHdpZHRoYGAgYml0d2lkdGhcbiAgQk4ucHJvdG90eXBlLmlub3RuID0gZnVuY3Rpb24gaW5vdG4gKHdpZHRoKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiB3aWR0aCA9PT0gJ251bWJlcicgJiYgd2lkdGggPj0gMCk7XG5cbiAgICB2YXIgYnl0ZXNOZWVkZWQgPSBNYXRoLmNlaWwod2lkdGggLyAyNikgfCAwO1xuICAgIHZhciBiaXRzTGVmdCA9IHdpZHRoICUgMjY7XG5cbiAgICAvLyBFeHRlbmQgdGhlIGJ1ZmZlciB3aXRoIGxlYWRpbmcgemVyb2VzXG4gICAgdGhpcy5fZXhwYW5kKGJ5dGVzTmVlZGVkKTtcblxuICAgIGlmIChiaXRzTGVmdCA+IDApIHtcbiAgICAgIGJ5dGVzTmVlZGVkLS07XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGNvbXBsZXRlIHdvcmRzXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlc05lZWRlZDsgaSsrKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gfnRoaXMud29yZHNbaV0gJiAweDNmZmZmZmY7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHRoZSByZXNpZHVlXG4gICAgaWYgKGJpdHNMZWZ0ID4gMCkge1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IH50aGlzLndvcmRzW2ldICYgKDB4M2ZmZmZmZiA+PiAoMjYgLSBiaXRzTGVmdCkpO1xuICAgIH1cblxuICAgIC8vIEFuZCByZW1vdmUgbGVhZGluZyB6ZXJvZXNcbiAgICByZXR1cm4gdGhpcy5zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5ub3RuID0gZnVuY3Rpb24gbm90biAod2lkdGgpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlub3RuKHdpZHRoKTtcbiAgfTtcblxuICAvLyBTZXQgYGJpdGAgb2YgYHRoaXNgXG4gIEJOLnByb3RvdHlwZS5zZXRuID0gZnVuY3Rpb24gc2V0biAoYml0LCB2YWwpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdCA9PT0gJ251bWJlcicgJiYgYml0ID49IDApO1xuXG4gICAgdmFyIG9mZiA9IChiaXQgLyAyNikgfCAwO1xuICAgIHZhciB3Yml0ID0gYml0ICUgMjY7XG5cbiAgICB0aGlzLl9leHBhbmQob2ZmICsgMSk7XG5cbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLndvcmRzW29mZl0gPSB0aGlzLndvcmRzW29mZl0gfCAoMSA8PCB3Yml0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy53b3Jkc1tvZmZdID0gdGhpcy53b3Jkc1tvZmZdICYgfigxIDw8IHdiaXQpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnN0cmlwKCk7XG4gIH07XG5cbiAgLy8gQWRkIGBudW1gIHRvIGB0aGlzYCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaWFkZCA9IGZ1bmN0aW9uIGlhZGQgKG51bSkge1xuICAgIHZhciByO1xuXG4gICAgLy8gbmVnYXRpdmUgKyBwb3NpdGl2ZVxuICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwICYmIG51bS5uZWdhdGl2ZSA9PT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICByID0gdGhpcy5pc3ViKG51bSk7XG4gICAgICB0aGlzLm5lZ2F0aXZlIF49IDE7XG4gICAgICByZXR1cm4gdGhpcy5fbm9ybVNpZ24oKTtcblxuICAgIC8vIHBvc2l0aXZlICsgbmVnYXRpdmVcbiAgICB9IGVsc2UgaWYgKHRoaXMubmVnYXRpdmUgPT09IDAgJiYgbnVtLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICBudW0ubmVnYXRpdmUgPSAwO1xuICAgICAgciA9IHRoaXMuaXN1YihudW0pO1xuICAgICAgbnVtLm5lZ2F0aXZlID0gMTtcbiAgICAgIHJldHVybiByLl9ub3JtU2lnbigpO1xuICAgIH1cblxuICAgIC8vIGEubGVuZ3RoID4gYi5sZW5ndGhcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAodGhpcy5sZW5ndGggPiBudW0ubGVuZ3RoKSB7XG4gICAgICBhID0gdGhpcztcbiAgICAgIGIgPSBudW07XG4gICAgfSBlbHNlIHtcbiAgICAgIGEgPSBudW07XG4gICAgICBiID0gdGhpcztcbiAgICB9XG5cbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuICAgICAgciA9IChhLndvcmRzW2ldIHwgMCkgKyAoYi53b3Jkc1tpXSB8IDApICsgY2Fycnk7XG4gICAgICB0aGlzLndvcmRzW2ldID0gciAmIDB4M2ZmZmZmZjtcbiAgICAgIGNhcnJ5ID0gciA+Pj4gMjY7XG4gICAgfVxuICAgIGZvciAoOyBjYXJyeSAhPT0gMCAmJiBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgciA9IChhLndvcmRzW2ldIHwgMCkgKyBjYXJyeTtcbiAgICAgIHRoaXMud29yZHNbaV0gPSByICYgMHgzZmZmZmZmO1xuICAgICAgY2FycnkgPSByID4+PiAyNjtcbiAgICB9XG5cbiAgICB0aGlzLmxlbmd0aCA9IGEubGVuZ3RoO1xuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aF0gPSBjYXJyeTtcbiAgICAgIHRoaXMubGVuZ3RoKys7XG4gICAgLy8gQ29weSB0aGUgcmVzdCBvZiB0aGUgd29yZHNcbiAgICB9IGVsc2UgaWYgKGEgIT09IHRoaXMpIHtcbiAgICAgIGZvciAoOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gYS53b3Jkc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvLyBBZGQgYG51bWAgdG8gYHRoaXNgXG4gIEJOLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiBhZGQgKG51bSkge1xuICAgIHZhciByZXM7XG4gICAgaWYgKG51bS5uZWdhdGl2ZSAhPT0gMCAmJiB0aGlzLm5lZ2F0aXZlID09PSAwKSB7XG4gICAgICBudW0ubmVnYXRpdmUgPSAwO1xuICAgICAgcmVzID0gdGhpcy5zdWIobnVtKTtcbiAgICAgIG51bS5uZWdhdGl2ZSBePSAxO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGVsc2UgaWYgKG51bS5uZWdhdGl2ZSA9PT0gMCAmJiB0aGlzLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMDtcbiAgICAgIHJlcyA9IG51bS5zdWIodGhpcyk7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIHRoaXMuY2xvbmUoKS5pYWRkKG51bSk7XG5cbiAgICByZXR1cm4gbnVtLmNsb25lKCkuaWFkZCh0aGlzKTtcbiAgfTtcblxuICAvLyBTdWJ0cmFjdCBgbnVtYCBmcm9tIGB0aGlzYCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaXN1YiA9IGZ1bmN0aW9uIGlzdWIgKG51bSkge1xuICAgIC8vIHRoaXMgLSAoLW51bSkgPSB0aGlzICsgbnVtXG4gICAgaWYgKG51bS5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgbnVtLm5lZ2F0aXZlID0gMDtcbiAgICAgIHZhciByID0gdGhpcy5pYWRkKG51bSk7XG4gICAgICBudW0ubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHIuX25vcm1TaWduKCk7XG5cbiAgICAvLyAtdGhpcyAtIG51bSA9IC0odGhpcyArIG51bSlcbiAgICB9IGVsc2UgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAwO1xuICAgICAgdGhpcy5pYWRkKG51bSk7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICAgIHJldHVybiB0aGlzLl9ub3JtU2lnbigpO1xuICAgIH1cblxuICAgIC8vIEF0IHRoaXMgcG9pbnQgYm90aCBudW1iZXJzIGFyZSBwb3NpdGl2ZVxuICAgIHZhciBjbXAgPSB0aGlzLmNtcChudW0pO1xuXG4gICAgLy8gT3B0aW1pemF0aW9uIC0gemVyb2lmeVxuICAgIGlmIChjbXAgPT09IDApIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAwO1xuICAgICAgdGhpcy5sZW5ndGggPSAxO1xuICAgICAgdGhpcy53b3Jkc1swXSA9IDA7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvLyBhID4gYlxuICAgIHZhciBhLCBiO1xuICAgIGlmIChjbXAgPiAwKSB7XG4gICAgICBhID0gdGhpcztcbiAgICAgIGIgPSBudW07XG4gICAgfSBlbHNlIHtcbiAgICAgIGEgPSBudW07XG4gICAgICBiID0gdGhpcztcbiAgICB9XG5cbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuICAgICAgciA9IChhLndvcmRzW2ldIHwgMCkgLSAoYi53b3Jkc1tpXSB8IDApICsgY2Fycnk7XG4gICAgICBjYXJyeSA9IHIgPj4gMjY7XG4gICAgICB0aGlzLndvcmRzW2ldID0gciAmIDB4M2ZmZmZmZjtcbiAgICB9XG4gICAgZm9yICg7IGNhcnJ5ICE9PSAwICYmIGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICByID0gKGEud29yZHNbaV0gfCAwKSArIGNhcnJ5O1xuICAgICAgY2FycnkgPSByID4+IDI2O1xuICAgICAgdGhpcy53b3Jkc1tpXSA9IHIgJiAweDNmZmZmZmY7XG4gICAgfVxuXG4gICAgLy8gQ29weSByZXN0IG9mIHRoZSB3b3Jkc1xuICAgIGlmIChjYXJyeSA9PT0gMCAmJiBpIDwgYS5sZW5ndGggJiYgYSAhPT0gdGhpcykge1xuICAgICAgZm9yICg7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMud29yZHNbaV0gPSBhLndvcmRzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubGVuZ3RoID0gTWF0aC5tYXgodGhpcy5sZW5ndGgsIGkpO1xuXG4gICAgaWYgKGEgIT09IHRoaXMpIHtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnN0cmlwKCk7XG4gIH07XG5cbiAgLy8gU3VidHJhY3QgYG51bWAgZnJvbSBgdGhpc2BcbiAgQk4ucHJvdG90eXBlLnN1YiA9IGZ1bmN0aW9uIHN1YiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pc3ViKG51bSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gc21hbGxNdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHtcbiAgICBvdXQubmVnYXRpdmUgPSBudW0ubmVnYXRpdmUgXiBzZWxmLm5lZ2F0aXZlO1xuICAgIHZhciBsZW4gPSAoc2VsZi5sZW5ndGggKyBudW0ubGVuZ3RoKSB8IDA7XG4gICAgb3V0Lmxlbmd0aCA9IGxlbjtcbiAgICBsZW4gPSAobGVuIC0gMSkgfCAwO1xuXG4gICAgLy8gUGVlbCBvbmUgaXRlcmF0aW9uIChjb21waWxlciBjYW4ndCBkbyBpdCwgYmVjYXVzZSBvZiBjb2RlIGNvbXBsZXhpdHkpXG4gICAgdmFyIGEgPSBzZWxmLndvcmRzWzBdIHwgMDtcbiAgICB2YXIgYiA9IG51bS53b3Jkc1swXSB8IDA7XG4gICAgdmFyIHIgPSBhICogYjtcblxuICAgIHZhciBsbyA9IHIgJiAweDNmZmZmZmY7XG4gICAgdmFyIGNhcnJ5ID0gKHIgLyAweDQwMDAwMDApIHwgMDtcbiAgICBvdXQud29yZHNbMF0gPSBsbztcblxuICAgIGZvciAodmFyIGsgPSAxOyBrIDwgbGVuOyBrKyspIHtcbiAgICAgIC8vIFN1bSBhbGwgd29yZHMgd2l0aCB0aGUgc2FtZSBgaSArIGogPSBrYCBhbmQgYWNjdW11bGF0ZSBgbmNhcnJ5YCxcbiAgICAgIC8vIG5vdGUgdGhhdCBuY2FycnkgY291bGQgYmUgPj0gMHgzZmZmZmZmXG4gICAgICB2YXIgbmNhcnJ5ID0gY2FycnkgPj4+IDI2O1xuICAgICAgdmFyIHJ3b3JkID0gY2FycnkgJiAweDNmZmZmZmY7XG4gICAgICB2YXIgbWF4SiA9IE1hdGgubWluKGssIG51bS5sZW5ndGggLSAxKTtcbiAgICAgIGZvciAodmFyIGogPSBNYXRoLm1heCgwLCBrIC0gc2VsZi5sZW5ndGggKyAxKTsgaiA8PSBtYXhKOyBqKyspIHtcbiAgICAgICAgdmFyIGkgPSAoayAtIGopIHwgMDtcbiAgICAgICAgYSA9IHNlbGYud29yZHNbaV0gfCAwO1xuICAgICAgICBiID0gbnVtLndvcmRzW2pdIHwgMDtcbiAgICAgICAgciA9IGEgKiBiICsgcndvcmQ7XG4gICAgICAgIG5jYXJyeSArPSAociAvIDB4NDAwMDAwMCkgfCAwO1xuICAgICAgICByd29yZCA9IHIgJiAweDNmZmZmZmY7XG4gICAgICB9XG4gICAgICBvdXQud29yZHNba10gPSByd29yZCB8IDA7XG4gICAgICBjYXJyeSA9IG5jYXJyeSB8IDA7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgb3V0LndvcmRzW2tdID0gY2FycnkgfCAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQubGVuZ3RoLS07XG4gICAgfVxuXG4gICAgcmV0dXJuIG91dC5zdHJpcCgpO1xuICB9XG5cbiAgLy8gVE9ETyhpbmR1dG55KTogaXQgbWF5IGJlIHJlYXNvbmFibGUgdG8gb21pdCBpdCBmb3IgdXNlcnMgd2hvIGRvbid0IG5lZWRcbiAgLy8gdG8gd29yayB3aXRoIDI1Ni1iaXQgbnVtYmVycywgb3RoZXJ3aXNlIGl0IGdpdmVzIDIwJSBpbXByb3ZlbWVudCBmb3IgMjU2LWJpdFxuICAvLyBtdWx0aXBsaWNhdGlvbiAobGlrZSBlbGxpcHRpYyBzZWNwMjU2azEpLlxuICB2YXIgY29tYjEwTXVsVG8gPSBmdW5jdGlvbiBjb21iMTBNdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHtcbiAgICB2YXIgYSA9IHNlbGYud29yZHM7XG4gICAgdmFyIGIgPSBudW0ud29yZHM7XG4gICAgdmFyIG8gPSBvdXQud29yZHM7XG4gICAgdmFyIGMgPSAwO1xuICAgIHZhciBsbztcbiAgICB2YXIgbWlkO1xuICAgIHZhciBoaTtcbiAgICB2YXIgYTAgPSBhWzBdIHwgMDtcbiAgICB2YXIgYWwwID0gYTAgJiAweDFmZmY7XG4gICAgdmFyIGFoMCA9IGEwID4+PiAxMztcbiAgICB2YXIgYTEgPSBhWzFdIHwgMDtcbiAgICB2YXIgYWwxID0gYTEgJiAweDFmZmY7XG4gICAgdmFyIGFoMSA9IGExID4+PiAxMztcbiAgICB2YXIgYTIgPSBhWzJdIHwgMDtcbiAgICB2YXIgYWwyID0gYTIgJiAweDFmZmY7XG4gICAgdmFyIGFoMiA9IGEyID4+PiAxMztcbiAgICB2YXIgYTMgPSBhWzNdIHwgMDtcbiAgICB2YXIgYWwzID0gYTMgJiAweDFmZmY7XG4gICAgdmFyIGFoMyA9IGEzID4+PiAxMztcbiAgICB2YXIgYTQgPSBhWzRdIHwgMDtcbiAgICB2YXIgYWw0ID0gYTQgJiAweDFmZmY7XG4gICAgdmFyIGFoNCA9IGE0ID4+PiAxMztcbiAgICB2YXIgYTUgPSBhWzVdIHwgMDtcbiAgICB2YXIgYWw1ID0gYTUgJiAweDFmZmY7XG4gICAgdmFyIGFoNSA9IGE1ID4+PiAxMztcbiAgICB2YXIgYTYgPSBhWzZdIHwgMDtcbiAgICB2YXIgYWw2ID0gYTYgJiAweDFmZmY7XG4gICAgdmFyIGFoNiA9IGE2ID4+PiAxMztcbiAgICB2YXIgYTcgPSBhWzddIHwgMDtcbiAgICB2YXIgYWw3ID0gYTcgJiAweDFmZmY7XG4gICAgdmFyIGFoNyA9IGE3ID4+PiAxMztcbiAgICB2YXIgYTggPSBhWzhdIHwgMDtcbiAgICB2YXIgYWw4ID0gYTggJiAweDFmZmY7XG4gICAgdmFyIGFoOCA9IGE4ID4+PiAxMztcbiAgICB2YXIgYTkgPSBhWzldIHwgMDtcbiAgICB2YXIgYWw5ID0gYTkgJiAweDFmZmY7XG4gICAgdmFyIGFoOSA9IGE5ID4+PiAxMztcbiAgICB2YXIgYjAgPSBiWzBdIHwgMDtcbiAgICB2YXIgYmwwID0gYjAgJiAweDFmZmY7XG4gICAgdmFyIGJoMCA9IGIwID4+PiAxMztcbiAgICB2YXIgYjEgPSBiWzFdIHwgMDtcbiAgICB2YXIgYmwxID0gYjEgJiAweDFmZmY7XG4gICAgdmFyIGJoMSA9IGIxID4+PiAxMztcbiAgICB2YXIgYjIgPSBiWzJdIHwgMDtcbiAgICB2YXIgYmwyID0gYjIgJiAweDFmZmY7XG4gICAgdmFyIGJoMiA9IGIyID4+PiAxMztcbiAgICB2YXIgYjMgPSBiWzNdIHwgMDtcbiAgICB2YXIgYmwzID0gYjMgJiAweDFmZmY7XG4gICAgdmFyIGJoMyA9IGIzID4+PiAxMztcbiAgICB2YXIgYjQgPSBiWzRdIHwgMDtcbiAgICB2YXIgYmw0ID0gYjQgJiAweDFmZmY7XG4gICAgdmFyIGJoNCA9IGI0ID4+PiAxMztcbiAgICB2YXIgYjUgPSBiWzVdIHwgMDtcbiAgICB2YXIgYmw1ID0gYjUgJiAweDFmZmY7XG4gICAgdmFyIGJoNSA9IGI1ID4+PiAxMztcbiAgICB2YXIgYjYgPSBiWzZdIHwgMDtcbiAgICB2YXIgYmw2ID0gYjYgJiAweDFmZmY7XG4gICAgdmFyIGJoNiA9IGI2ID4+PiAxMztcbiAgICB2YXIgYjcgPSBiWzddIHwgMDtcbiAgICB2YXIgYmw3ID0gYjcgJiAweDFmZmY7XG4gICAgdmFyIGJoNyA9IGI3ID4+PiAxMztcbiAgICB2YXIgYjggPSBiWzhdIHwgMDtcbiAgICB2YXIgYmw4ID0gYjggJiAweDFmZmY7XG4gICAgdmFyIGJoOCA9IGI4ID4+PiAxMztcbiAgICB2YXIgYjkgPSBiWzldIHwgMDtcbiAgICB2YXIgYmw5ID0gYjkgJiAweDFmZmY7XG4gICAgdmFyIGJoOSA9IGI5ID4+PiAxMztcblxuICAgIG91dC5uZWdhdGl2ZSA9IHNlbGYubmVnYXRpdmUgXiBudW0ubmVnYXRpdmU7XG4gICAgb3V0Lmxlbmd0aCA9IDE5O1xuICAgIC8qIGsgPSAwICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWwwLCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDAsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDAsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDAsIGJoMCk7XG4gICAgdmFyIHcwID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MCA+Pj4gMjYpKSB8IDA7XG4gICAgdzAgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWwxLCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDEsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDEsIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmgxKSkgfCAwO1xuICAgIHZhciB3MSA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzEgPj4+IDI2KSkgfCAwO1xuICAgIHcxICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gMiAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsMiwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWwyLCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgyLCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWgyLCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDIpKSB8IDA7XG4gICAgdmFyIHcyID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MiA+Pj4gMjYpKSB8IDA7XG4gICAgdzIgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAzICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWwzLCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDMsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDMsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDMsIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwyLCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDIsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMiwgYmgxKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDMpKSB8IDA7XG4gICAgdmFyIHczID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MyA+Pj4gMjYpKSB8IDA7XG4gICAgdzMgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSA0ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw0LCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDQsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDQsIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmgxKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg0KSkgfCAwO1xuICAgIHZhciB3NCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzQgPj4+IDI2KSkgfCAwO1xuICAgIHc0ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gNSAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsNSwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw1LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg1LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg1LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNCwgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw0LCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDQsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDMsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMywgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgzLCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwyLCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDIsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMiwgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDUpKSB8IDA7XG4gICAgdmFyIHc1ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3NSA+Pj4gMjYpKSB8IDA7XG4gICAgdzUgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSA2ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw2LCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDYsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDYsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDYsIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw1LCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDUsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNSwgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNSwgYmgxKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNCwgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw0LCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDQsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDMsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMywgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgzLCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwyLCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDIsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMiwgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDYpKSB8IDA7XG4gICAgdmFyIHc2ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3NiA+Pj4gMjYpKSB8IDA7XG4gICAgdzYgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSA3ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw3LCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDcsIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDcsIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDcsIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmgxKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwwLCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDAsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMCwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMCwgYmg3KSkgfCAwO1xuICAgIHZhciB3NyA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzcgPj4+IDI2KSkgfCAwO1xuICAgIHc3ICY9IDB4M2ZmZmZmZjtcbiAgICAvKiBrID0gOCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOCwgYmwwKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw4LCBiaDApO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg4LCBibDApKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg4LCBiaDApO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNywgYmwxKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw3LCBiaDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDcsIGJsMSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDcsIGJoMSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDYsIGJsMikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNiwgYmgyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg2LCBibDIpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg2LCBiaDIpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw1LCBibDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDUsIGJoMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNSwgYmwzKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNSwgYmgzKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNCwgYmw0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw0LCBiaDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsNCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDQsIGJoNCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDMsIGJsNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMywgYmg1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDUpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgzLCBiaDUpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwyLCBibDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDIsIGJoNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmw2KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMiwgYmg2KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmw3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsNykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoNykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmg4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDgpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDgpKSB8IDA7XG4gICAgdmFyIHc4ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3OCA+Pj4gMjYpKSB8IDA7XG4gICAgdzggJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSA5ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDApO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoMCk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDksIGJsMCkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoMCk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw4LCBibDEpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDgsIGJoMSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOCwgYmwxKSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoOCwgYmgxKSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNywgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw3LCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDcsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDcsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDYsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNiwgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg2LCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg2LCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw1LCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDUsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNSwgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNSwgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNCwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw0LCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDQsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDMsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMywgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgzLCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwyLCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDIsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMiwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMiwgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMSwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwxLCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDEsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDEsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDAsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMCwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgwLCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgwLCBiaDkpKSB8IDA7XG4gICAgdmFyIHc5ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3OSA+Pj4gMjYpKSB8IDA7XG4gICAgdzkgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxMCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmwxKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDEpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDEpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDEpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmwyKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDIpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsMikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoMikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsMykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmgzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDMpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDMpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDEsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMSwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgxLCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgxLCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxMCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzEwID4+PiAyNikpIHwgMDtcbiAgICB3MTAgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxMSAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmwyKTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDIpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDIpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDIpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmwzKSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDMpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsMykpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoMykpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg0KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDQpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDQpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoNSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw1KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg1KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsNikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoNikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDcpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDcpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWwzLCBibDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDMsIGJoOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoMywgYmw4KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoMywgYmg4KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsMiwgYmw5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWwyLCBiaDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDIsIGJsOSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDIsIGJoOSkpIHwgMDtcbiAgICB2YXIgdzExID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MTEgPj4+IDI2KSkgfCAwO1xuICAgIHcxMSAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDEyICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDMpO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoMyk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDksIGJsMykpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoMyk7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw4LCBibDQpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDgsIGJoNCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOCwgYmw0KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoOCwgYmg0KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNywgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw3LCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDcsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDcsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDYsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNiwgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg2LCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg2LCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw1LCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDUsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNSwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNSwgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNCwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw0LCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDQsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDQsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDMsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsMywgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWgzLCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWgzLCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxMiA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzEyID4+PiAyNikpIHwgMDtcbiAgICB3MTIgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxMyAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw0KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDQpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDQpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDQpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw1KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDUpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsNSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoNSkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsNikpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDYpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDYpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDQsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNCwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg0LCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg0LCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxMyA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzEzID4+PiAyNikpIHwgMDtcbiAgICB3MTMgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxNCAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw1KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDUpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDUpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDUpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw2KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDYpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsNikpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoNikpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg3KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDcpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDcpKSB8IDA7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw2LCBibDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDYsIGJoOCkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoNiwgYmw4KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoNiwgYmg4KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNSwgYmw5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw1LCBiaDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDUsIGJsOSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDUsIGJoOSkpIHwgMDtcbiAgICB2YXIgdzE0ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MTQgPj4+IDI2KSkgfCAwO1xuICAgIHcxNCAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDE1ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDYpO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoNik7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDksIGJsNikpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoNik7XG4gICAgbG8gPSAobG8gKyBNYXRoLmltdWwoYWw4LCBibDcpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhbDgsIGJoNykpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFoOCwgYmw3KSkgfCAwO1xuICAgIGhpID0gKGhpICsgTWF0aC5pbXVsKGFoOCwgYmg3KSkgfCAwO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsNywgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw3LCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDcsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDcsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDYsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNiwgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg2LCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg2LCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxNSA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzE1ID4+PiAyNikpIHwgMDtcbiAgICB3MTUgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxNiAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw3KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDcpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDcpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDcpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw4KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDgpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsOCkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoOCkpIHwgMDtcbiAgICBsbyA9IChsbyArIE1hdGguaW11bChhbDcsIGJsOSkpIHwgMDtcbiAgICBtaWQgPSAobWlkICsgTWF0aC5pbXVsKGFsNywgYmg5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg3LCBibDkpKSB8IDA7XG4gICAgaGkgPSAoaGkgKyBNYXRoLmltdWwoYWg3LCBiaDkpKSB8IDA7XG4gICAgdmFyIHcxNiA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzE2ID4+PiAyNikpIHwgMDtcbiAgICB3MTYgJj0gMHgzZmZmZmZmO1xuICAgIC8qIGsgPSAxNyAqL1xuICAgIGxvID0gTWF0aC5pbXVsKGFsOSwgYmw4KTtcbiAgICBtaWQgPSBNYXRoLmltdWwoYWw5LCBiaDgpO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWg5LCBibDgpKSB8IDA7XG4gICAgaGkgPSBNYXRoLmltdWwoYWg5LCBiaDgpO1xuICAgIGxvID0gKGxvICsgTWF0aC5pbXVsKGFsOCwgYmw5KSkgfCAwO1xuICAgIG1pZCA9IChtaWQgKyBNYXRoLmltdWwoYWw4LCBiaDkpKSB8IDA7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDgsIGJsOSkpIHwgMDtcbiAgICBoaSA9IChoaSArIE1hdGguaW11bChhaDgsIGJoOSkpIHwgMDtcbiAgICB2YXIgdzE3ID0gKCgoYyArIGxvKSB8IDApICsgKChtaWQgJiAweDFmZmYpIDw8IDEzKSkgfCAwO1xuICAgIGMgPSAoKChoaSArIChtaWQgPj4+IDEzKSkgfCAwKSArICh3MTcgPj4+IDI2KSkgfCAwO1xuICAgIHcxNyAmPSAweDNmZmZmZmY7XG4gICAgLyogayA9IDE4ICovXG4gICAgbG8gPSBNYXRoLmltdWwoYWw5LCBibDkpO1xuICAgIG1pZCA9IE1hdGguaW11bChhbDksIGJoOSk7XG4gICAgbWlkID0gKG1pZCArIE1hdGguaW11bChhaDksIGJsOSkpIHwgMDtcbiAgICBoaSA9IE1hdGguaW11bChhaDksIGJoOSk7XG4gICAgdmFyIHcxOCA9ICgoKGMgKyBsbykgfCAwKSArICgobWlkICYgMHgxZmZmKSA8PCAxMykpIHwgMDtcbiAgICBjID0gKCgoaGkgKyAobWlkID4+PiAxMykpIHwgMCkgKyAodzE4ID4+PiAyNikpIHwgMDtcbiAgICB3MTggJj0gMHgzZmZmZmZmO1xuICAgIG9bMF0gPSB3MDtcbiAgICBvWzFdID0gdzE7XG4gICAgb1syXSA9IHcyO1xuICAgIG9bM10gPSB3MztcbiAgICBvWzRdID0gdzQ7XG4gICAgb1s1XSA9IHc1O1xuICAgIG9bNl0gPSB3NjtcbiAgICBvWzddID0gdzc7XG4gICAgb1s4XSA9IHc4O1xuICAgIG9bOV0gPSB3OTtcbiAgICBvWzEwXSA9IHcxMDtcbiAgICBvWzExXSA9IHcxMTtcbiAgICBvWzEyXSA9IHcxMjtcbiAgICBvWzEzXSA9IHcxMztcbiAgICBvWzE0XSA9IHcxNDtcbiAgICBvWzE1XSA9IHcxNTtcbiAgICBvWzE2XSA9IHcxNjtcbiAgICBvWzE3XSA9IHcxNztcbiAgICBvWzE4XSA9IHcxODtcbiAgICBpZiAoYyAhPT0gMCkge1xuICAgICAgb1sxOV0gPSBjO1xuICAgICAgb3V0Lmxlbmd0aCsrO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xuICB9O1xuXG4gIC8vIFBvbHlmaWxsIGNvbWJcbiAgaWYgKCFNYXRoLmltdWwpIHtcbiAgICBjb21iMTBNdWxUbyA9IHNtYWxsTXVsVG87XG4gIH1cblxuICBmdW5jdGlvbiBiaWdNdWxUbyAoc2VsZiwgbnVtLCBvdXQpIHtcbiAgICBvdXQubmVnYXRpdmUgPSBudW0ubmVnYXRpdmUgXiBzZWxmLm5lZ2F0aXZlO1xuICAgIG91dC5sZW5ndGggPSBzZWxmLmxlbmd0aCArIG51bS5sZW5ndGg7XG5cbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIHZhciBobmNhcnJ5ID0gMDtcbiAgICBmb3IgKHZhciBrID0gMDsgayA8IG91dC5sZW5ndGggLSAxOyBrKyspIHtcbiAgICAgIC8vIFN1bSBhbGwgd29yZHMgd2l0aCB0aGUgc2FtZSBgaSArIGogPSBrYCBhbmQgYWNjdW11bGF0ZSBgbmNhcnJ5YCxcbiAgICAgIC8vIG5vdGUgdGhhdCBuY2FycnkgY291bGQgYmUgPj0gMHgzZmZmZmZmXG4gICAgICB2YXIgbmNhcnJ5ID0gaG5jYXJyeTtcbiAgICAgIGhuY2FycnkgPSAwO1xuICAgICAgdmFyIHJ3b3JkID0gY2FycnkgJiAweDNmZmZmZmY7XG4gICAgICB2YXIgbWF4SiA9IE1hdGgubWluKGssIG51bS5sZW5ndGggLSAxKTtcbiAgICAgIGZvciAodmFyIGogPSBNYXRoLm1heCgwLCBrIC0gc2VsZi5sZW5ndGggKyAxKTsgaiA8PSBtYXhKOyBqKyspIHtcbiAgICAgICAgdmFyIGkgPSBrIC0gajtcbiAgICAgICAgdmFyIGEgPSBzZWxmLndvcmRzW2ldIHwgMDtcbiAgICAgICAgdmFyIGIgPSBudW0ud29yZHNbal0gfCAwO1xuICAgICAgICB2YXIgciA9IGEgKiBiO1xuXG4gICAgICAgIHZhciBsbyA9IHIgJiAweDNmZmZmZmY7XG4gICAgICAgIG5jYXJyeSA9IChuY2FycnkgKyAoKHIgLyAweDQwMDAwMDApIHwgMCkpIHwgMDtcbiAgICAgICAgbG8gPSAobG8gKyByd29yZCkgfCAwO1xuICAgICAgICByd29yZCA9IGxvICYgMHgzZmZmZmZmO1xuICAgICAgICBuY2FycnkgPSAobmNhcnJ5ICsgKGxvID4+PiAyNikpIHwgMDtcblxuICAgICAgICBobmNhcnJ5ICs9IG5jYXJyeSA+Pj4gMjY7XG4gICAgICAgIG5jYXJyeSAmPSAweDNmZmZmZmY7XG4gICAgICB9XG4gICAgICBvdXQud29yZHNba10gPSByd29yZDtcbiAgICAgIGNhcnJ5ID0gbmNhcnJ5O1xuICAgICAgbmNhcnJ5ID0gaG5jYXJyeTtcbiAgICB9XG4gICAgaWYgKGNhcnJ5ICE9PSAwKSB7XG4gICAgICBvdXQud29yZHNba10gPSBjYXJyeTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0Lmxlbmd0aC0tO1xuICAgIH1cblxuICAgIHJldHVybiBvdXQuc3RyaXAoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGp1bWJvTXVsVG8gKHNlbGYsIG51bSwgb3V0KSB7XG4gICAgdmFyIGZmdG0gPSBuZXcgRkZUTSgpO1xuICAgIHJldHVybiBmZnRtLm11bHAoc2VsZiwgbnVtLCBvdXQpO1xuICB9XG5cbiAgQk4ucHJvdG90eXBlLm11bFRvID0gZnVuY3Rpb24gbXVsVG8gKG51bSwgb3V0KSB7XG4gICAgdmFyIHJlcztcbiAgICB2YXIgbGVuID0gdGhpcy5sZW5ndGggKyBudW0ubGVuZ3RoO1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMTAgJiYgbnVtLmxlbmd0aCA9PT0gMTApIHtcbiAgICAgIHJlcyA9IGNvbWIxME11bFRvKHRoaXMsIG51bSwgb3V0KTtcbiAgICB9IGVsc2UgaWYgKGxlbiA8IDYzKSB7XG4gICAgICByZXMgPSBzbWFsbE11bFRvKHRoaXMsIG51bSwgb3V0KTtcbiAgICB9IGVsc2UgaWYgKGxlbiA8IDEwMjQpIHtcbiAgICAgIHJlcyA9IGJpZ011bFRvKHRoaXMsIG51bSwgb3V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzID0ganVtYm9NdWxUbyh0aGlzLCBudW0sIG91dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICAvLyBDb29sZXktVHVrZXkgYWxnb3JpdGhtIGZvciBGRlRcbiAgLy8gc2xpZ2h0bHkgcmV2aXNpdGVkIHRvIHJlbHkgb24gbG9vcGluZyBpbnN0ZWFkIG9mIHJlY3Vyc2lvblxuXG4gIGZ1bmN0aW9uIEZGVE0gKHgsIHkpIHtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gIH1cblxuICBGRlRNLnByb3RvdHlwZS5tYWtlUkJUID0gZnVuY3Rpb24gbWFrZVJCVCAoTikge1xuICAgIHZhciB0ID0gbmV3IEFycmF5KE4pO1xuICAgIHZhciBsID0gQk4ucHJvdG90eXBlLl9jb3VudEJpdHMoTikgLSAxO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTjsgaSsrKSB7XG4gICAgICB0W2ldID0gdGhpcy5yZXZCaW4oaSwgbCwgTik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHQ7XG4gIH07XG5cbiAgLy8gUmV0dXJucyBiaW5hcnktcmV2ZXJzZWQgcmVwcmVzZW50YXRpb24gb2YgYHhgXG4gIEZGVE0ucHJvdG90eXBlLnJldkJpbiA9IGZ1bmN0aW9uIHJldkJpbiAoeCwgbCwgTikge1xuICAgIGlmICh4ID09PSAwIHx8IHggPT09IE4gLSAxKSByZXR1cm4geDtcblxuICAgIHZhciByYiA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICAgIHJiIHw9ICh4ICYgMSkgPDwgKGwgLSBpIC0gMSk7XG4gICAgICB4ID4+PSAxO1xuICAgIH1cblxuICAgIHJldHVybiByYjtcbiAgfTtcblxuICAvLyBQZXJmb3JtcyBcInR3ZWVkbGluZ1wiIHBoYXNlLCB0aGVyZWZvcmUgJ2VtdWxhdGluZydcbiAgLy8gYmVoYXZpb3VyIG9mIHRoZSByZWN1cnNpdmUgYWxnb3JpdGhtXG4gIEZGVE0ucHJvdG90eXBlLnBlcm11dGUgPSBmdW5jdGlvbiBwZXJtdXRlIChyYnQsIHJ3cywgaXdzLCBydHdzLCBpdHdzLCBOKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHtcbiAgICAgIHJ0d3NbaV0gPSByd3NbcmJ0W2ldXTtcbiAgICAgIGl0d3NbaV0gPSBpd3NbcmJ0W2ldXTtcbiAgICB9XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUudHJhbnNmb3JtID0gZnVuY3Rpb24gdHJhbnNmb3JtIChyd3MsIGl3cywgcnR3cywgaXR3cywgTiwgcmJ0KSB7XG4gICAgdGhpcy5wZXJtdXRlKHJidCwgcndzLCBpd3MsIHJ0d3MsIGl0d3MsIE4pO1xuXG4gICAgZm9yICh2YXIgcyA9IDE7IHMgPCBOOyBzIDw8PSAxKSB7XG4gICAgICB2YXIgbCA9IHMgPDwgMTtcblxuICAgICAgdmFyIHJ0d2RmID0gTWF0aC5jb3MoMiAqIE1hdGguUEkgLyBsKTtcbiAgICAgIHZhciBpdHdkZiA9IE1hdGguc2luKDIgKiBNYXRoLlBJIC8gbCk7XG5cbiAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgTjsgcCArPSBsKSB7XG4gICAgICAgIHZhciBydHdkZl8gPSBydHdkZjtcbiAgICAgICAgdmFyIGl0d2RmXyA9IGl0d2RmO1xuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgczsgaisrKSB7XG4gICAgICAgICAgdmFyIHJlID0gcnR3c1twICsgal07XG4gICAgICAgICAgdmFyIGllID0gaXR3c1twICsgal07XG5cbiAgICAgICAgICB2YXIgcm8gPSBydHdzW3AgKyBqICsgc107XG4gICAgICAgICAgdmFyIGlvID0gaXR3c1twICsgaiArIHNdO1xuXG4gICAgICAgICAgdmFyIHJ4ID0gcnR3ZGZfICogcm8gLSBpdHdkZl8gKiBpbztcblxuICAgICAgICAgIGlvID0gcnR3ZGZfICogaW8gKyBpdHdkZl8gKiBybztcbiAgICAgICAgICBybyA9IHJ4O1xuXG4gICAgICAgICAgcnR3c1twICsgal0gPSByZSArIHJvO1xuICAgICAgICAgIGl0d3NbcCArIGpdID0gaWUgKyBpbztcblxuICAgICAgICAgIHJ0d3NbcCArIGogKyBzXSA9IHJlIC0gcm87XG4gICAgICAgICAgaXR3c1twICsgaiArIHNdID0gaWUgLSBpbztcblxuICAgICAgICAgIC8qIGpzaGludCBtYXhkZXB0aCA6IGZhbHNlICovXG4gICAgICAgICAgaWYgKGogIT09IGwpIHtcbiAgICAgICAgICAgIHJ4ID0gcnR3ZGYgKiBydHdkZl8gLSBpdHdkZiAqIGl0d2RmXztcblxuICAgICAgICAgICAgaXR3ZGZfID0gcnR3ZGYgKiBpdHdkZl8gKyBpdHdkZiAqIHJ0d2RmXztcbiAgICAgICAgICAgIHJ0d2RmXyA9IHJ4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBGRlRNLnByb3RvdHlwZS5ndWVzc0xlbjEzYiA9IGZ1bmN0aW9uIGd1ZXNzTGVuMTNiIChuLCBtKSB7XG4gICAgdmFyIE4gPSBNYXRoLm1heChtLCBuKSB8IDE7XG4gICAgdmFyIG9kZCA9IE4gJiAxO1xuICAgIHZhciBpID0gMDtcbiAgICBmb3IgKE4gPSBOIC8gMiB8IDA7IE47IE4gPSBOID4+PiAxKSB7XG4gICAgICBpKys7XG4gICAgfVxuXG4gICAgcmV0dXJuIDEgPDwgaSArIDEgKyBvZGQ7XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUuY29uanVnYXRlID0gZnVuY3Rpb24gY29uanVnYXRlIChyd3MsIGl3cywgTikge1xuICAgIGlmIChOIDw9IDEpIHJldHVybjtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTiAvIDI7IGkrKykge1xuICAgICAgdmFyIHQgPSByd3NbaV07XG5cbiAgICAgIHJ3c1tpXSA9IHJ3c1tOIC0gaSAtIDFdO1xuICAgICAgcndzW04gLSBpIC0gMV0gPSB0O1xuXG4gICAgICB0ID0gaXdzW2ldO1xuXG4gICAgICBpd3NbaV0gPSAtaXdzW04gLSBpIC0gMV07XG4gICAgICBpd3NbTiAtIGkgLSAxXSA9IC10O1xuICAgIH1cbiAgfTtcblxuICBGRlRNLnByb3RvdHlwZS5ub3JtYWxpemUxM2IgPSBmdW5jdGlvbiBub3JtYWxpemUxM2IgKHdzLCBOKSB7XG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IE4gLyAyOyBpKyspIHtcbiAgICAgIHZhciB3ID0gTWF0aC5yb3VuZCh3c1syICogaSArIDFdIC8gTikgKiAweDIwMDAgK1xuICAgICAgICBNYXRoLnJvdW5kKHdzWzIgKiBpXSAvIE4pICtcbiAgICAgICAgY2Fycnk7XG5cbiAgICAgIHdzW2ldID0gdyAmIDB4M2ZmZmZmZjtcblxuICAgICAgaWYgKHcgPCAweDQwMDAwMDApIHtcbiAgICAgICAgY2FycnkgPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FycnkgPSB3IC8gMHg0MDAwMDAwIHwgMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gd3M7XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUuY29udmVydDEzYiA9IGZ1bmN0aW9uIGNvbnZlcnQxM2IgKHdzLCBsZW4sIHJ3cywgTikge1xuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgY2FycnkgPSBjYXJyeSArICh3c1tpXSB8IDApO1xuXG4gICAgICByd3NbMiAqIGldID0gY2FycnkgJiAweDFmZmY7IGNhcnJ5ID0gY2FycnkgPj4+IDEzO1xuICAgICAgcndzWzIgKiBpICsgMV0gPSBjYXJyeSAmIDB4MWZmZjsgY2FycnkgPSBjYXJyeSA+Pj4gMTM7XG4gICAgfVxuXG4gICAgLy8gUGFkIHdpdGggemVyb2VzXG4gICAgZm9yIChpID0gMiAqIGxlbjsgaSA8IE47ICsraSkge1xuICAgICAgcndzW2ldID0gMDtcbiAgICB9XG5cbiAgICBhc3NlcnQoY2FycnkgPT09IDApO1xuICAgIGFzc2VydCgoY2FycnkgJiB+MHgxZmZmKSA9PT0gMCk7XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUuc3R1YiA9IGZ1bmN0aW9uIHN0dWIgKE4pIHtcbiAgICB2YXIgcGggPSBuZXcgQXJyYXkoTik7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHtcbiAgICAgIHBoW2ldID0gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gcGg7XG4gIH07XG5cbiAgRkZUTS5wcm90b3R5cGUubXVscCA9IGZ1bmN0aW9uIG11bHAgKHgsIHksIG91dCkge1xuICAgIHZhciBOID0gMiAqIHRoaXMuZ3Vlc3NMZW4xM2IoeC5sZW5ndGgsIHkubGVuZ3RoKTtcblxuICAgIHZhciByYnQgPSB0aGlzLm1ha2VSQlQoTik7XG5cbiAgICB2YXIgXyA9IHRoaXMuc3R1YihOKTtcblxuICAgIHZhciByd3MgPSBuZXcgQXJyYXkoTik7XG4gICAgdmFyIHJ3c3QgPSBuZXcgQXJyYXkoTik7XG4gICAgdmFyIGl3c3QgPSBuZXcgQXJyYXkoTik7XG5cbiAgICB2YXIgbnJ3cyA9IG5ldyBBcnJheShOKTtcbiAgICB2YXIgbnJ3c3QgPSBuZXcgQXJyYXkoTik7XG4gICAgdmFyIG5pd3N0ID0gbmV3IEFycmF5KE4pO1xuXG4gICAgdmFyIHJtd3MgPSBvdXQud29yZHM7XG4gICAgcm13cy5sZW5ndGggPSBOO1xuXG4gICAgdGhpcy5jb252ZXJ0MTNiKHgud29yZHMsIHgubGVuZ3RoLCByd3MsIE4pO1xuICAgIHRoaXMuY29udmVydDEzYih5LndvcmRzLCB5Lmxlbmd0aCwgbnJ3cywgTik7XG5cbiAgICB0aGlzLnRyYW5zZm9ybShyd3MsIF8sIHJ3c3QsIGl3c3QsIE4sIHJidCk7XG4gICAgdGhpcy50cmFuc2Zvcm0obnJ3cywgXywgbnJ3c3QsIG5pd3N0LCBOLCByYnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOOyBpKyspIHtcbiAgICAgIHZhciByeCA9IHJ3c3RbaV0gKiBucndzdFtpXSAtIGl3c3RbaV0gKiBuaXdzdFtpXTtcbiAgICAgIGl3c3RbaV0gPSByd3N0W2ldICogbml3c3RbaV0gKyBpd3N0W2ldICogbnJ3c3RbaV07XG4gICAgICByd3N0W2ldID0gcng7XG4gICAgfVxuXG4gICAgdGhpcy5jb25qdWdhdGUocndzdCwgaXdzdCwgTik7XG4gICAgdGhpcy50cmFuc2Zvcm0ocndzdCwgaXdzdCwgcm13cywgXywgTiwgcmJ0KTtcbiAgICB0aGlzLmNvbmp1Z2F0ZShybXdzLCBfLCBOKTtcbiAgICB0aGlzLm5vcm1hbGl6ZTEzYihybXdzLCBOKTtcblxuICAgIG91dC5uZWdhdGl2ZSA9IHgubmVnYXRpdmUgXiB5Lm5lZ2F0aXZlO1xuICAgIG91dC5sZW5ndGggPSB4Lmxlbmd0aCArIHkubGVuZ3RoO1xuICAgIHJldHVybiBvdXQuc3RyaXAoKTtcbiAgfTtcblxuICAvLyBNdWx0aXBseSBgdGhpc2AgYnkgYG51bWBcbiAgQk4ucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bCAobnVtKSB7XG4gICAgdmFyIG91dCA9IG5ldyBCTihudWxsKTtcbiAgICBvdXQud29yZHMgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGggKyBudW0ubGVuZ3RoKTtcbiAgICByZXR1cm4gdGhpcy5tdWxUbyhudW0sIG91dCk7XG4gIH07XG5cbiAgLy8gTXVsdGlwbHkgZW1wbG95aW5nIEZGVFxuICBCTi5wcm90b3R5cGUubXVsZiA9IGZ1bmN0aW9uIG11bGYgKG51bSkge1xuICAgIHZhciBvdXQgPSBuZXcgQk4obnVsbCk7XG4gICAgb3V0LndvcmRzID0gbmV3IEFycmF5KHRoaXMubGVuZ3RoICsgbnVtLmxlbmd0aCk7XG4gICAgcmV0dXJuIGp1bWJvTXVsVG8odGhpcywgbnVtLCBvdXQpO1xuICB9O1xuXG4gIC8vIEluLXBsYWNlIE11bHRpcGxpY2F0aW9uXG4gIEJOLnByb3RvdHlwZS5pbXVsID0gZnVuY3Rpb24gaW11bCAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyhudW0sIHRoaXMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5pbXVsbiA9IGZ1bmN0aW9uIGltdWxuIChudW0pIHtcbiAgICBhc3NlcnQodHlwZW9mIG51bSA9PT0gJ251bWJlcicpO1xuICAgIGFzc2VydChudW0gPCAweDQwMDAwMDApO1xuXG4gICAgLy8gQ2FycnlcbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHcgPSAodGhpcy53b3Jkc1tpXSB8IDApICogbnVtO1xuICAgICAgdmFyIGxvID0gKHcgJiAweDNmZmZmZmYpICsgKGNhcnJ5ICYgMHgzZmZmZmZmKTtcbiAgICAgIGNhcnJ5ID4+PSAyNjtcbiAgICAgIGNhcnJ5ICs9ICh3IC8gMHg0MDAwMDAwKSB8IDA7XG4gICAgICAvLyBOT1RFOiBsbyBpcyAyN2JpdCBtYXhpbXVtXG4gICAgICBjYXJyeSArPSBsbyA+Pj4gMjY7XG4gICAgICB0aGlzLndvcmRzW2ldID0gbG8gJiAweDNmZmZmZmY7XG4gICAgfVxuXG4gICAgaWYgKGNhcnJ5ICE9PSAwKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gY2Fycnk7XG4gICAgICB0aGlzLmxlbmd0aCsrO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5tdWxuID0gZnVuY3Rpb24gbXVsbiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pbXVsbihudW0pO1xuICB9O1xuXG4gIC8vIGB0aGlzYCAqIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuc3FyID0gZnVuY3Rpb24gc3FyICgpIHtcbiAgICByZXR1cm4gdGhpcy5tdWwodGhpcyk7XG4gIH07XG5cbiAgLy8gYHRoaXNgICogYHRoaXNgIGluLXBsYWNlXG4gIEJOLnByb3RvdHlwZS5pc3FyID0gZnVuY3Rpb24gaXNxciAoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW11bCh0aGlzLmNsb25lKCkpO1xuICB9O1xuXG4gIC8vIE1hdGgucG93KGB0aGlzYCwgYG51bWApXG4gIEJOLnByb3RvdHlwZS5wb3cgPSBmdW5jdGlvbiBwb3cgKG51bSkge1xuICAgIHZhciB3ID0gdG9CaXRBcnJheShudW0pO1xuICAgIGlmICh3Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIG5ldyBCTigxKTtcblxuICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXNcbiAgICB2YXIgcmVzID0gdGhpcztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHcubGVuZ3RoOyBpKyssIHJlcyA9IHJlcy5zcXIoKSkge1xuICAgICAgaWYgKHdbaV0gIT09IDApIGJyZWFrO1xuICAgIH1cblxuICAgIGlmICgrK2kgPCB3Lmxlbmd0aCkge1xuICAgICAgZm9yICh2YXIgcSA9IHJlcy5zcXIoKTsgaSA8IHcubGVuZ3RoOyBpKyssIHEgPSBxLnNxcigpKSB7XG4gICAgICAgIGlmICh3W2ldID09PSAwKSBjb250aW51ZTtcblxuICAgICAgICByZXMgPSByZXMubXVsKHEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgLy8gU2hpZnQtbGVmdCBpbi1wbGFjZVxuICBCTi5wcm90b3R5cGUuaXVzaGxuID0gZnVuY3Rpb24gaXVzaGxuIChiaXRzKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBiaXRzID09PSAnbnVtYmVyJyAmJiBiaXRzID49IDApO1xuICAgIHZhciByID0gYml0cyAlIDI2O1xuICAgIHZhciBzID0gKGJpdHMgLSByKSAvIDI2O1xuICAgIHZhciBjYXJyeU1hc2sgPSAoMHgzZmZmZmZmID4+PiAoMjYgLSByKSkgPDwgKDI2IC0gcik7XG4gICAgdmFyIGk7XG5cbiAgICBpZiAociAhPT0gMCkge1xuICAgICAgdmFyIGNhcnJ5ID0gMDtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIG5ld0NhcnJ5ID0gdGhpcy53b3Jkc1tpXSAmIGNhcnJ5TWFzaztcbiAgICAgICAgdmFyIGMgPSAoKHRoaXMud29yZHNbaV0gfCAwKSAtIG5ld0NhcnJ5KSA8PCByO1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gYyB8IGNhcnJ5O1xuICAgICAgICBjYXJyeSA9IG5ld0NhcnJ5ID4+PiAoMjYgLSByKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNhcnJ5KSB7XG4gICAgICAgIHRoaXMud29yZHNbaV0gPSBjYXJyeTtcbiAgICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocyAhPT0gMCkge1xuICAgICAgZm9yIChpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICB0aGlzLndvcmRzW2kgKyBzXSA9IHRoaXMud29yZHNbaV07XG4gICAgICB9XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBzOyBpKyspIHtcbiAgICAgICAgdGhpcy53b3Jkc1tpXSA9IDA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMubGVuZ3RoICs9IHM7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNobG4gPSBmdW5jdGlvbiBpc2hsbiAoYml0cykge1xuICAgIC8vIFRPRE8oaW5kdXRueSk6IGltcGxlbWVudCBtZVxuICAgIGFzc2VydCh0aGlzLm5lZ2F0aXZlID09PSAwKTtcbiAgICByZXR1cm4gdGhpcy5pdXNobG4oYml0cyk7XG4gIH07XG5cbiAgLy8gU2hpZnQtcmlnaHQgaW4tcGxhY2VcbiAgLy8gTk9URTogYGhpbnRgIGlzIGEgbG93ZXN0IGJpdCBiZWZvcmUgdHJhaWxpbmcgemVyb2VzXG4gIC8vIE5PVEU6IGlmIGBleHRlbmRlZGAgaXMgcHJlc2VudCAtIGl0IHdpbGwgYmUgZmlsbGVkIHdpdGggZGVzdHJveWVkIGJpdHNcbiAgQk4ucHJvdG90eXBlLml1c2hybiA9IGZ1bmN0aW9uIGl1c2hybiAoYml0cywgaGludCwgZXh0ZW5kZWQpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7XG4gICAgdmFyIGg7XG4gICAgaWYgKGhpbnQpIHtcbiAgICAgIGggPSAoaGludCAtIChoaW50ICUgMjYpKSAvIDI2O1xuICAgIH0gZWxzZSB7XG4gICAgICBoID0gMDtcbiAgICB9XG5cbiAgICB2YXIgciA9IGJpdHMgJSAyNjtcbiAgICB2YXIgcyA9IE1hdGgubWluKChiaXRzIC0gcikgLyAyNiwgdGhpcy5sZW5ndGgpO1xuICAgIHZhciBtYXNrID0gMHgzZmZmZmZmIF4gKCgweDNmZmZmZmYgPj4+IHIpIDw8IHIpO1xuICAgIHZhciBtYXNrZWRXb3JkcyA9IGV4dGVuZGVkO1xuXG4gICAgaCAtPSBzO1xuICAgIGggPSBNYXRoLm1heCgwLCBoKTtcblxuICAgIC8vIEV4dGVuZGVkIG1vZGUsIGNvcHkgbWFza2VkIHBhcnRcbiAgICBpZiAobWFza2VkV29yZHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgczsgaSsrKSB7XG4gICAgICAgIG1hc2tlZFdvcmRzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpXTtcbiAgICAgIH1cbiAgICAgIG1hc2tlZFdvcmRzLmxlbmd0aCA9IHM7XG4gICAgfVxuXG4gICAgaWYgKHMgPT09IDApIHtcbiAgICAgIC8vIE5vLW9wLCB3ZSBzaG91bGQgbm90IG1vdmUgYW55dGhpbmcgYXQgYWxsXG4gICAgfSBlbHNlIGlmICh0aGlzLmxlbmd0aCA+IHMpIHtcbiAgICAgIHRoaXMubGVuZ3RoIC09IHM7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldID0gdGhpcy53b3Jkc1tpICsgc107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud29yZHNbMF0gPSAwO1xuICAgICAgdGhpcy5sZW5ndGggPSAxO1xuICAgIH1cblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yIChpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDAgJiYgKGNhcnJ5ICE9PSAwIHx8IGkgPj0gaCk7IGktLSkge1xuICAgICAgdmFyIHdvcmQgPSB0aGlzLndvcmRzW2ldIHwgMDtcbiAgICAgIHRoaXMud29yZHNbaV0gPSAoY2FycnkgPDwgKDI2IC0gcikpIHwgKHdvcmQgPj4+IHIpO1xuICAgICAgY2FycnkgPSB3b3JkICYgbWFzaztcbiAgICB9XG5cbiAgICAvLyBQdXNoIGNhcnJpZWQgYml0cyBhcyBhIG1hc2tcbiAgICBpZiAobWFza2VkV29yZHMgJiYgY2FycnkgIT09IDApIHtcbiAgICAgIG1hc2tlZFdvcmRzLndvcmRzW21hc2tlZFdvcmRzLmxlbmd0aCsrXSA9IGNhcnJ5O1xuICAgIH1cblxuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy53b3Jkc1swXSA9IDA7XG4gICAgICB0aGlzLmxlbmd0aCA9IDE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNocm4gPSBmdW5jdGlvbiBpc2hybiAoYml0cywgaGludCwgZXh0ZW5kZWQpIHtcbiAgICAvLyBUT0RPKGluZHV0bnkpOiBpbXBsZW1lbnQgbWVcbiAgICBhc3NlcnQodGhpcy5uZWdhdGl2ZSA9PT0gMCk7XG4gICAgcmV0dXJuIHRoaXMuaXVzaHJuKGJpdHMsIGhpbnQsIGV4dGVuZGVkKTtcbiAgfTtcblxuICAvLyBTaGlmdC1sZWZ0XG4gIEJOLnByb3RvdHlwZS5zaGxuID0gZnVuY3Rpb24gc2hsbiAoYml0cykge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaXNobG4oYml0cyk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnVzaGxuID0gZnVuY3Rpb24gdXNobG4gKGJpdHMpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLml1c2hsbihiaXRzKTtcbiAgfTtcblxuICAvLyBTaGlmdC1yaWdodFxuICBCTi5wcm90b3R5cGUuc2hybiA9IGZ1bmN0aW9uIHNocm4gKGJpdHMpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlzaHJuKGJpdHMpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS51c2hybiA9IGZ1bmN0aW9uIHVzaHJuIChiaXRzKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXNocm4oYml0cyk7XG4gIH07XG5cbiAgLy8gVGVzdCBpZiBuIGJpdCBpcyBzZXRcbiAgQk4ucHJvdG90eXBlLnRlc3RuID0gZnVuY3Rpb24gdGVzdG4gKGJpdCkge1xuICAgIGFzc2VydCh0eXBlb2YgYml0ID09PSAnbnVtYmVyJyAmJiBiaXQgPj0gMCk7XG4gICAgdmFyIHIgPSBiaXQgJSAyNjtcbiAgICB2YXIgcyA9IChiaXQgLSByKSAvIDI2O1xuICAgIHZhciBxID0gMSA8PCByO1xuXG4gICAgLy8gRmFzdCBjYXNlOiBiaXQgaXMgbXVjaCBoaWdoZXIgdGhhbiBhbGwgZXhpc3Rpbmcgd29yZHNcbiAgICBpZiAodGhpcy5sZW5ndGggPD0gcykgcmV0dXJuIGZhbHNlO1xuXG4gICAgLy8gQ2hlY2sgYml0IGFuZCByZXR1cm5cbiAgICB2YXIgdyA9IHRoaXMud29yZHNbc107XG5cbiAgICByZXR1cm4gISEodyAmIHEpO1xuICB9O1xuXG4gIC8vIFJldHVybiBvbmx5IGxvd2VycyBiaXRzIG9mIG51bWJlciAoaW4tcGxhY2UpXG4gIEJOLnByb3RvdHlwZS5pbWFza24gPSBmdW5jdGlvbiBpbWFza24gKGJpdHMpIHtcbiAgICBhc3NlcnQodHlwZW9mIGJpdHMgPT09ICdudW1iZXInICYmIGJpdHMgPj0gMCk7XG4gICAgdmFyIHIgPSBiaXRzICUgMjY7XG4gICAgdmFyIHMgPSAoYml0cyAtIHIpIC8gMjY7XG5cbiAgICBhc3NlcnQodGhpcy5uZWdhdGl2ZSA9PT0gMCwgJ2ltYXNrbiB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmUgbnVtYmVycycpO1xuXG4gICAgaWYgKHRoaXMubGVuZ3RoIDw9IHMpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGlmIChyICE9PSAwKSB7XG4gICAgICBzKys7XG4gICAgfVxuICAgIHRoaXMubGVuZ3RoID0gTWF0aC5taW4ocywgdGhpcy5sZW5ndGgpO1xuXG4gICAgaWYgKHIgIT09IDApIHtcbiAgICAgIHZhciBtYXNrID0gMHgzZmZmZmZmIF4gKCgweDNmZmZmZmYgPj4+IHIpIDw8IHIpO1xuICAgICAgdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCAtIDFdICY9IG1hc2s7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICAvLyBSZXR1cm4gb25seSBsb3dlcnMgYml0cyBvZiBudW1iZXJcbiAgQk4ucHJvdG90eXBlLm1hc2tuID0gZnVuY3Rpb24gbWFza24gKGJpdHMpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmltYXNrbihiaXRzKTtcbiAgfTtcblxuICAvLyBBZGQgcGxhaW4gbnVtYmVyIGBudW1gIHRvIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuaWFkZG4gPSBmdW5jdGlvbiBpYWRkbiAobnVtKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBudW0gPT09ICdudW1iZXInKTtcbiAgICBhc3NlcnQobnVtIDwgMHg0MDAwMDAwKTtcbiAgICBpZiAobnVtIDwgMCkgcmV0dXJuIHRoaXMuaXN1Ym4oLW51bSk7XG5cbiAgICAvLyBQb3NzaWJsZSBzaWduIGNoYW5nZVxuICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICBpZiAodGhpcy5sZW5ndGggPT09IDEgJiYgKHRoaXMud29yZHNbMF0gfCAwKSA8IG51bSkge1xuICAgICAgICB0aGlzLndvcmRzWzBdID0gbnVtIC0gKHRoaXMud29yZHNbMF0gfCAwKTtcbiAgICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMDtcbiAgICAgIHRoaXMuaXN1Ym4obnVtKTtcbiAgICAgIHRoaXMubmVnYXRpdmUgPSAxO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhvdXQgY2hlY2tzXG4gICAgcmV0dXJuIHRoaXMuX2lhZGRuKG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9pYWRkbiA9IGZ1bmN0aW9uIF9pYWRkbiAobnVtKSB7XG4gICAgdGhpcy53b3Jkc1swXSArPSBudW07XG5cbiAgICAvLyBDYXJyeVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGggJiYgdGhpcy53b3Jkc1tpXSA+PSAweDQwMDAwMDA7IGkrKykge1xuICAgICAgdGhpcy53b3Jkc1tpXSAtPSAweDQwMDAwMDA7XG4gICAgICBpZiAoaSA9PT0gdGhpcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHRoaXMud29yZHNbaSArIDFdID0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMud29yZHNbaSArIDFdKys7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMubGVuZ3RoID0gTWF0aC5tYXgodGhpcy5sZW5ndGgsIGkgKyAxKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIFN1YnRyYWN0IHBsYWluIG51bWJlciBgbnVtYCBmcm9tIGB0aGlzYFxuICBCTi5wcm90b3R5cGUuaXN1Ym4gPSBmdW5jdGlvbiBpc3VibiAobnVtKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBudW0gPT09ICdudW1iZXInKTtcbiAgICBhc3NlcnQobnVtIDwgMHg0MDAwMDAwKTtcbiAgICBpZiAobnVtIDwgMCkgcmV0dXJuIHRoaXMuaWFkZG4oLW51bSk7XG5cbiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG4gICAgICB0aGlzLmlhZGRuKG51bSk7XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHRoaXMud29yZHNbMF0gLT0gbnVtO1xuXG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxICYmIHRoaXMud29yZHNbMF0gPCAwKSB7XG4gICAgICB0aGlzLndvcmRzWzBdID0gLXRoaXMud29yZHNbMF07XG4gICAgICB0aGlzLm5lZ2F0aXZlID0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ2FycnlcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGggJiYgdGhpcy53b3Jkc1tpXSA8IDA7IGkrKykge1xuICAgICAgICB0aGlzLndvcmRzW2ldICs9IDB4NDAwMDAwMDtcbiAgICAgICAgdGhpcy53b3Jkc1tpICsgMV0gLT0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5hZGRuID0gZnVuY3Rpb24gYWRkbiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pYWRkbihudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5zdWJuID0gZnVuY3Rpb24gc3VibiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY2xvbmUoKS5pc3VibihudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5pYWJzID0gZnVuY3Rpb24gaWFicyAoKSB7XG4gICAgdGhpcy5uZWdhdGl2ZSA9IDA7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuYWJzID0gZnVuY3Rpb24gYWJzICgpIHtcbiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLmlhYnMoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuX2lzaGxuc3VibXVsID0gZnVuY3Rpb24gX2lzaGxuc3VibXVsIChudW0sIG11bCwgc2hpZnQpIHtcbiAgICB2YXIgbGVuID0gbnVtLmxlbmd0aCArIHNoaWZ0O1xuICAgIHZhciBpO1xuXG4gICAgdGhpcy5fZXhwYW5kKGxlbik7XG5cbiAgICB2YXIgdztcbiAgICB2YXIgY2FycnkgPSAwO1xuICAgIGZvciAoaSA9IDA7IGkgPCBudW0ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHcgPSAodGhpcy53b3Jkc1tpICsgc2hpZnRdIHwgMCkgKyBjYXJyeTtcbiAgICAgIHZhciByaWdodCA9IChudW0ud29yZHNbaV0gfCAwKSAqIG11bDtcbiAgICAgIHcgLT0gcmlnaHQgJiAweDNmZmZmZmY7XG4gICAgICBjYXJyeSA9ICh3ID4+IDI2KSAtICgocmlnaHQgLyAweDQwMDAwMDApIHwgMCk7XG4gICAgICB0aGlzLndvcmRzW2kgKyBzaGlmdF0gPSB3ICYgMHgzZmZmZmZmO1xuICAgIH1cbiAgICBmb3IgKDsgaSA8IHRoaXMubGVuZ3RoIC0gc2hpZnQ7IGkrKykge1xuICAgICAgdyA9ICh0aGlzLndvcmRzW2kgKyBzaGlmdF0gfCAwKSArIGNhcnJ5O1xuICAgICAgY2FycnkgPSB3ID4+IDI2O1xuICAgICAgdGhpcy53b3Jkc1tpICsgc2hpZnRdID0gdyAmIDB4M2ZmZmZmZjtcbiAgICB9XG5cbiAgICBpZiAoY2FycnkgPT09IDApIHJldHVybiB0aGlzLnN0cmlwKCk7XG5cbiAgICAvLyBTdWJ0cmFjdGlvbiBvdmVyZmxvd1xuICAgIGFzc2VydChjYXJyeSA9PT0gLTEpO1xuICAgIGNhcnJ5ID0gMDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdyA9IC0odGhpcy53b3Jkc1tpXSB8IDApICsgY2Fycnk7XG4gICAgICBjYXJyeSA9IHcgPj4gMjY7XG4gICAgICB0aGlzLndvcmRzW2ldID0gdyAmIDB4M2ZmZmZmZjtcbiAgICB9XG4gICAgdGhpcy5uZWdhdGl2ZSA9IDE7XG5cbiAgICByZXR1cm4gdGhpcy5zdHJpcCgpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5fd29yZERpdiA9IGZ1bmN0aW9uIF93b3JkRGl2IChudW0sIG1vZGUpIHtcbiAgICB2YXIgc2hpZnQgPSB0aGlzLmxlbmd0aCAtIG51bS5sZW5ndGg7XG5cbiAgICB2YXIgYSA9IHRoaXMuY2xvbmUoKTtcbiAgICB2YXIgYiA9IG51bTtcblxuICAgIC8vIE5vcm1hbGl6ZVxuICAgIHZhciBiaGkgPSBiLndvcmRzW2IubGVuZ3RoIC0gMV0gfCAwO1xuICAgIHZhciBiaGlCaXRzID0gdGhpcy5fY291bnRCaXRzKGJoaSk7XG4gICAgc2hpZnQgPSAyNiAtIGJoaUJpdHM7XG4gICAgaWYgKHNoaWZ0ICE9PSAwKSB7XG4gICAgICBiID0gYi51c2hsbihzaGlmdCk7XG4gICAgICBhLml1c2hsbihzaGlmdCk7XG4gICAgICBiaGkgPSBiLndvcmRzW2IubGVuZ3RoIC0gMV0gfCAwO1xuICAgIH1cblxuICAgIC8vIEluaXRpYWxpemUgcXVvdGllbnRcbiAgICB2YXIgbSA9IGEubGVuZ3RoIC0gYi5sZW5ndGg7XG4gICAgdmFyIHE7XG5cbiAgICBpZiAobW9kZSAhPT0gJ21vZCcpIHtcbiAgICAgIHEgPSBuZXcgQk4obnVsbCk7XG4gICAgICBxLmxlbmd0aCA9IG0gKyAxO1xuICAgICAgcS53b3JkcyA9IG5ldyBBcnJheShxLmxlbmd0aCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcS53b3Jkc1tpXSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGRpZmYgPSBhLmNsb25lKCkuX2lzaGxuc3VibXVsKGIsIDEsIG0pO1xuICAgIGlmIChkaWZmLm5lZ2F0aXZlID09PSAwKSB7XG4gICAgICBhID0gZGlmZjtcbiAgICAgIGlmIChxKSB7XG4gICAgICAgIHEud29yZHNbbV0gPSAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIGogPSBtIC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgICAgIHZhciBxaiA9IChhLndvcmRzW2IubGVuZ3RoICsgal0gfCAwKSAqIDB4NDAwMDAwMCArXG4gICAgICAgIChhLndvcmRzW2IubGVuZ3RoICsgaiAtIDFdIHwgMCk7XG5cbiAgICAgIC8vIE5PVEU6IChxaiAvIGJoaSkgaXMgKDB4M2ZmZmZmZiAqIDB4NDAwMDAwMCArIDB4M2ZmZmZmZikgLyAweDIwMDAwMDAgbWF4XG4gICAgICAvLyAoMHg3ZmZmZmZmKVxuICAgICAgcWogPSBNYXRoLm1pbigocWogLyBiaGkpIHwgMCwgMHgzZmZmZmZmKTtcblxuICAgICAgYS5faXNobG5zdWJtdWwoYiwgcWosIGopO1xuICAgICAgd2hpbGUgKGEubmVnYXRpdmUgIT09IDApIHtcbiAgICAgICAgcWotLTtcbiAgICAgICAgYS5uZWdhdGl2ZSA9IDA7XG4gICAgICAgIGEuX2lzaGxuc3VibXVsKGIsIDEsIGopO1xuICAgICAgICBpZiAoIWEuaXNaZXJvKCkpIHtcbiAgICAgICAgICBhLm5lZ2F0aXZlIF49IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChxKSB7XG4gICAgICAgIHEud29yZHNbal0gPSBxajtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHEpIHtcbiAgICAgIHEuc3RyaXAoKTtcbiAgICB9XG4gICAgYS5zdHJpcCgpO1xuXG4gICAgLy8gRGVub3JtYWxpemVcbiAgICBpZiAobW9kZSAhPT0gJ2RpdicgJiYgc2hpZnQgIT09IDApIHtcbiAgICAgIGEuaXVzaHJuKHNoaWZ0KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZGl2OiBxIHx8IG51bGwsXG4gICAgICBtb2Q6IGFcbiAgICB9O1xuICB9O1xuXG4gIC8vIE5PVEU6IDEpIGBtb2RlYCBjYW4gYmUgc2V0IHRvIGBtb2RgIHRvIHJlcXVlc3QgbW9kIG9ubHksXG4gIC8vICAgICAgIHRvIGBkaXZgIHRvIHJlcXVlc3QgZGl2IG9ubHksIG9yIGJlIGFic2VudCB0b1xuICAvLyAgICAgICByZXF1ZXN0IGJvdGggZGl2ICYgbW9kXG4gIC8vICAgICAgIDIpIGBwb3NpdGl2ZWAgaXMgdHJ1ZSBpZiB1bnNpZ25lZCBtb2QgaXMgcmVxdWVzdGVkXG4gIEJOLnByb3RvdHlwZS5kaXZtb2QgPSBmdW5jdGlvbiBkaXZtb2QgKG51bSwgbW9kZSwgcG9zaXRpdmUpIHtcbiAgICBhc3NlcnQoIW51bS5pc1plcm8oKSk7XG5cbiAgICBpZiAodGhpcy5pc1plcm8oKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGl2OiBuZXcgQk4oMCksXG4gICAgICAgIG1vZDogbmV3IEJOKDApXG4gICAgICB9O1xuICAgIH1cblxuICAgIHZhciBkaXYsIG1vZCwgcmVzO1xuICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwICYmIG51bS5uZWdhdGl2ZSA9PT0gMCkge1xuICAgICAgcmVzID0gdGhpcy5uZWcoKS5kaXZtb2QobnVtLCBtb2RlKTtcblxuICAgICAgaWYgKG1vZGUgIT09ICdtb2QnKSB7XG4gICAgICAgIGRpdiA9IHJlcy5kaXYubmVnKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2RlICE9PSAnZGl2Jykge1xuICAgICAgICBtb2QgPSByZXMubW9kLm5lZygpO1xuICAgICAgICBpZiAocG9zaXRpdmUgJiYgbW9kLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICAgICAgbW9kLmlhZGQobnVtKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IGRpdixcbiAgICAgICAgbW9kOiBtb2RcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubmVnYXRpdmUgPT09IDAgJiYgbnVtLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICByZXMgPSB0aGlzLmRpdm1vZChudW0ubmVnKCksIG1vZGUpO1xuXG4gICAgICBpZiAobW9kZSAhPT0gJ21vZCcpIHtcbiAgICAgICAgZGl2ID0gcmVzLmRpdi5uZWcoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGl2OiBkaXYsXG4gICAgICAgIG1vZDogcmVzLm1vZFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAoKHRoaXMubmVnYXRpdmUgJiBudW0ubmVnYXRpdmUpICE9PSAwKSB7XG4gICAgICByZXMgPSB0aGlzLm5lZygpLmRpdm1vZChudW0ubmVnKCksIG1vZGUpO1xuXG4gICAgICBpZiAobW9kZSAhPT0gJ2RpdicpIHtcbiAgICAgICAgbW9kID0gcmVzLm1vZC5uZWcoKTtcbiAgICAgICAgaWYgKHBvc2l0aXZlICYmIG1vZC5uZWdhdGl2ZSAhPT0gMCkge1xuICAgICAgICAgIG1vZC5pc3ViKG51bSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGl2OiByZXMuZGl2LFxuICAgICAgICBtb2Q6IG1vZFxuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBCb3RoIG51bWJlcnMgYXJlIHBvc2l0aXZlIGF0IHRoaXMgcG9pbnRcblxuICAgIC8vIFN0cmlwIGJvdGggbnVtYmVycyB0byBhcHByb3hpbWF0ZSBzaGlmdCB2YWx1ZVxuICAgIGlmIChudW0ubGVuZ3RoID4gdGhpcy5sZW5ndGggfHwgdGhpcy5jbXAobnVtKSA8IDApIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRpdjogbmV3IEJOKDApLFxuICAgICAgICBtb2Q6IHRoaXNcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gVmVyeSBzaG9ydCByZWR1Y3Rpb25cbiAgICBpZiAobnVtLmxlbmd0aCA9PT0gMSkge1xuICAgICAgaWYgKG1vZGUgPT09ICdkaXYnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGl2OiB0aGlzLmRpdm4obnVtLndvcmRzWzBdKSxcbiAgICAgICAgICBtb2Q6IG51bGxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZGUgPT09ICdtb2QnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGl2OiBudWxsLFxuICAgICAgICAgIG1vZDogbmV3IEJOKHRoaXMubW9kbihudW0ud29yZHNbMF0pKVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkaXY6IHRoaXMuZGl2bihudW0ud29yZHNbMF0pLFxuICAgICAgICBtb2Q6IG5ldyBCTih0aGlzLm1vZG4obnVtLndvcmRzWzBdKSlcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3dvcmREaXYobnVtLCBtb2RlKTtcbiAgfTtcblxuICAvLyBGaW5kIGB0aGlzYCAvIGBudW1gXG4gIEJOLnByb3RvdHlwZS5kaXYgPSBmdW5jdGlvbiBkaXYgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmRpdm1vZChudW0sICdkaXYnLCBmYWxzZSkuZGl2O1xuICB9O1xuXG4gIC8vIEZpbmQgYHRoaXNgICUgYG51bWBcbiAgQk4ucHJvdG90eXBlLm1vZCA9IGZ1bmN0aW9uIG1vZCAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuZGl2bW9kKG51bSwgJ21vZCcsIGZhbHNlKS5tb2Q7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnVtb2QgPSBmdW5jdGlvbiB1bW9kIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5kaXZtb2QobnVtLCAnbW9kJywgdHJ1ZSkubW9kO1xuICB9O1xuXG4gIC8vIEZpbmQgUm91bmQoYHRoaXNgIC8gYG51bWApXG4gIEJOLnByb3RvdHlwZS5kaXZSb3VuZCA9IGZ1bmN0aW9uIGRpdlJvdW5kIChudW0pIHtcbiAgICB2YXIgZG0gPSB0aGlzLmRpdm1vZChudW0pO1xuXG4gICAgLy8gRmFzdCBjYXNlIC0gZXhhY3QgZGl2aXNpb25cbiAgICBpZiAoZG0ubW9kLmlzWmVybygpKSByZXR1cm4gZG0uZGl2O1xuXG4gICAgdmFyIG1vZCA9IGRtLmRpdi5uZWdhdGl2ZSAhPT0gMCA/IGRtLm1vZC5pc3ViKG51bSkgOiBkbS5tb2Q7XG5cbiAgICB2YXIgaGFsZiA9IG51bS51c2hybigxKTtcbiAgICB2YXIgcjIgPSBudW0uYW5kbG4oMSk7XG4gICAgdmFyIGNtcCA9IG1vZC5jbXAoaGFsZik7XG5cbiAgICAvLyBSb3VuZCBkb3duXG4gICAgaWYgKGNtcCA8IDAgfHwgcjIgPT09IDEgJiYgY21wID09PSAwKSByZXR1cm4gZG0uZGl2O1xuXG4gICAgLy8gUm91bmQgdXBcbiAgICByZXR1cm4gZG0uZGl2Lm5lZ2F0aXZlICE9PSAwID8gZG0uZGl2LmlzdWJuKDEpIDogZG0uZGl2LmlhZGRuKDEpO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5tb2RuID0gZnVuY3Rpb24gbW9kbiAobnVtKSB7XG4gICAgYXNzZXJ0KG51bSA8PSAweDNmZmZmZmYpO1xuICAgIHZhciBwID0gKDEgPDwgMjYpICUgbnVtO1xuXG4gICAgdmFyIGFjYyA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGFjYyA9IChwICogYWNjICsgKHRoaXMud29yZHNbaV0gfCAwKSkgJSBudW07XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfTtcblxuICAvLyBJbi1wbGFjZSBkaXZpc2lvbiBieSBudW1iZXJcbiAgQk4ucHJvdG90eXBlLmlkaXZuID0gZnVuY3Rpb24gaWRpdm4gKG51bSkge1xuICAgIGFzc2VydChudW0gPD0gMHgzZmZmZmZmKTtcblxuICAgIHZhciBjYXJyeSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciB3ID0gKHRoaXMud29yZHNbaV0gfCAwKSArIGNhcnJ5ICogMHg0MDAwMDAwO1xuICAgICAgdGhpcy53b3Jkc1tpXSA9ICh3IC8gbnVtKSB8IDA7XG4gICAgICBjYXJyeSA9IHcgJSBudW07XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuc3RyaXAoKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZGl2biA9IGZ1bmN0aW9uIGRpdm4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNsb25lKCkuaWRpdm4obnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZWdjZCA9IGZ1bmN0aW9uIGVnY2QgKHApIHtcbiAgICBhc3NlcnQocC5uZWdhdGl2ZSA9PT0gMCk7XG4gICAgYXNzZXJ0KCFwLmlzWmVybygpKTtcblxuICAgIHZhciB4ID0gdGhpcztcbiAgICB2YXIgeSA9IHAuY2xvbmUoKTtcblxuICAgIGlmICh4Lm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICB4ID0geC51bW9kKHApO1xuICAgIH0gZWxzZSB7XG4gICAgICB4ID0geC5jbG9uZSgpO1xuICAgIH1cblxuICAgIC8vIEEgKiB4ICsgQiAqIHkgPSB4XG4gICAgdmFyIEEgPSBuZXcgQk4oMSk7XG4gICAgdmFyIEIgPSBuZXcgQk4oMCk7XG5cbiAgICAvLyBDICogeCArIEQgKiB5ID0geVxuICAgIHZhciBDID0gbmV3IEJOKDApO1xuICAgIHZhciBEID0gbmV3IEJOKDEpO1xuXG4gICAgdmFyIGcgPSAwO1xuXG4gICAgd2hpbGUgKHguaXNFdmVuKCkgJiYgeS5pc0V2ZW4oKSkge1xuICAgICAgeC5pdXNocm4oMSk7XG4gICAgICB5Lml1c2hybigxKTtcbiAgICAgICsrZztcbiAgICB9XG5cbiAgICB2YXIgeXAgPSB5LmNsb25lKCk7XG4gICAgdmFyIHhwID0geC5jbG9uZSgpO1xuXG4gICAgd2hpbGUgKCF4LmlzWmVybygpKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgaW0gPSAxOyAoeC53b3Jkc1swXSAmIGltKSA9PT0gMCAmJiBpIDwgMjY7ICsraSwgaW0gPDw9IDEpO1xuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIHguaXVzaHJuKGkpO1xuICAgICAgICB3aGlsZSAoaS0tID4gMCkge1xuICAgICAgICAgIGlmIChBLmlzT2RkKCkgfHwgQi5pc09kZCgpKSB7XG4gICAgICAgICAgICBBLmlhZGQoeXApO1xuICAgICAgICAgICAgQi5pc3ViKHhwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBBLml1c2hybigxKTtcbiAgICAgICAgICBCLml1c2hybigxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBqID0gMCwgam0gPSAxOyAoeS53b3Jkc1swXSAmIGptKSA9PT0gMCAmJiBqIDwgMjY7ICsraiwgam0gPDw9IDEpO1xuICAgICAgaWYgKGogPiAwKSB7XG4gICAgICAgIHkuaXVzaHJuKGopO1xuICAgICAgICB3aGlsZSAoai0tID4gMCkge1xuICAgICAgICAgIGlmIChDLmlzT2RkKCkgfHwgRC5pc09kZCgpKSB7XG4gICAgICAgICAgICBDLmlhZGQoeXApO1xuICAgICAgICAgICAgRC5pc3ViKHhwKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBDLml1c2hybigxKTtcbiAgICAgICAgICBELml1c2hybigxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoeC5jbXAoeSkgPj0gMCkge1xuICAgICAgICB4LmlzdWIoeSk7XG4gICAgICAgIEEuaXN1YihDKTtcbiAgICAgICAgQi5pc3ViKEQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeS5pc3ViKHgpO1xuICAgICAgICBDLmlzdWIoQSk7XG4gICAgICAgIEQuaXN1YihCKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgYTogQyxcbiAgICAgIGI6IEQsXG4gICAgICBnY2Q6IHkuaXVzaGxuKGcpXG4gICAgfTtcbiAgfTtcblxuICAvLyBUaGlzIGlzIHJlZHVjZWQgaW5jYXJuYXRpb24gb2YgdGhlIGJpbmFyeSBFRUFcbiAgLy8gYWJvdmUsIGRlc2lnbmF0ZWQgdG8gaW52ZXJ0IG1lbWJlcnMgb2YgdGhlXG4gIC8vIF9wcmltZV8gZmllbGRzIEYocCkgYXQgYSBtYXhpbWFsIHNwZWVkXG4gIEJOLnByb3RvdHlwZS5faW52bXAgPSBmdW5jdGlvbiBfaW52bXAgKHApIHtcbiAgICBhc3NlcnQocC5uZWdhdGl2ZSA9PT0gMCk7XG4gICAgYXNzZXJ0KCFwLmlzWmVybygpKTtcblxuICAgIHZhciBhID0gdGhpcztcbiAgICB2YXIgYiA9IHAuY2xvbmUoKTtcblxuICAgIGlmIChhLm5lZ2F0aXZlICE9PSAwKSB7XG4gICAgICBhID0gYS51bW9kKHApO1xuICAgIH0gZWxzZSB7XG4gICAgICBhID0gYS5jbG9uZSgpO1xuICAgIH1cblxuICAgIHZhciB4MSA9IG5ldyBCTigxKTtcbiAgICB2YXIgeDIgPSBuZXcgQk4oMCk7XG5cbiAgICB2YXIgZGVsdGEgPSBiLmNsb25lKCk7XG5cbiAgICB3aGlsZSAoYS5jbXBuKDEpID4gMCAmJiBiLmNtcG4oMSkgPiAwKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgaW0gPSAxOyAoYS53b3Jkc1swXSAmIGltKSA9PT0gMCAmJiBpIDwgMjY7ICsraSwgaW0gPDw9IDEpO1xuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIGEuaXVzaHJuKGkpO1xuICAgICAgICB3aGlsZSAoaS0tID4gMCkge1xuICAgICAgICAgIGlmICh4MS5pc09kZCgpKSB7XG4gICAgICAgICAgICB4MS5pYWRkKGRlbHRhKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB4MS5pdXNocm4oMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaiA9IDAsIGptID0gMTsgKGIud29yZHNbMF0gJiBqbSkgPT09IDAgJiYgaiA8IDI2OyArK2osIGptIDw8PSAxKTtcbiAgICAgIGlmIChqID4gMCkge1xuICAgICAgICBiLml1c2hybihqKTtcbiAgICAgICAgd2hpbGUgKGotLSA+IDApIHtcbiAgICAgICAgICBpZiAoeDIuaXNPZGQoKSkge1xuICAgICAgICAgICAgeDIuaWFkZChkZWx0YSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgeDIuaXVzaHJuKDEpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChhLmNtcChiKSA+PSAwKSB7XG4gICAgICAgIGEuaXN1YihiKTtcbiAgICAgICAgeDEuaXN1Yih4Mik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiLmlzdWIoYSk7XG4gICAgICAgIHgyLmlzdWIoeDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciByZXM7XG4gICAgaWYgKGEuY21wbigxKSA9PT0gMCkge1xuICAgICAgcmVzID0geDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcyA9IHgyO1xuICAgIH1cblxuICAgIGlmIChyZXMuY21wbigwKSA8IDApIHtcbiAgICAgIHJlcy5pYWRkKHApO1xuICAgIH1cblxuICAgIHJldHVybiByZXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmdjZCA9IGZ1bmN0aW9uIGdjZCAobnVtKSB7XG4gICAgaWYgKHRoaXMuaXNaZXJvKCkpIHJldHVybiBudW0uYWJzKCk7XG4gICAgaWYgKG51bS5pc1plcm8oKSkgcmV0dXJuIHRoaXMuYWJzKCk7XG5cbiAgICB2YXIgYSA9IHRoaXMuY2xvbmUoKTtcbiAgICB2YXIgYiA9IG51bS5jbG9uZSgpO1xuICAgIGEubmVnYXRpdmUgPSAwO1xuICAgIGIubmVnYXRpdmUgPSAwO1xuXG4gICAgLy8gUmVtb3ZlIGNvbW1vbiBmYWN0b3Igb2YgdHdvXG4gICAgZm9yICh2YXIgc2hpZnQgPSAwOyBhLmlzRXZlbigpICYmIGIuaXNFdmVuKCk7IHNoaWZ0KyspIHtcbiAgICAgIGEuaXVzaHJuKDEpO1xuICAgICAgYi5pdXNocm4oMSk7XG4gICAgfVxuXG4gICAgZG8ge1xuICAgICAgd2hpbGUgKGEuaXNFdmVuKCkpIHtcbiAgICAgICAgYS5pdXNocm4oMSk7XG4gICAgICB9XG4gICAgICB3aGlsZSAoYi5pc0V2ZW4oKSkge1xuICAgICAgICBiLml1c2hybigxKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHIgPSBhLmNtcChiKTtcbiAgICAgIGlmIChyIDwgMCkge1xuICAgICAgICAvLyBTd2FwIGBhYCBhbmQgYGJgIHRvIG1ha2UgYGFgIGFsd2F5cyBiaWdnZXIgdGhhbiBgYmBcbiAgICAgICAgdmFyIHQgPSBhO1xuICAgICAgICBhID0gYjtcbiAgICAgICAgYiA9IHQ7XG4gICAgICB9IGVsc2UgaWYgKHIgPT09IDAgfHwgYi5jbXBuKDEpID09PSAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBhLmlzdWIoYik7XG4gICAgfSB3aGlsZSAodHJ1ZSk7XG5cbiAgICByZXR1cm4gYi5pdXNobG4oc2hpZnQpO1xuICB9O1xuXG4gIC8vIEludmVydCBudW1iZXIgaW4gdGhlIGZpZWxkIEYobnVtKVxuICBCTi5wcm90b3R5cGUuaW52bSA9IGZ1bmN0aW9uIGludm0gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmVnY2QobnVtKS5hLnVtb2QobnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNFdmVuID0gZnVuY3Rpb24gaXNFdmVuICgpIHtcbiAgICByZXR1cm4gKHRoaXMud29yZHNbMF0gJiAxKSA9PT0gMDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNPZGQgPSBmdW5jdGlvbiBpc09kZCAoKSB7XG4gICAgcmV0dXJuICh0aGlzLndvcmRzWzBdICYgMSkgPT09IDE7XG4gIH07XG5cbiAgLy8gQW5kIGZpcnN0IHdvcmQgYW5kIG51bVxuICBCTi5wcm90b3R5cGUuYW5kbG4gPSBmdW5jdGlvbiBhbmRsbiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMud29yZHNbMF0gJiBudW07XG4gIH07XG5cbiAgLy8gSW5jcmVtZW50IGF0IHRoZSBiaXQgcG9zaXRpb24gaW4tbGluZVxuICBCTi5wcm90b3R5cGUuYmluY24gPSBmdW5jdGlvbiBiaW5jbiAoYml0KSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBiaXQgPT09ICdudW1iZXInKTtcbiAgICB2YXIgciA9IGJpdCAlIDI2O1xuICAgIHZhciBzID0gKGJpdCAtIHIpIC8gMjY7XG4gICAgdmFyIHEgPSAxIDw8IHI7XG5cbiAgICAvLyBGYXN0IGNhc2U6IGJpdCBpcyBtdWNoIGhpZ2hlciB0aGFuIGFsbCBleGlzdGluZyB3b3Jkc1xuICAgIGlmICh0aGlzLmxlbmd0aCA8PSBzKSB7XG4gICAgICB0aGlzLl9leHBhbmQocyArIDEpO1xuICAgICAgdGhpcy53b3Jkc1tzXSB8PSBxO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLy8gQWRkIGJpdCBhbmQgcHJvcGFnYXRlLCBpZiBuZWVkZWRcbiAgICB2YXIgY2FycnkgPSBxO1xuICAgIGZvciAodmFyIGkgPSBzOyBjYXJyeSAhPT0gMCAmJiBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHcgPSB0aGlzLndvcmRzW2ldIHwgMDtcbiAgICAgIHcgKz0gY2Fycnk7XG4gICAgICBjYXJyeSA9IHcgPj4+IDI2O1xuICAgICAgdyAmPSAweDNmZmZmZmY7XG4gICAgICB0aGlzLndvcmRzW2ldID0gdztcbiAgICB9XG4gICAgaWYgKGNhcnJ5ICE9PSAwKSB7XG4gICAgICB0aGlzLndvcmRzW2ldID0gY2Fycnk7XG4gICAgICB0aGlzLmxlbmd0aCsrO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuaXNaZXJvID0gZnVuY3Rpb24gaXNaZXJvICgpIHtcbiAgICByZXR1cm4gdGhpcy5sZW5ndGggPT09IDEgJiYgdGhpcy53b3Jkc1swXSA9PT0gMDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuY21wbiA9IGZ1bmN0aW9uIGNtcG4gKG51bSkge1xuICAgIHZhciBuZWdhdGl2ZSA9IG51bSA8IDA7XG5cbiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCAmJiAhbmVnYXRpdmUpIHJldHVybiAtMTtcbiAgICBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBuZWdhdGl2ZSkgcmV0dXJuIDE7XG5cbiAgICB0aGlzLnN0cmlwKCk7XG5cbiAgICB2YXIgcmVzO1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHJlcyA9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChuZWdhdGl2ZSkge1xuICAgICAgICBudW0gPSAtbnVtO1xuICAgICAgfVxuXG4gICAgICBhc3NlcnQobnVtIDw9IDB4M2ZmZmZmZiwgJ051bWJlciBpcyB0b28gYmlnJyk7XG5cbiAgICAgIHZhciB3ID0gdGhpcy53b3Jkc1swXSB8IDA7XG4gICAgICByZXMgPSB3ID09PSBudW0gPyAwIDogdyA8IG51bSA/IC0xIDogMTtcbiAgICB9XG4gICAgaWYgKHRoaXMubmVnYXRpdmUgIT09IDApIHJldHVybiAtcmVzIHwgMDtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIC8vIENvbXBhcmUgdHdvIG51bWJlcnMgYW5kIHJldHVybjpcbiAgLy8gMSAtIGlmIGB0aGlzYCA+IGBudW1gXG4gIC8vIDAgLSBpZiBgdGhpc2AgPT0gYG51bWBcbiAgLy8gLTEgLSBpZiBgdGhpc2AgPCBgbnVtYFxuICBCTi5wcm90b3R5cGUuY21wID0gZnVuY3Rpb24gY21wIChudW0pIHtcbiAgICBpZiAodGhpcy5uZWdhdGl2ZSAhPT0gMCAmJiBudW0ubmVnYXRpdmUgPT09IDApIHJldHVybiAtMTtcbiAgICBpZiAodGhpcy5uZWdhdGl2ZSA9PT0gMCAmJiBudW0ubmVnYXRpdmUgIT09IDApIHJldHVybiAxO1xuXG4gICAgdmFyIHJlcyA9IHRoaXMudWNtcChudW0pO1xuICAgIGlmICh0aGlzLm5lZ2F0aXZlICE9PSAwKSByZXR1cm4gLXJlcyB8IDA7XG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICAvLyBVbnNpZ25lZCBjb21wYXJpc29uXG4gIEJOLnByb3RvdHlwZS51Y21wID0gZnVuY3Rpb24gdWNtcCAobnVtKSB7XG4gICAgLy8gQXQgdGhpcyBwb2ludCBib3RoIG51bWJlcnMgaGF2ZSB0aGUgc2FtZSBzaWduXG4gICAgaWYgKHRoaXMubGVuZ3RoID4gbnVtLmxlbmd0aCkgcmV0dXJuIDE7XG4gICAgaWYgKHRoaXMubGVuZ3RoIDwgbnVtLmxlbmd0aCkgcmV0dXJuIC0xO1xuXG4gICAgdmFyIHJlcyA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciBhID0gdGhpcy53b3Jkc1tpXSB8IDA7XG4gICAgICB2YXIgYiA9IG51bS53b3Jkc1tpXSB8IDA7XG5cbiAgICAgIGlmIChhID09PSBiKSBjb250aW51ZTtcbiAgICAgIGlmIChhIDwgYikge1xuICAgICAgICByZXMgPSAtMTtcbiAgICAgIH0gZWxzZSBpZiAoYSA+IGIpIHtcbiAgICAgICAgcmVzID0gMTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5ndG4gPSBmdW5jdGlvbiBndG4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcG4obnVtKSA9PT0gMTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZ3QgPSBmdW5jdGlvbiBndCAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wKG51bSkgPT09IDE7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmd0ZW4gPSBmdW5jdGlvbiBndGVuIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbXBuKG51bSkgPj0gMDtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZ3RlID0gZnVuY3Rpb24gZ3RlIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbXAobnVtKSA+PSAwO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5sdG4gPSBmdW5jdGlvbiBsdG4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcG4obnVtKSA9PT0gLTE7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmx0ID0gZnVuY3Rpb24gbHQgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcChudW0pID09PSAtMTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUubHRlbiA9IGZ1bmN0aW9uIGx0ZW4gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcG4obnVtKSA8PSAwO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5sdGUgPSBmdW5jdGlvbiBsdGUgKG51bSkge1xuICAgIHJldHVybiB0aGlzLmNtcChudW0pIDw9IDA7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmVxbiA9IGZ1bmN0aW9uIGVxbiAobnVtKSB7XG4gICAgcmV0dXJuIHRoaXMuY21wbihudW0pID09PSAwO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5lcSA9IGZ1bmN0aW9uIGVxIChudW0pIHtcbiAgICByZXR1cm4gdGhpcy5jbXAobnVtKSA9PT0gMDtcbiAgfTtcblxuICAvL1xuICAvLyBBIHJlZHVjZSBjb250ZXh0LCBjb3VsZCBiZSB1c2luZyBtb250Z29tZXJ5IG9yIHNvbWV0aGluZyBiZXR0ZXIsIGRlcGVuZGluZ1xuICAvLyBvbiB0aGUgYG1gIGl0c2VsZi5cbiAgLy9cbiAgQk4ucmVkID0gZnVuY3Rpb24gcmVkIChudW0pIHtcbiAgICByZXR1cm4gbmV3IFJlZChudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS50b1JlZCA9IGZ1bmN0aW9uIHRvUmVkIChjdHgpIHtcbiAgICBhc3NlcnQoIXRoaXMucmVkLCAnQWxyZWFkeSBhIG51bWJlciBpbiByZWR1Y3Rpb24gY29udGV4dCcpO1xuICAgIGFzc2VydCh0aGlzLm5lZ2F0aXZlID09PSAwLCAncmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXMnKTtcbiAgICByZXR1cm4gY3R4LmNvbnZlcnRUbyh0aGlzKS5fZm9yY2VSZWQoY3R4KTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUuZnJvbVJlZCA9IGZ1bmN0aW9uIGZyb21SZWQgKCkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ2Zyb21SZWQgd29ya3Mgb25seSB3aXRoIG51bWJlcnMgaW4gcmVkdWN0aW9uIGNvbnRleHQnKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuY29udmVydEZyb20odGhpcyk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLl9mb3JjZVJlZCA9IGZ1bmN0aW9uIF9mb3JjZVJlZCAoY3R4KSB7XG4gICAgdGhpcy5yZWQgPSBjdHg7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLmZvcmNlUmVkID0gZnVuY3Rpb24gZm9yY2VSZWQgKGN0eCkge1xuICAgIGFzc2VydCghdGhpcy5yZWQsICdBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0Jyk7XG4gICAgcmV0dXJuIHRoaXMuX2ZvcmNlUmVkKGN0eCk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnJlZEFkZCA9IGZ1bmN0aW9uIHJlZEFkZCAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkQWRkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHJldHVybiB0aGlzLnJlZC5hZGQodGhpcywgbnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkSUFkZCA9IGZ1bmN0aW9uIHJlZElBZGQgKG51bSkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZElBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLmlhZGQodGhpcywgbnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkU3ViID0gZnVuY3Rpb24gcmVkU3ViIChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRTdWIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLnN1Yih0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRJU3ViID0gZnVuY3Rpb24gcmVkSVN1YiAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkSVN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuaXN1Yih0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRTaGwgPSBmdW5jdGlvbiByZWRTaGwgKG51bSkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZFNobCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuc2hsKHRoaXMsIG51bSk7XG4gIH07XG5cbiAgQk4ucHJvdG90eXBlLnJlZE11bCA9IGZ1bmN0aW9uIHJlZE11bCAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkTXVsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsIG51bSk7XG4gICAgcmV0dXJuIHRoaXMucmVkLm11bCh0aGlzLCBudW0pO1xuICB9O1xuXG4gIEJOLnByb3RvdHlwZS5yZWRJTXVsID0gZnVuY3Rpb24gcmVkSU11bCAobnVtKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkTXVsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICAgIHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsIG51bSk7XG4gICAgcmV0dXJuIHRoaXMucmVkLmltdWwodGhpcywgbnVtKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkU3FyID0gZnVuY3Rpb24gcmVkU3FyICgpIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWRTcXIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLnNxcih0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkSVNxciA9IGZ1bmN0aW9uIHJlZElTcXIgKCkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZElTcXIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLmlzcXIodGhpcyk7XG4gIH07XG5cbiAgLy8gU3F1YXJlIHJvb3Qgb3ZlciBwXG4gIEJOLnByb3RvdHlwZS5yZWRTcXJ0ID0gZnVuY3Rpb24gcmVkU3FydCAoKSB7XG4gICAgYXNzZXJ0KHRoaXMucmVkLCAncmVkU3FydCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnMnKTtcbiAgICB0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtcbiAgICByZXR1cm4gdGhpcy5yZWQuc3FydCh0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkSW52bSA9IGZ1bmN0aW9uIHJlZEludm0gKCkge1xuICAgIGFzc2VydCh0aGlzLnJlZCwgJ3JlZEludm0gd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLmludm0odGhpcyk7XG4gIH07XG5cbiAgLy8gUmV0dXJuIG5lZ2F0aXZlIGNsb25lIG9mIGB0aGlzYCAlIGByZWQgbW9kdWxvYFxuICBCTi5wcm90b3R5cGUucmVkTmVnID0gZnVuY3Rpb24gcmVkTmVnICgpIHtcbiAgICBhc3NlcnQodGhpcy5yZWQsICdyZWROZWcgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gICAgdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7XG4gICAgcmV0dXJuIHRoaXMucmVkLm5lZyh0aGlzKTtcbiAgfTtcblxuICBCTi5wcm90b3R5cGUucmVkUG93ID0gZnVuY3Rpb24gcmVkUG93IChudW0pIHtcbiAgICBhc3NlcnQodGhpcy5yZWQgJiYgIW51bS5yZWQsICdyZWRQb3cobm9ybWFsTnVtKScpO1xuICAgIHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpO1xuICAgIHJldHVybiB0aGlzLnJlZC5wb3codGhpcywgbnVtKTtcbiAgfTtcblxuICAvLyBQcmltZSBudW1iZXJzIHdpdGggZWZmaWNpZW50IHJlZHVjdGlvblxuICB2YXIgcHJpbWVzID0ge1xuICAgIGsyNTY6IG51bGwsXG4gICAgcDIyNDogbnVsbCxcbiAgICBwMTkyOiBudWxsLFxuICAgIHAyNTUxOTogbnVsbFxuICB9O1xuXG4gIC8vIFBzZXVkby1NZXJzZW5uZSBwcmltZVxuICBmdW5jdGlvbiBNUHJpbWUgKG5hbWUsIHApIHtcbiAgICAvLyBQID0gMiBeIE4gLSBLXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnAgPSBuZXcgQk4ocCwgMTYpO1xuICAgIHRoaXMubiA9IHRoaXMucC5iaXRMZW5ndGgoKTtcbiAgICB0aGlzLmsgPSBuZXcgQk4oMSkuaXVzaGxuKHRoaXMubikuaXN1Yih0aGlzLnApO1xuXG4gICAgdGhpcy50bXAgPSB0aGlzLl90bXAoKTtcbiAgfVxuXG4gIE1QcmltZS5wcm90b3R5cGUuX3RtcCA9IGZ1bmN0aW9uIF90bXAgKCkge1xuICAgIHZhciB0bXAgPSBuZXcgQk4obnVsbCk7XG4gICAgdG1wLndvcmRzID0gbmV3IEFycmF5KE1hdGguY2VpbCh0aGlzLm4gLyAxMykpO1xuICAgIHJldHVybiB0bXA7XG4gIH07XG5cbiAgTVByaW1lLnByb3RvdHlwZS5pcmVkdWNlID0gZnVuY3Rpb24gaXJlZHVjZSAobnVtKSB7XG4gICAgLy8gQXNzdW1lcyB0aGF0IGBudW1gIGlzIGxlc3MgdGhhbiBgUF4yYFxuICAgIC8vIG51bSA9IEhJICogKDIgXiBOIC0gSykgKyBISSAqIEsgKyBMTyA9IEhJICogSyArIExPIChtb2QgUClcbiAgICB2YXIgciA9IG51bTtcbiAgICB2YXIgcmxlbjtcblxuICAgIGRvIHtcbiAgICAgIHRoaXMuc3BsaXQociwgdGhpcy50bXApO1xuICAgICAgciA9IHRoaXMuaW11bEsocik7XG4gICAgICByID0gci5pYWRkKHRoaXMudG1wKTtcbiAgICAgIHJsZW4gPSByLmJpdExlbmd0aCgpO1xuICAgIH0gd2hpbGUgKHJsZW4gPiB0aGlzLm4pO1xuXG4gICAgdmFyIGNtcCA9IHJsZW4gPCB0aGlzLm4gPyAtMSA6IHIudWNtcCh0aGlzLnApO1xuICAgIGlmIChjbXAgPT09IDApIHtcbiAgICAgIHIud29yZHNbMF0gPSAwO1xuICAgICAgci5sZW5ndGggPSAxO1xuICAgIH0gZWxzZSBpZiAoY21wID4gMCkge1xuICAgICAgci5pc3ViKHRoaXMucCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChyLnN0cmlwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gciBpcyBCTiB2NCBpbnN0YW5jZVxuICAgICAgICByLnN0cmlwKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyByIGlzIEJOIHY1IGluc3RhbmNlXG4gICAgICAgIHIuX3N0cmlwKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgTVByaW1lLnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIHNwbGl0IChpbnB1dCwgb3V0KSB7XG4gICAgaW5wdXQuaXVzaHJuKHRoaXMubiwgMCwgb3V0KTtcbiAgfTtcblxuICBNUHJpbWUucHJvdG90eXBlLmltdWxLID0gZnVuY3Rpb24gaW11bEsgKG51bSkge1xuICAgIHJldHVybiBudW0uaW11bCh0aGlzLmspO1xuICB9O1xuXG4gIGZ1bmN0aW9uIEsyNTYgKCkge1xuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICdrMjU2JyxcbiAgICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmMyZicpO1xuICB9XG4gIGluaGVyaXRzKEsyNTYsIE1QcmltZSk7XG5cbiAgSzI1Ni5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiBzcGxpdCAoaW5wdXQsIG91dHB1dCkge1xuICAgIC8vIDI1NiA9IDkgKiAyNiArIDIyXG4gICAgdmFyIG1hc2sgPSAweDNmZmZmZjtcblxuICAgIHZhciBvdXRMZW4gPSBNYXRoLm1pbihpbnB1dC5sZW5ndGgsIDkpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3V0TGVuOyBpKyspIHtcbiAgICAgIG91dHB1dC53b3Jkc1tpXSA9IGlucHV0LndvcmRzW2ldO1xuICAgIH1cbiAgICBvdXRwdXQubGVuZ3RoID0gb3V0TGVuO1xuXG4gICAgaWYgKGlucHV0Lmxlbmd0aCA8PSA5KSB7XG4gICAgICBpbnB1dC53b3Jkc1swXSA9IDA7XG4gICAgICBpbnB1dC5sZW5ndGggPSAxO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFNoaWZ0IGJ5IDkgbGltYnNcbiAgICB2YXIgcHJldiA9IGlucHV0LndvcmRzWzldO1xuICAgIG91dHB1dC53b3Jkc1tvdXRwdXQubGVuZ3RoKytdID0gcHJldiAmIG1hc2s7XG5cbiAgICBmb3IgKGkgPSAxMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbmV4dCA9IGlucHV0LndvcmRzW2ldIHwgMDtcbiAgICAgIGlucHV0LndvcmRzW2kgLSAxMF0gPSAoKG5leHQgJiBtYXNrKSA8PCA0KSB8IChwcmV2ID4+PiAyMik7XG4gICAgICBwcmV2ID0gbmV4dDtcbiAgICB9XG4gICAgcHJldiA+Pj49IDIyO1xuICAgIGlucHV0LndvcmRzW2kgLSAxMF0gPSBwcmV2O1xuICAgIGlmIChwcmV2ID09PSAwICYmIGlucHV0Lmxlbmd0aCA+IDEwKSB7XG4gICAgICBpbnB1dC5sZW5ndGggLT0gMTA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlucHV0Lmxlbmd0aCAtPSA5O1xuICAgIH1cbiAgfTtcblxuICBLMjU2LnByb3RvdHlwZS5pbXVsSyA9IGZ1bmN0aW9uIGltdWxLIChudW0pIHtcbiAgICAvLyBLID0gMHgxMDAwMDAzZDEgPSBbIDB4NDAsIDB4M2QxIF1cbiAgICBudW0ud29yZHNbbnVtLmxlbmd0aF0gPSAwO1xuICAgIG51bS53b3Jkc1tudW0ubGVuZ3RoICsgMV0gPSAwO1xuICAgIG51bS5sZW5ndGggKz0gMjtcblxuICAgIC8vIGJvdW5kZWQgYXQ6IDB4NDAgKiAweDNmZmZmZmYgKyAweDNkMCA9IDB4MTAwMDAwMzkwXG4gICAgdmFyIGxvID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHcgPSBudW0ud29yZHNbaV0gfCAwO1xuICAgICAgbG8gKz0gdyAqIDB4M2QxO1xuICAgICAgbnVtLndvcmRzW2ldID0gbG8gJiAweDNmZmZmZmY7XG4gICAgICBsbyA9IHcgKiAweDQwICsgKChsbyAvIDB4NDAwMDAwMCkgfCAwKTtcbiAgICB9XG5cbiAgICAvLyBGYXN0IGxlbmd0aCByZWR1Y3Rpb25cbiAgICBpZiAobnVtLndvcmRzW251bS5sZW5ndGggLSAxXSA9PT0gMCkge1xuICAgICAgbnVtLmxlbmd0aC0tO1xuICAgICAgaWYgKG51bS53b3Jkc1tudW0ubGVuZ3RoIC0gMV0gPT09IDApIHtcbiAgICAgICAgbnVtLmxlbmd0aC0tO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVtO1xuICB9O1xuXG4gIGZ1bmN0aW9uIFAyMjQgKCkge1xuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICdwMjI0JyxcbiAgICAgICdmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiAwMDAwMDAwMCAwMDAwMDAwMCAwMDAwMDAwMScpO1xuICB9XG4gIGluaGVyaXRzKFAyMjQsIE1QcmltZSk7XG5cbiAgZnVuY3Rpb24gUDE5MiAoKSB7XG4gICAgTVByaW1lLmNhbGwoXG4gICAgICB0aGlzLFxuICAgICAgJ3AxOTInLFxuICAgICAgJ2ZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmJyk7XG4gIH1cbiAgaW5oZXJpdHMoUDE5MiwgTVByaW1lKTtcblxuICBmdW5jdGlvbiBQMjU1MTkgKCkge1xuICAgIC8vIDIgXiAyNTUgLSAxOVxuICAgIE1QcmltZS5jYWxsKFxuICAgICAgdGhpcyxcbiAgICAgICcyNTUxOScsXG4gICAgICAnN2ZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZlZCcpO1xuICB9XG4gIGluaGVyaXRzKFAyNTUxOSwgTVByaW1lKTtcblxuICBQMjU1MTkucHJvdG90eXBlLmltdWxLID0gZnVuY3Rpb24gaW11bEsgKG51bSkge1xuICAgIC8vIEsgPSAweDEzXG4gICAgdmFyIGNhcnJ5ID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGhpID0gKG51bS53b3Jkc1tpXSB8IDApICogMHgxMyArIGNhcnJ5O1xuICAgICAgdmFyIGxvID0gaGkgJiAweDNmZmZmZmY7XG4gICAgICBoaSA+Pj49IDI2O1xuXG4gICAgICBudW0ud29yZHNbaV0gPSBsbztcbiAgICAgIGNhcnJ5ID0gaGk7XG4gICAgfVxuICAgIGlmIChjYXJyeSAhPT0gMCkge1xuICAgICAgbnVtLndvcmRzW251bS5sZW5ndGgrK10gPSBjYXJyeTtcbiAgICB9XG4gICAgcmV0dXJuIG51bTtcbiAgfTtcblxuICAvLyBFeHBvcnRlZCBtb3N0bHkgZm9yIHRlc3RpbmcgcHVycG9zZXMsIHVzZSBwbGFpbiBuYW1lIGluc3RlYWRcbiAgQk4uX3ByaW1lID0gZnVuY3Rpb24gcHJpbWUgKG5hbWUpIHtcbiAgICAvLyBDYWNoZWQgdmVyc2lvbiBvZiBwcmltZVxuICAgIGlmIChwcmltZXNbbmFtZV0pIHJldHVybiBwcmltZXNbbmFtZV07XG5cbiAgICB2YXIgcHJpbWU7XG4gICAgaWYgKG5hbWUgPT09ICdrMjU2Jykge1xuICAgICAgcHJpbWUgPSBuZXcgSzI1NigpO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3AyMjQnKSB7XG4gICAgICBwcmltZSA9IG5ldyBQMjI0KCk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSAncDE5MicpIHtcbiAgICAgIHByaW1lID0gbmV3IFAxOTIoKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdwMjU1MTknKSB7XG4gICAgICBwcmltZSA9IG5ldyBQMjU1MTkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHByaW1lICcgKyBuYW1lKTtcbiAgICB9XG4gICAgcHJpbWVzW25hbWVdID0gcHJpbWU7XG5cbiAgICByZXR1cm4gcHJpbWU7XG4gIH07XG5cbiAgLy9cbiAgLy8gQmFzZSByZWR1Y3Rpb24gZW5naW5lXG4gIC8vXG4gIGZ1bmN0aW9uIFJlZCAobSkge1xuICAgIGlmICh0eXBlb2YgbSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBwcmltZSA9IEJOLl9wcmltZShtKTtcbiAgICAgIHRoaXMubSA9IHByaW1lLnA7XG4gICAgICB0aGlzLnByaW1lID0gcHJpbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFzc2VydChtLmd0bigxKSwgJ21vZHVsdXMgbXVzdCBiZSBncmVhdGVyIHRoYW4gMScpO1xuICAgICAgdGhpcy5tID0gbTtcbiAgICAgIHRoaXMucHJpbWUgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIFJlZC5wcm90b3R5cGUuX3ZlcmlmeTEgPSBmdW5jdGlvbiBfdmVyaWZ5MSAoYSkge1xuICAgIGFzc2VydChhLm5lZ2F0aXZlID09PSAwLCAncmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXMnKTtcbiAgICBhc3NlcnQoYS5yZWQsICdyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzJyk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5fdmVyaWZ5MiA9IGZ1bmN0aW9uIF92ZXJpZnkyIChhLCBiKSB7XG4gICAgYXNzZXJ0KChhLm5lZ2F0aXZlIHwgYi5uZWdhdGl2ZSkgPT09IDAsICdyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlcycpO1xuICAgIGFzc2VydChhLnJlZCAmJiBhLnJlZCA9PT0gYi5yZWQsXG4gICAgICAncmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVycycpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuaW1vZCA9IGZ1bmN0aW9uIGltb2QgKGEpIHtcbiAgICBpZiAodGhpcy5wcmltZSkgcmV0dXJuIHRoaXMucHJpbWUuaXJlZHVjZShhKS5fZm9yY2VSZWQodGhpcyk7XG4gICAgcmV0dXJuIGEudW1vZCh0aGlzLm0pLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uIG5lZyAoYSkge1xuICAgIGlmIChhLmlzWmVybygpKSB7XG4gICAgICByZXR1cm4gYS5jbG9uZSgpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLm0uc3ViKGEpLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIGFkZCAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG5cbiAgICB2YXIgcmVzID0gYS5hZGQoYik7XG4gICAgaWYgKHJlcy5jbXAodGhpcy5tKSA+PSAwKSB7XG4gICAgICByZXMuaXN1Yih0aGlzLm0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmlhZGQgPSBmdW5jdGlvbiBpYWRkIChhLCBiKSB7XG4gICAgdGhpcy5fdmVyaWZ5MihhLCBiKTtcblxuICAgIHZhciByZXMgPSBhLmlhZGQoYik7XG4gICAgaWYgKHJlcy5jbXAodGhpcy5tKSA+PSAwKSB7XG4gICAgICByZXMuaXN1Yih0aGlzLm0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuc3ViID0gZnVuY3Rpb24gc3ViIChhLCBiKSB7XG4gICAgdGhpcy5fdmVyaWZ5MihhLCBiKTtcblxuICAgIHZhciByZXMgPSBhLnN1YihiKTtcbiAgICBpZiAocmVzLmNtcG4oMCkgPCAwKSB7XG4gICAgICByZXMuaWFkZCh0aGlzLm0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLl9mb3JjZVJlZCh0aGlzKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmlzdWIgPSBmdW5jdGlvbiBpc3ViIChhLCBiKSB7XG4gICAgdGhpcy5fdmVyaWZ5MihhLCBiKTtcblxuICAgIHZhciByZXMgPSBhLmlzdWIoYik7XG4gICAgaWYgKHJlcy5jbXBuKDApIDwgMCkge1xuICAgICAgcmVzLmlhZGQodGhpcy5tKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLnNobCA9IGZ1bmN0aW9uIHNobCAoYSwgbnVtKSB7XG4gICAgdGhpcy5fdmVyaWZ5MShhKTtcbiAgICByZXR1cm4gdGhpcy5pbW9kKGEudXNobG4obnVtKSk7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5pbXVsID0gZnVuY3Rpb24gaW11bCAoYSwgYikge1xuICAgIHRoaXMuX3ZlcmlmeTIoYSwgYik7XG4gICAgcmV0dXJuIHRoaXMuaW1vZChhLmltdWwoYikpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUubXVsID0gZnVuY3Rpb24gbXVsIChhLCBiKSB7XG4gICAgdGhpcy5fdmVyaWZ5MihhLCBiKTtcbiAgICByZXR1cm4gdGhpcy5pbW9kKGEubXVsKGIpKTtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmlzcXIgPSBmdW5jdGlvbiBpc3FyIChhKSB7XG4gICAgcmV0dXJuIHRoaXMuaW11bChhLCBhLmNsb25lKCkpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuc3FyID0gZnVuY3Rpb24gc3FyIChhKSB7XG4gICAgcmV0dXJuIHRoaXMubXVsKGEsIGEpO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuc3FydCA9IGZ1bmN0aW9uIHNxcnQgKGEpIHtcbiAgICBpZiAoYS5pc1plcm8oKSkgcmV0dXJuIGEuY2xvbmUoKTtcblxuICAgIHZhciBtb2QzID0gdGhpcy5tLmFuZGxuKDMpO1xuICAgIGFzc2VydChtb2QzICUgMiA9PT0gMSk7XG5cbiAgICAvLyBGYXN0IGNhc2VcbiAgICBpZiAobW9kMyA9PT0gMykge1xuICAgICAgdmFyIHBvdyA9IHRoaXMubS5hZGQobmV3IEJOKDEpKS5pdXNocm4oMik7XG4gICAgICByZXR1cm4gdGhpcy5wb3coYSwgcG93KTtcbiAgICB9XG5cbiAgICAvLyBUb25lbGxpLVNoYW5rcyBhbGdvcml0aG0gKFRvdGFsbHkgdW5vcHRpbWl6ZWQgYW5kIHNsb3cpXG4gICAgLy9cbiAgICAvLyBGaW5kIFEgYW5kIFMsIHRoYXQgUSAqIDIgXiBTID0gKFAgLSAxKVxuICAgIHZhciBxID0gdGhpcy5tLnN1Ym4oMSk7XG4gICAgdmFyIHMgPSAwO1xuICAgIHdoaWxlICghcS5pc1plcm8oKSAmJiBxLmFuZGxuKDEpID09PSAwKSB7XG4gICAgICBzKys7XG4gICAgICBxLml1c2hybigxKTtcbiAgICB9XG4gICAgYXNzZXJ0KCFxLmlzWmVybygpKTtcblxuICAgIHZhciBvbmUgPSBuZXcgQk4oMSkudG9SZWQodGhpcyk7XG4gICAgdmFyIG5PbmUgPSBvbmUucmVkTmVnKCk7XG5cbiAgICAvLyBGaW5kIHF1YWRyYXRpYyBub24tcmVzaWR1ZVxuICAgIC8vIE5PVEU6IE1heCBpcyBzdWNoIGJlY2F1c2Ugb2YgZ2VuZXJhbGl6ZWQgUmllbWFubiBoeXBvdGhlc2lzLlxuICAgIHZhciBscG93ID0gdGhpcy5tLnN1Ym4oMSkuaXVzaHJuKDEpO1xuICAgIHZhciB6ID0gdGhpcy5tLmJpdExlbmd0aCgpO1xuICAgIHogPSBuZXcgQk4oMiAqIHogKiB6KS50b1JlZCh0aGlzKTtcblxuICAgIHdoaWxlICh0aGlzLnBvdyh6LCBscG93KS5jbXAobk9uZSkgIT09IDApIHtcbiAgICAgIHoucmVkSUFkZChuT25lKTtcbiAgICB9XG5cbiAgICB2YXIgYyA9IHRoaXMucG93KHosIHEpO1xuICAgIHZhciByID0gdGhpcy5wb3coYSwgcS5hZGRuKDEpLml1c2hybigxKSk7XG4gICAgdmFyIHQgPSB0aGlzLnBvdyhhLCBxKTtcbiAgICB2YXIgbSA9IHM7XG4gICAgd2hpbGUgKHQuY21wKG9uZSkgIT09IDApIHtcbiAgICAgIHZhciB0bXAgPSB0O1xuICAgICAgZm9yICh2YXIgaSA9IDA7IHRtcC5jbXAob25lKSAhPT0gMDsgaSsrKSB7XG4gICAgICAgIHRtcCA9IHRtcC5yZWRTcXIoKTtcbiAgICAgIH1cbiAgICAgIGFzc2VydChpIDwgbSk7XG4gICAgICB2YXIgYiA9IHRoaXMucG93KGMsIG5ldyBCTigxKS5pdXNobG4obSAtIGkgLSAxKSk7XG5cbiAgICAgIHIgPSByLnJlZE11bChiKTtcbiAgICAgIGMgPSBiLnJlZFNxcigpO1xuICAgICAgdCA9IHQucmVkTXVsKGMpO1xuICAgICAgbSA9IGk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHI7XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5pbnZtID0gZnVuY3Rpb24gaW52bSAoYSkge1xuICAgIHZhciBpbnYgPSBhLl9pbnZtcCh0aGlzLm0pO1xuICAgIGlmIChpbnYubmVnYXRpdmUgIT09IDApIHtcbiAgICAgIGludi5uZWdhdGl2ZSA9IDA7XG4gICAgICByZXR1cm4gdGhpcy5pbW9kKGludikucmVkTmVnKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmltb2QoaW52KTtcbiAgICB9XG4gIH07XG5cbiAgUmVkLnByb3RvdHlwZS5wb3cgPSBmdW5jdGlvbiBwb3cgKGEsIG51bSkge1xuICAgIGlmIChudW0uaXNaZXJvKCkpIHJldHVybiBuZXcgQk4oMSkudG9SZWQodGhpcyk7XG4gICAgaWYgKG51bS5jbXBuKDEpID09PSAwKSByZXR1cm4gYS5jbG9uZSgpO1xuXG4gICAgdmFyIHdpbmRvd1NpemUgPSA0O1xuICAgIHZhciB3bmQgPSBuZXcgQXJyYXkoMSA8PCB3aW5kb3dTaXplKTtcbiAgICB3bmRbMF0gPSBuZXcgQk4oMSkudG9SZWQodGhpcyk7XG4gICAgd25kWzFdID0gYTtcbiAgICBmb3IgKHZhciBpID0gMjsgaSA8IHduZC5sZW5ndGg7IGkrKykge1xuICAgICAgd25kW2ldID0gdGhpcy5tdWwod25kW2kgLSAxXSwgYSk7XG4gICAgfVxuXG4gICAgdmFyIHJlcyA9IHduZFswXTtcbiAgICB2YXIgY3VycmVudCA9IDA7XG4gICAgdmFyIGN1cnJlbnRMZW4gPSAwO1xuICAgIHZhciBzdGFydCA9IG51bS5iaXRMZW5ndGgoKSAlIDI2O1xuICAgIGlmIChzdGFydCA9PT0gMCkge1xuICAgICAgc3RhcnQgPSAyNjtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSBudW0ubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciB3b3JkID0gbnVtLndvcmRzW2ldO1xuICAgICAgZm9yICh2YXIgaiA9IHN0YXJ0IC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgICAgICAgdmFyIGJpdCA9ICh3b3JkID4+IGopICYgMTtcbiAgICAgICAgaWYgKHJlcyAhPT0gd25kWzBdKSB7XG4gICAgICAgICAgcmVzID0gdGhpcy5zcXIocmVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChiaXQgPT09IDAgJiYgY3VycmVudCA9PT0gMCkge1xuICAgICAgICAgIGN1cnJlbnRMZW4gPSAwO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudCA8PD0gMTtcbiAgICAgICAgY3VycmVudCB8PSBiaXQ7XG4gICAgICAgIGN1cnJlbnRMZW4rKztcbiAgICAgICAgaWYgKGN1cnJlbnRMZW4gIT09IHdpbmRvd1NpemUgJiYgKGkgIT09IDAgfHwgaiAhPT0gMCkpIGNvbnRpbnVlO1xuXG4gICAgICAgIHJlcyA9IHRoaXMubXVsKHJlcywgd25kW2N1cnJlbnRdKTtcbiAgICAgICAgY3VycmVudExlbiA9IDA7XG4gICAgICAgIGN1cnJlbnQgPSAwO1xuICAgICAgfVxuICAgICAgc3RhcnQgPSAyNjtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIFJlZC5wcm90b3R5cGUuY29udmVydFRvID0gZnVuY3Rpb24gY29udmVydFRvIChudW0pIHtcbiAgICB2YXIgciA9IG51bS51bW9kKHRoaXMubSk7XG5cbiAgICByZXR1cm4gciA9PT0gbnVtID8gci5jbG9uZSgpIDogcjtcbiAgfTtcblxuICBSZWQucHJvdG90eXBlLmNvbnZlcnRGcm9tID0gZnVuY3Rpb24gY29udmVydEZyb20gKG51bSkge1xuICAgIHZhciByZXMgPSBudW0uY2xvbmUoKTtcbiAgICByZXMucmVkID0gbnVsbDtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xuXG4gIC8vXG4gIC8vIE1vbnRnb21lcnkgbWV0aG9kIGVuZ2luZVxuICAvL1xuXG4gIEJOLm1vbnQgPSBmdW5jdGlvbiBtb250IChudW0pIHtcbiAgICByZXR1cm4gbmV3IE1vbnQobnVtKTtcbiAgfTtcblxuICBmdW5jdGlvbiBNb250IChtKSB7XG4gICAgUmVkLmNhbGwodGhpcywgbSk7XG5cbiAgICB0aGlzLnNoaWZ0ID0gdGhpcy5tLmJpdExlbmd0aCgpO1xuICAgIGlmICh0aGlzLnNoaWZ0ICUgMjYgIT09IDApIHtcbiAgICAgIHRoaXMuc2hpZnQgKz0gMjYgLSAodGhpcy5zaGlmdCAlIDI2KTtcbiAgICB9XG5cbiAgICB0aGlzLnIgPSBuZXcgQk4oMSkuaXVzaGxuKHRoaXMuc2hpZnQpO1xuICAgIHRoaXMucjIgPSB0aGlzLmltb2QodGhpcy5yLnNxcigpKTtcbiAgICB0aGlzLnJpbnYgPSB0aGlzLnIuX2ludm1wKHRoaXMubSk7XG5cbiAgICB0aGlzLm1pbnYgPSB0aGlzLnJpbnYubXVsKHRoaXMucikuaXN1Ym4oMSkuZGl2KHRoaXMubSk7XG4gICAgdGhpcy5taW52ID0gdGhpcy5taW52LnVtb2QodGhpcy5yKTtcbiAgICB0aGlzLm1pbnYgPSB0aGlzLnIuc3ViKHRoaXMubWludik7XG4gIH1cbiAgaW5oZXJpdHMoTW9udCwgUmVkKTtcblxuICBNb250LnByb3RvdHlwZS5jb252ZXJ0VG8gPSBmdW5jdGlvbiBjb252ZXJ0VG8gKG51bSkge1xuICAgIHJldHVybiB0aGlzLmltb2QobnVtLnVzaGxuKHRoaXMuc2hpZnQpKTtcbiAgfTtcblxuICBNb250LnByb3RvdHlwZS5jb252ZXJ0RnJvbSA9IGZ1bmN0aW9uIGNvbnZlcnRGcm9tIChudW0pIHtcbiAgICB2YXIgciA9IHRoaXMuaW1vZChudW0ubXVsKHRoaXMucmludikpO1xuICAgIHIucmVkID0gbnVsbDtcbiAgICByZXR1cm4gcjtcbiAgfTtcblxuICBNb250LnByb3RvdHlwZS5pbXVsID0gZnVuY3Rpb24gaW11bCAoYSwgYikge1xuICAgIGlmIChhLmlzWmVybygpIHx8IGIuaXNaZXJvKCkpIHtcbiAgICAgIGEud29yZHNbMF0gPSAwO1xuICAgICAgYS5sZW5ndGggPSAxO1xuICAgICAgcmV0dXJuIGE7XG4gICAgfVxuXG4gICAgdmFyIHQgPSBhLmltdWwoYik7XG4gICAgdmFyIGMgPSB0Lm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKTtcbiAgICB2YXIgdSA9IHQuaXN1YihjKS5pdXNocm4odGhpcy5zaGlmdCk7XG4gICAgdmFyIHJlcyA9IHU7XG5cbiAgICBpZiAodS5jbXAodGhpcy5tKSA+PSAwKSB7XG4gICAgICByZXMgPSB1LmlzdWIodGhpcy5tKTtcbiAgICB9IGVsc2UgaWYgKHUuY21wbigwKSA8IDApIHtcbiAgICAgIHJlcyA9IHUuaWFkZCh0aGlzLm0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXMuX2ZvcmNlUmVkKHRoaXMpO1xuICB9O1xuXG4gIE1vbnQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uIG11bCAoYSwgYikge1xuICAgIGlmIChhLmlzWmVybygpIHx8IGIuaXNaZXJvKCkpIHJldHVybiBuZXcgQk4oMCkuX2ZvcmNlUmVkKHRoaXMpO1xuXG4gICAgdmFyIHQgPSBhLm11bChiKTtcbiAgICB2YXIgYyA9IHQubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pO1xuICAgIHZhciB1ID0gdC5pc3ViKGMpLml1c2hybih0aGlzLnNoaWZ0KTtcbiAgICB2YXIgcmVzID0gdTtcbiAgICBpZiAodS5jbXAodGhpcy5tKSA+PSAwKSB7XG4gICAgICByZXMgPSB1LmlzdWIodGhpcy5tKTtcbiAgICB9IGVsc2UgaWYgKHUuY21wbigwKSA8IDApIHtcbiAgICAgIHJlcyA9IHUuaWFkZCh0aGlzLm0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXMuX2ZvcmNlUmVkKHRoaXMpO1xuICB9O1xuXG4gIE1vbnQucHJvdG90eXBlLmludm0gPSBmdW5jdGlvbiBpbnZtIChhKSB7XG4gICAgLy8gKEFSKV4tMSAqIFJeMiA9IChBXi0xICogUl4tMSkgKiBSXjIgPSBBXi0xICogUlxuICAgIHZhciByZXMgPSB0aGlzLmltb2QoYS5faW52bXAodGhpcy5tKS5tdWwodGhpcy5yMikpO1xuICAgIHJldHVybiByZXMuX2ZvcmNlUmVkKHRoaXMpO1xuICB9O1xufSkodHlwZW9mIG1vZHVsZSA9PT0gJ3VuZGVmaW5lZCcgfHwgbW9kdWxlLCB0aGlzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/base-x/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/base-x/src/index.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9iYXNlLXgvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLDJDQUEyQztBQUMzQywrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2Q0FBNkM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVksU0FBUztBQUNoQztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9ub2RlX21vZHVsZXMvYmFzZS14L3NyYy9pbmRleC5qcz9iYWNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuLy8gYmFzZS14IGVuY29kaW5nIC8gZGVjb2Rpbmdcbi8vIENvcHlyaWdodCAoYykgMjAxOCBiYXNlLXggY29udHJpYnV0b3JzXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxOCBUaGUgQml0Y29pbiBDb3JlIGRldmVsb3BlcnMgKGJhc2U1OC5jcHApXG4vLyBEaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIHNvZnR3YXJlIGxpY2Vuc2UsIHNlZSB0aGUgYWNjb21wYW55aW5nXG4vLyBmaWxlIExJQ0VOU0Ugb3IgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAuXG5mdW5jdGlvbiBiYXNlIChBTFBIQUJFVCkge1xuICBpZiAoQUxQSEFCRVQubGVuZ3RoID49IDI1NSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdBbHBoYWJldCB0b28gbG9uZycpIH1cbiAgdmFyIEJBU0VfTUFQID0gbmV3IFVpbnQ4QXJyYXkoMjU2KVxuICBmb3IgKHZhciBqID0gMDsgaiA8IEJBU0VfTUFQLmxlbmd0aDsgaisrKSB7XG4gICAgQkFTRV9NQVBbal0gPSAyNTVcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IEFMUEhBQkVULmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHggPSBBTFBIQUJFVC5jaGFyQXQoaSlcbiAgICB2YXIgeGMgPSB4LmNoYXJDb2RlQXQoMClcbiAgICBpZiAoQkFTRV9NQVBbeGNdICE9PSAyNTUpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcih4ICsgJyBpcyBhbWJpZ3VvdXMnKSB9XG4gICAgQkFTRV9NQVBbeGNdID0gaVxuICB9XG4gIHZhciBCQVNFID0gQUxQSEFCRVQubGVuZ3RoXG4gIHZhciBMRUFERVIgPSBBTFBIQUJFVC5jaGFyQXQoMClcbiAgdmFyIEZBQ1RPUiA9IE1hdGgubG9nKEJBU0UpIC8gTWF0aC5sb2coMjU2KSAvLyBsb2coQkFTRSkgLyBsb2coMjU2KSwgcm91bmRlZCB1cFxuICB2YXIgaUZBQ1RPUiA9IE1hdGgubG9nKDI1NikgLyBNYXRoLmxvZyhCQVNFKSAvLyBsb2coMjU2KSAvIGxvZyhCQVNFKSwgcm91bmRlZCB1cFxuICBmdW5jdGlvbiBlbmNvZGUgKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgfSBlbHNlIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoc291cmNlKSkge1xuICAgICAgc291cmNlID0gbmV3IFVpbnQ4QXJyYXkoc291cmNlLmJ1ZmZlciwgc291cmNlLmJ5dGVPZmZzZXQsIHNvdXJjZS5ieXRlTGVuZ3RoKVxuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBVaW50OEFycmF5LmZyb20oc291cmNlKVxuICAgIH1cbiAgICBpZiAoIShzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBVaW50OEFycmF5JykgfVxuICAgIGlmIChzb3VyY2UubGVuZ3RoID09PSAwKSB7IHJldHVybiAnJyB9XG4gICAgICAgIC8vIFNraXAgJiBjb3VudCBsZWFkaW5nIHplcm9lcy5cbiAgICB2YXIgemVyb2VzID0gMFxuICAgIHZhciBsZW5ndGggPSAwXG4gICAgdmFyIHBiZWdpbiA9IDBcbiAgICB2YXIgcGVuZCA9IHNvdXJjZS5sZW5ndGhcbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kICYmIHNvdXJjZVtwYmVnaW5dID09PSAwKSB7XG4gICAgICBwYmVnaW4rK1xuICAgICAgemVyb2VzKytcbiAgICB9XG4gICAgICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2U1OCByZXByZXNlbnRhdGlvbi5cbiAgICB2YXIgc2l6ZSA9ICgocGVuZCAtIHBiZWdpbikgKiBpRkFDVE9SICsgMSkgPj4+IDBcbiAgICB2YXIgYjU4ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSlcbiAgICAgICAgLy8gUHJvY2VzcyB0aGUgYnl0ZXMuXG4gICAgd2hpbGUgKHBiZWdpbiAhPT0gcGVuZCkge1xuICAgICAgdmFyIGNhcnJ5ID0gc291cmNlW3BiZWdpbl1cbiAgICAgICAgICAgIC8vIEFwcGx5IFwiYjU4ID0gYjU4ICogMjU2ICsgY2hcIi5cbiAgICAgIHZhciBpID0gMFxuICAgICAgZm9yICh2YXIgaXQxID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiAoaXQxICE9PSAtMSk7IGl0MS0tLCBpKyspIHtcbiAgICAgICAgY2FycnkgKz0gKDI1NiAqIGI1OFtpdDFdKSA+Pj4gMFxuICAgICAgICBiNThbaXQxXSA9IChjYXJyeSAlIEJBU0UpID4+PiAwXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgPj4+IDBcbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5JykgfVxuICAgICAgbGVuZ3RoID0gaVxuICAgICAgcGJlZ2luKytcbiAgICB9XG4gICAgICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXMgaW4gYmFzZTU4IHJlc3VsdC5cbiAgICB2YXIgaXQyID0gc2l6ZSAtIGxlbmd0aFxuICAgIHdoaWxlIChpdDIgIT09IHNpemUgJiYgYjU4W2l0Ml0gPT09IDApIHtcbiAgICAgIGl0MisrXG4gICAgfVxuICAgICAgICAvLyBUcmFuc2xhdGUgdGhlIHJlc3VsdCBpbnRvIGEgc3RyaW5nLlxuICAgIHZhciBzdHIgPSBMRUFERVIucmVwZWF0KHplcm9lcylcbiAgICBmb3IgKDsgaXQyIDwgc2l6ZTsgKytpdDIpIHsgc3RyICs9IEFMUEhBQkVULmNoYXJBdChiNThbaXQyXSkgfVxuICAgIHJldHVybiBzdHJcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUgKHNvdXJjZSkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnc3RyaW5nJykgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBTdHJpbmcnKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KCkgfVxuICAgIHZhciBwc3ogPSAwXG4gICAgICAgIC8vIFNraXAgYW5kIGNvdW50IGxlYWRpbmcgJzEncy5cbiAgICB2YXIgemVyb2VzID0gMFxuICAgIHZhciBsZW5ndGggPSAwXG4gICAgd2hpbGUgKHNvdXJjZVtwc3pdID09PSBMRUFERVIpIHtcbiAgICAgIHplcm9lcysrXG4gICAgICBwc3orK1xuICAgIH1cbiAgICAgICAgLy8gQWxsb2NhdGUgZW5vdWdoIHNwYWNlIGluIGJpZy1lbmRpYW4gYmFzZTI1NiByZXByZXNlbnRhdGlvbi5cbiAgICB2YXIgc2l6ZSA9ICgoKHNvdXJjZS5sZW5ndGggLSBwc3opICogRkFDVE9SKSArIDEpID4+PiAwIC8vIGxvZyg1OCkgLyBsb2coMjU2KSwgcm91bmRlZCB1cC5cbiAgICB2YXIgYjI1NiA9IG5ldyBVaW50OEFycmF5KHNpemUpXG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGNoYXJhY3RlcnMuXG4gICAgd2hpbGUgKHNvdXJjZVtwc3pdKSB7XG4gICAgICAgICAgICAvLyBEZWNvZGUgY2hhcmFjdGVyXG4gICAgICB2YXIgY2FycnkgPSBCQVNFX01BUFtzb3VyY2UuY2hhckNvZGVBdChwc3opXVxuICAgICAgICAgICAgLy8gSW52YWxpZCBjaGFyYWN0ZXJcbiAgICAgIGlmIChjYXJyeSA9PT0gMjU1KSB7IHJldHVybiB9XG4gICAgICB2YXIgaSA9IDBcbiAgICAgIGZvciAodmFyIGl0MyA9IHNpemUgLSAxOyAoY2FycnkgIT09IDAgfHwgaSA8IGxlbmd0aCkgJiYgKGl0MyAhPT0gLTEpOyBpdDMtLSwgaSsrKSB7XG4gICAgICAgIGNhcnJ5ICs9IChCQVNFICogYjI1NltpdDNdKSA+Pj4gMFxuICAgICAgICBiMjU2W2l0M10gPSAoY2FycnkgJSAyNTYpID4+PiAwXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gMjU2KSA+Pj4gMFxuICAgICAgfVxuICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7IHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKSB9XG4gICAgICBsZW5ndGggPSBpXG4gICAgICBwc3orK1xuICAgIH1cbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiMjU2LlxuICAgIHZhciBpdDQgPSBzaXplIC0gbGVuZ3RoXG4gICAgd2hpbGUgKGl0NCAhPT0gc2l6ZSAmJiBiMjU2W2l0NF0gPT09IDApIHtcbiAgICAgIGl0NCsrXG4gICAgfVxuICAgIHZhciB2Y2ggPSBuZXcgVWludDhBcnJheSh6ZXJvZXMgKyAoc2l6ZSAtIGl0NCkpXG4gICAgdmFyIGogPSB6ZXJvZXNcbiAgICB3aGlsZSAoaXQ0ICE9PSBzaXplKSB7XG4gICAgICB2Y2hbaisrXSA9IGIyNTZbaXQ0KytdXG4gICAgfVxuICAgIHJldHVybiB2Y2hcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGUgKHN0cmluZykge1xuICAgIHZhciBidWZmZXIgPSBkZWNvZGVVbnNhZmUoc3RyaW5nKVxuICAgIGlmIChidWZmZXIpIHsgcmV0dXJuIGJ1ZmZlciB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb24tYmFzZScgKyBCQVNFICsgJyBjaGFyYWN0ZXInKVxuICB9XG4gIHJldHVybiB7XG4gICAgZW5jb2RlOiBlbmNvZGUsXG4gICAgZGVjb2RlVW5zYWZlOiBkZWNvZGVVbnNhZmUsXG4gICAgZGVjb2RlOiBkZWNvZGVcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBiYXNlXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/base-x/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/bs58/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const basex = __webpack_require__(/*! base-x */ \"(ssr)/./node_modules/@irys/sdk/node_modules/base-x/src/index.js\")\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9iczU4L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQywrRUFBUTtBQUM5Qjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9ub2RlX21vZHVsZXMvYnM1OC9pbmRleC5qcz8zNTkyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2V4ID0gcmVxdWlyZSgnYmFzZS14JylcbmNvbnN0IEFMUEhBQkVUID0gJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZXgoQUxQSEFCRVQpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/arweave.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/arweave.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* binding */ Arweave),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _blocks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blocks.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/blocks.js\");\n/* harmony import */ var _chunks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunks.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/chunks.js\");\n/* harmony import */ var _lib_crypto_crypto_augment_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/crypto/crypto-augment.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/crypto-augment.js\");\n/* harmony import */ var _lib_deepHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/deepHash.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/deepHash.js\");\n/* harmony import */ var _lib_fallbackApi_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fallbackApi.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/fallbackApi.js\");\n/* harmony import */ var _lib_merkle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/merkle.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/merkle.js\");\n/* harmony import */ var _lib_transaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/transaction.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/* harmony import */ var _network_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./network.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/network.js\");\n/* harmony import */ var _transactions_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transactions.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/transactions.js\");\n/* harmony import */ var _wallets_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wallets.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/wallets.js\");\n// import Ar from \"./ar\";\n\n\n\n\n\n\n\n\n\n\n\nclass Arweave {\n    config;\n    api;\n    wallets;\n    transactions;\n    network;\n    blocks;\n    chunks;\n    static init;\n    static utils = _lib_utils_js__WEBPACK_IMPORTED_MODULE_7__;\n    crypto;\n    deepHash;\n    merkle;\n    static VERSION = \"0.0.1\";\n    constructor(config) {\n        this.config = config;\n        if (!config.crypto)\n            throw new Error(`config.crypto is required`); // `crypto` is automatically added by the wrapper constructors, users should never encounter this\n        this.crypto = (0,_lib_crypto_crypto_augment_js__WEBPACK_IMPORTED_MODULE_2__.augmentCrypto)(config.crypto, { deepHash: _lib_deepHash_js__WEBPACK_IMPORTED_MODULE_3__.DeepHash });\n        this.deepHash = this.crypto.deepHash;\n        const apiConfig = config.gateways ? (Array.isArray(config.gateways) ? config.gateways : [config.gateways]) : undefined;\n        this.api = new _lib_fallbackApi_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({ gateways: apiConfig, miners: config.miners });\n        this.wallets = new _wallets_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this.api, this.crypto);\n        this.chunks = new _chunks_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.api);\n        this.network = new _network_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this.api);\n        this.blocks = new _blocks_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.api, this.network);\n        this.merkle = new _lib_merkle_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({ deps: { crypto: this.crypto } });\n        this.transactions = new _transactions_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n            deps: { api: this.api, crypto: config.crypto, chunks: this.chunks, merkle: this.merkle, deepHash: this.deepHash },\n        });\n    }\n    get utils() {\n        return Arweave.utils;\n    }\n    getConfig() {\n        return this.config;\n    }\n    async createTransaction(attributes, jwk) {\n        const transaction = {};\n        Object.assign(transaction, attributes);\n        if (!attributes.data && !(attributes.target && attributes.quantity)) {\n            throw new Error(`A new Arweave transaction must have a 'data' value, or 'target' and 'quantity' values.`);\n        }\n        if (attributes.owner == undefined) {\n            if (jwk && jwk !== \"use_wallet\") {\n                transaction.owner = jwk.n;\n            }\n        }\n        if (attributes.last_tx == undefined) {\n            transaction.last_tx = await this.transactions.getTransactionAnchor();\n        }\n        if (typeof attributes.data === \"string\") {\n            attributes.data = _lib_utils_js__WEBPACK_IMPORTED_MODULE_7__.stringToBuffer(attributes.data);\n        }\n        if (attributes.data instanceof ArrayBuffer) {\n            attributes.data = new Uint8Array(attributes.data);\n        }\n        if (attributes.data && !(attributes.data instanceof Uint8Array)) {\n            throw new Error(\"Expected data to be a string, Uint8Array or ArrayBuffer\");\n        }\n        if (attributes.reward == undefined) {\n            const length = attributes.data ? attributes.data.byteLength : 0;\n            transaction.reward = await this.transactions.getPrice(length, transaction.target);\n        }\n        // here we should call prepare chunk\n        transaction.data_root = \"\";\n        transaction.data_size = attributes.data ? attributes.data.byteLength.toString() : \"0\";\n        transaction.data = attributes.data || new Uint8Array(0);\n        const createdTransaction = new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n            attributes: transaction,\n            deps: { merkle: this.merkle, deepHash: this.deepHash },\n        });\n        await createdTransaction.getSignatureData();\n        return createdTransaction;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arweave);\n//# sourceMappingURL=arweave.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2Fyd2VhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2lDO0FBQ0E7QUFDOEI7QUFDbEI7QUFDRTtBQUNWO0FBQ1U7QUFDQTtBQUNaO0FBQ1U7QUFDVjtBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMENBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQsc0JBQXNCLDRFQUFhLGtCQUFrQixVQUFVLHNEQUFRLEVBQUU7QUFDekU7QUFDQTtBQUNBLHVCQUF1QiwyREFBVyxHQUFHLDRDQUE0QztBQUNqRiwyQkFBMkIsb0RBQU87QUFDbEMsMEJBQTBCLGtEQUFNO0FBQ2hDLDJCQUEyQixtREFBTztBQUNsQywwQkFBMEIsa0RBQU07QUFDaEMsMEJBQTBCLHNEQUFNLEdBQUcsUUFBUSx1QkFBdUI7QUFDbEUsZ0NBQWdDLHdEQUFZO0FBQzVDLG9CQUFvQix5R0FBeUc7QUFDN0gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlEQUEyQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsMkRBQVc7QUFDbEQ7QUFDQSxvQkFBb0IsOENBQThDO0FBQ2xFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLE9BQU8sRUFBQztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9hcndlYXZlLmpzP2Y0NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEFyIGZyb20gXCIuL2FyXCI7XG5pbXBvcnQgQmxvY2tzIGZyb20gXCIuL2Jsb2Nrcy5qc1wiO1xuaW1wb3J0IENodW5rcyBmcm9tIFwiLi9jaHVua3MuanNcIjtcbmltcG9ydCB7IGF1Z21lbnRDcnlwdG8gfSBmcm9tIFwiLi9saWIvY3J5cHRvL2NyeXB0by1hdWdtZW50LmpzXCI7XG5pbXBvcnQgeyBEZWVwSGFzaCB9IGZyb20gXCIuL2xpYi9kZWVwSGFzaC5qc1wiO1xuaW1wb3J0IEZhbGxiYWNrQXBpIGZyb20gXCIuL2xpYi9mYWxsYmFja0FwaS5qc1wiO1xuaW1wb3J0IE1lcmtsZSBmcm9tIFwiLi9saWIvbWVya2xlLmpzXCI7XG5pbXBvcnQgVHJhbnNhY3Rpb24gZnJvbSBcIi4vbGliL3RyYW5zYWN0aW9uLmpzXCI7XG5pbXBvcnQgKiBhcyBBcndlYXZlVXRpbHMgZnJvbSBcIi4vbGliL3V0aWxzLmpzXCI7XG5pbXBvcnQgTmV0d29yayBmcm9tIFwiLi9uZXR3b3JrLmpzXCI7XG5pbXBvcnQgVHJhbnNhY3Rpb25zIGZyb20gXCIuL3RyYW5zYWN0aW9ucy5qc1wiO1xuaW1wb3J0IFdhbGxldHMgZnJvbSBcIi4vd2FsbGV0cy5qc1wiO1xuZXhwb3J0IGNsYXNzIEFyd2VhdmUge1xuICAgIGNvbmZpZztcbiAgICBhcGk7XG4gICAgd2FsbGV0cztcbiAgICB0cmFuc2FjdGlvbnM7XG4gICAgbmV0d29yaztcbiAgICBibG9ja3M7XG4gICAgY2h1bmtzO1xuICAgIHN0YXRpYyBpbml0O1xuICAgIHN0YXRpYyB1dGlscyA9IEFyd2VhdmVVdGlscztcbiAgICBjcnlwdG87XG4gICAgZGVlcEhhc2g7XG4gICAgbWVya2xlO1xuICAgIHN0YXRpYyBWRVJTSU9OID0gXCIwLjAuMVwiO1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICAgICAgaWYgKCFjb25maWcuY3J5cHRvKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBjb25maWcuY3J5cHRvIGlzIHJlcXVpcmVkYCk7IC8vIGBjcnlwdG9gIGlzIGF1dG9tYXRpY2FsbHkgYWRkZWQgYnkgdGhlIHdyYXBwZXIgY29uc3RydWN0b3JzLCB1c2VycyBzaG91bGQgbmV2ZXIgZW5jb3VudGVyIHRoaXNcbiAgICAgICAgdGhpcy5jcnlwdG8gPSBhdWdtZW50Q3J5cHRvKGNvbmZpZy5jcnlwdG8sIHsgZGVlcEhhc2g6IERlZXBIYXNoIH0pO1xuICAgICAgICB0aGlzLmRlZXBIYXNoID0gdGhpcy5jcnlwdG8uZGVlcEhhc2g7XG4gICAgICAgIGNvbnN0IGFwaUNvbmZpZyA9IGNvbmZpZy5nYXRld2F5cyA/IChBcnJheS5pc0FycmF5KGNvbmZpZy5nYXRld2F5cykgPyBjb25maWcuZ2F0ZXdheXMgOiBbY29uZmlnLmdhdGV3YXlzXSkgOiB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuYXBpID0gbmV3IEZhbGxiYWNrQXBpKHsgZ2F0ZXdheXM6IGFwaUNvbmZpZywgbWluZXJzOiBjb25maWcubWluZXJzIH0pO1xuICAgICAgICB0aGlzLndhbGxldHMgPSBuZXcgV2FsbGV0cyh0aGlzLmFwaSwgdGhpcy5jcnlwdG8pO1xuICAgICAgICB0aGlzLmNodW5rcyA9IG5ldyBDaHVua3ModGhpcy5hcGkpO1xuICAgICAgICB0aGlzLm5ldHdvcmsgPSBuZXcgTmV0d29yayh0aGlzLmFwaSk7XG4gICAgICAgIHRoaXMuYmxvY2tzID0gbmV3IEJsb2Nrcyh0aGlzLmFwaSwgdGhpcy5uZXR3b3JrKTtcbiAgICAgICAgdGhpcy5tZXJrbGUgPSBuZXcgTWVya2xlKHsgZGVwczogeyBjcnlwdG86IHRoaXMuY3J5cHRvIH0gfSk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25zID0gbmV3IFRyYW5zYWN0aW9ucyh7XG4gICAgICAgICAgICBkZXBzOiB7IGFwaTogdGhpcy5hcGksIGNyeXB0bzogY29uZmlnLmNyeXB0bywgY2h1bmtzOiB0aGlzLmNodW5rcywgbWVya2xlOiB0aGlzLm1lcmtsZSwgZGVlcEhhc2g6IHRoaXMuZGVlcEhhc2ggfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldCB1dGlscygpIHtcbiAgICAgICAgcmV0dXJuIEFyd2VhdmUudXRpbHM7XG4gICAgfVxuICAgIGdldENvbmZpZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xuICAgIH1cbiAgICBhc3luYyBjcmVhdGVUcmFuc2FjdGlvbihhdHRyaWJ1dGVzLCBqd2spIHtcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSB7fTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0cmFuc2FjdGlvbiwgYXR0cmlidXRlcyk7XG4gICAgICAgIGlmICghYXR0cmlidXRlcy5kYXRhICYmICEoYXR0cmlidXRlcy50YXJnZXQgJiYgYXR0cmlidXRlcy5xdWFudGl0eSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQSBuZXcgQXJ3ZWF2ZSB0cmFuc2FjdGlvbiBtdXN0IGhhdmUgYSAnZGF0YScgdmFsdWUsIG9yICd0YXJnZXQnIGFuZCAncXVhbnRpdHknIHZhbHVlcy5gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy5vd25lciA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChqd2sgJiYgandrICE9PSBcInVzZV93YWxsZXRcIikge1xuICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLm93bmVyID0gandrLm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMubGFzdF90eCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLmxhc3RfdHggPSBhd2FpdCB0aGlzLnRyYW5zYWN0aW9ucy5nZXRUcmFuc2FjdGlvbkFuY2hvcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgYXR0cmlidXRlcy5kYXRhID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzLmRhdGEgPSBBcndlYXZlVXRpbHMuc3RyaW5nVG9CdWZmZXIoYXR0cmlidXRlcy5kYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy5kYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZXMuZGF0YSA9IG5ldyBVaW50OEFycmF5KGF0dHJpYnV0ZXMuZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMuZGF0YSAmJiAhKGF0dHJpYnV0ZXMuZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBkYXRhIHRvIGJlIGEgc3RyaW5nLCBVaW50OEFycmF5IG9yIEFycmF5QnVmZmVyXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzLnJld2FyZCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IGF0dHJpYnV0ZXMuZGF0YSA/IGF0dHJpYnV0ZXMuZGF0YS5ieXRlTGVuZ3RoIDogMDtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLnJld2FyZCA9IGF3YWl0IHRoaXMudHJhbnNhY3Rpb25zLmdldFByaWNlKGxlbmd0aCwgdHJhbnNhY3Rpb24udGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBoZXJlIHdlIHNob3VsZCBjYWxsIHByZXBhcmUgY2h1bmtcbiAgICAgICAgdHJhbnNhY3Rpb24uZGF0YV9yb290ID0gXCJcIjtcbiAgICAgICAgdHJhbnNhY3Rpb24uZGF0YV9zaXplID0gYXR0cmlidXRlcy5kYXRhID8gYXR0cmlidXRlcy5kYXRhLmJ5dGVMZW5ndGgudG9TdHJpbmcoKSA6IFwiMFwiO1xuICAgICAgICB0cmFuc2FjdGlvbi5kYXRhID0gYXR0cmlidXRlcy5kYXRhIHx8IG5ldyBVaW50OEFycmF5KDApO1xuICAgICAgICBjb25zdCBjcmVhdGVkVHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgYXR0cmlidXRlczogdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICBkZXBzOiB7IG1lcmtsZTogdGhpcy5tZXJrbGUsIGRlZXBIYXNoOiB0aGlzLmRlZXBIYXNoIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBhd2FpdCBjcmVhdGVkVHJhbnNhY3Rpb24uZ2V0U2lnbmF0dXJlRGF0YSgpO1xuICAgICAgICByZXR1cm4gY3JlYXRlZFRyYW5zYWN0aW9uO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IEFyd2VhdmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcndlYXZlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/arweave.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/blocks.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/blocks.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Blocks)\n/* harmony export */ });\n/* harmony import */ var _lib_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/error.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js\");\n/* eslint-disable @typescript-eslint/naming-convention */\n\nclass Blocks {\n    api;\n    network;\n    constructor(api, network) {\n        this.api = api;\n        this.network = network;\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async getByHash(indepHash) {\n        const response = await this.api.get(`block/hash/${indepHash}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new _lib_error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async getByHeight(height) {\n        const response = await this.api.get(`block/height/${height}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new _lib_error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n    async getCurrent() {\n        const { current } = await this.network.getInfo();\n        return await this.getByHash(current);\n    }\n}\n//# sourceMappingURL=blocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2Jsb2Nrcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQzBDO0FBQzNCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsVUFBVTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHFEQUFZO0FBQ3RDO0FBQ0E7QUFDQSxtRUFBbUUsU0FBUztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxPQUFPO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVk7QUFDdEM7QUFDQTtBQUNBLG1FQUFtRSxTQUFTO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL2J1aWxkL2VzbS9jb21tb24vYmxvY2tzLmpzPzMxYTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5pbXBvcnQgQXJ3ZWF2ZUVycm9yIGZyb20gXCIuL2xpYi9lcnJvci5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmxvY2tzIHtcbiAgICBhcGk7XG4gICAgbmV0d29yaztcbiAgICBjb25zdHJ1Y3RvcihhcGksIG5ldHdvcmspIHtcbiAgICAgICAgdGhpcy5hcGkgPSBhcGk7XG4gICAgICAgIHRoaXMubmV0d29yayA9IG5ldHdvcms7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSBibG9jayBieSBpdHMgXCJpbmRlcF9oYXNoXCJcbiAgICAgKi9cbiAgICBhc3luYyBnZXRCeUhhc2goaW5kZXBIYXNoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5hcGkuZ2V0KGBibG9jay9oYXNoLyR7aW5kZXBIYXNofWApO1xuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFyd2VhdmVFcnJvcihcIkJMT0NLX05PVF9GT1VORFwiIC8qIEFyd2VhdmVFcnJvclR5cGUuQkxPQ0tfTk9UX0ZPVU5EICovKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3Igd2hpbGUgbG9hZGluZyBibG9jayBkYXRhOiAke3Jlc3BvbnNlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSBibG9jayBieSBpdHMgXCJpbmRlcF9oYXNoXCJcbiAgICAgKi9cbiAgICBhc3luYyBnZXRCeUhlaWdodChoZWlnaHQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmFwaS5nZXQoYGJsb2NrL2hlaWdodC8ke2hlaWdodH1gKTtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBBcndlYXZlRXJyb3IoXCJCTE9DS19OT1RfRk9VTkRcIiAvKiBBcndlYXZlRXJyb3JUeXBlLkJMT0NLX05PVF9GT1VORCAqLyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIHdoaWxlIGxvYWRpbmcgYmxvY2sgZGF0YTogJHtyZXNwb25zZX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGN1cnJlbnQgYmxvY2sgZGF0YSAoaWUuIGJsb2NrIHdpdGggaW5kZXBfaGFzaCA9IE5ldHdvcmsuZ2V0SW5mbygpLmN1cnJlbnQpXG4gICAgICovXG4gICAgYXN5bmMgZ2V0Q3VycmVudCgpIHtcbiAgICAgICAgY29uc3QgeyBjdXJyZW50IH0gPSBhd2FpdCB0aGlzLm5ldHdvcmsuZ2V0SW5mbygpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRCeUhhc2goY3VycmVudCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmxvY2tzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/blocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/chunks.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/chunks.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Chunks)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _lib_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/error.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/* harmony import */ var _lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/merkle.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/merkle.js\");\n\n\n\n\nclass Chunks {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    async getTransactionMetadata(id) {\n        const resp = await this.api.get(`tx/${id}/offset`);\n        if (resp.status === 200) {\n            return resp.data;\n        }\n        throw new Error(`Unable to get transaction offset: ${(0,_lib_error_js__WEBPACK_IMPORTED_MODULE_1__.getError)(resp)}`);\n    }\n    async getChunk(offset) {\n        const resp = await this.api.get(`chunk/${offset}`);\n        if (resp.status === 200) {\n            return resp.data;\n        }\n        throw new Error(`Unable to get chunk: ${(0,_lib_error_js__WEBPACK_IMPORTED_MODULE_1__.getError)(resp)}`);\n    }\n    async getChunkData(offset) {\n        const chunk = await this.getChunk(offset);\n        const buf = _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__.b64UrlToBuffer(chunk.chunk);\n        return buf;\n    }\n    firstChunkOffset(offsetResponse) {\n        return parseInt(offsetResponse.offset) - parseInt(offsetResponse.size) + 1;\n    }\n    /**\n     * Downloads chunks from the configured API peers, with a default concurrency of 10\n     * @param id - ID of the transaction to download\n     * @param options - Options object for configuring the downloader\n     * @param options.concurrency - The number of chunks to download simultaneously. reduce on slower connections.\n     * @returns\n     */\n    async downloadChunkedData(id, options) {\n        const offsetResponse = await this.getTransactionMetadata(id);\n        const size = parseInt(offsetResponse.size);\n        const data = new Uint8Array(size);\n        let byte = 0;\n        for await (const chunkData of this.concurrentChunkDownloader(id, options)) {\n            data.set(chunkData, byte);\n            byte += chunkData.length;\n        }\n        return data;\n    }\n    async *concurrentChunkDownloader(id, options) {\n        const opts = { concurrency: 10, ...options };\n        const metadata = await this.getTransactionMetadata(id);\n        // use big numbers for safety\n        const endOffset = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](metadata.offset);\n        const size = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](metadata.size);\n        const startOffset = endOffset.minus(size).plus(1);\n        let processedBytes = 0;\n        const chunks = Math.ceil(size.dividedBy(_lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__.MAX_CHUNK_SIZE).toNumber());\n        const downloadData = (offset) => this.getChunkData(offset.toString()).then((r) => {\n            processedBytes += r.length;\n            return r;\n        });\n        const processing = [];\n        // only parallelise everything except last two chunks.\n        // last two due to merkle rebalancing due to minimum chunk size, see https://github.com/ArweaveTeam/arweave-js/blob/ce441f8d4e66a2524cfe86bbbcaed34b887ba193/src/common/lib/merkle.ts#LL53C19-L53C19\n        const parallelChunks = chunks - 2;\n        const concurrency = Math.min(parallelChunks, opts.concurrency);\n        let currChunk = 0;\n        // logger.debug(`[downloadTx] Tx ${txId} start ${startOffset} size ${size} chunks ${chunks} concurrency ${concurrency}`);\n        for (let i = 0; i < concurrency; i++)\n            processing.push(downloadData(startOffset.plus(_lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__.MAX_CHUNK_SIZE * currChunk++)));\n        while (currChunk < parallelChunks) {\n            processing.push(downloadData(startOffset.plus(_lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__.MAX_CHUNK_SIZE * currChunk++)));\n            // yield await so that processedBytes works properly\n            yield processing.shift();\n        }\n        while (processing.length > 0)\n            yield processing.shift();\n        yield downloadData(startOffset.plus(_lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__.MAX_CHUNK_SIZE * currChunk++));\n        if (size.isGreaterThan(processedBytes))\n            yield downloadData(startOffset.plus(_lib_merkle_js__WEBPACK_IMPORTED_MODULE_3__.MAX_CHUNK_SIZE * currChunk++));\n        if (!size.isEqualTo(processedBytes))\n            throw new Error(`got ${processedBytes}B, expected ${size.toString()}B`);\n        return;\n    }\n}\n//# sourceMappingURL=chunks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2NodW5rcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUNLO0FBQ0s7QUFDRTtBQUNsQztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsR0FBRztBQUNqRDtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsdURBQVEsT0FBTztBQUM1RTtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHVEQUFRLE9BQU87QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlEQUEyQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLDhCQUE4QixvREFBUztBQUN2Qyx5QkFBeUIsb0RBQVM7QUFDbEM7QUFDQTtBQUNBLGdEQUFnRCwwREFBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE1BQU0sUUFBUSxhQUFhLE9BQU8sTUFBTSxTQUFTLFFBQVEsY0FBYyxZQUFZO0FBQzlILHdCQUF3QixpQkFBaUI7QUFDekMsMERBQTBELDBEQUFjO0FBQ3hFO0FBQ0EsMERBQTBELDBEQUFjO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsMERBQWM7QUFDMUQ7QUFDQSxnREFBZ0QsMERBQWM7QUFDOUQ7QUFDQSxtQ0FBbUMsZUFBZSxjQUFjLGdCQUFnQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9jaHVua3MuanM/MDM1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIjtcbmltcG9ydCB7IGdldEVycm9yIH0gZnJvbSBcIi4vbGliL2Vycm9yLmpzXCI7XG5pbXBvcnQgKiBhcyBBcndlYXZlVXRpbHMgZnJvbSBcIi4vbGliL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBNQVhfQ0hVTktfU0laRSB9IGZyb20gXCIuL2xpYi9tZXJrbGUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENodW5rcyB7XG4gICAgYXBpO1xuICAgIGNvbnN0cnVjdG9yKGFwaSkge1xuICAgICAgICB0aGlzLmFwaSA9IGFwaTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0VHJhbnNhY3Rpb25NZXRhZGF0YShpZCkge1xuICAgICAgICBjb25zdCByZXNwID0gYXdhaXQgdGhpcy5hcGkuZ2V0KGB0eC8ke2lkfS9vZmZzZXRgKTtcbiAgICAgICAgaWYgKHJlc3Auc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwLmRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gZ2V0IHRyYW5zYWN0aW9uIG9mZnNldDogJHtnZXRFcnJvcihyZXNwKX1gKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q2h1bmsob2Zmc2V0KSB7XG4gICAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCB0aGlzLmFwaS5nZXQoYGNodW5rLyR7b2Zmc2V0fWApO1xuICAgICAgICBpZiAocmVzcC5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3AuZGF0YTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBnZXQgY2h1bms6ICR7Z2V0RXJyb3IocmVzcCl9YCk7XG4gICAgfVxuICAgIGFzeW5jIGdldENodW5rRGF0YShvZmZzZXQpIHtcbiAgICAgICAgY29uc3QgY2h1bmsgPSBhd2FpdCB0aGlzLmdldENodW5rKG9mZnNldCk7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IEFyd2VhdmVVdGlscy5iNjRVcmxUb0J1ZmZlcihjaHVuay5jaHVuayk7XG4gICAgICAgIHJldHVybiBidWY7XG4gICAgfVxuICAgIGZpcnN0Q2h1bmtPZmZzZXQob2Zmc2V0UmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KG9mZnNldFJlc3BvbnNlLm9mZnNldCkgLSBwYXJzZUludChvZmZzZXRSZXNwb25zZS5zaXplKSArIDE7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERvd25sb2FkcyBjaHVua3MgZnJvbSB0aGUgY29uZmlndXJlZCBBUEkgcGVlcnMsIHdpdGggYSBkZWZhdWx0IGNvbmN1cnJlbmN5IG9mIDEwXG4gICAgICogQHBhcmFtIGlkIC0gSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHRvIGRvd25sb2FkXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIG9iamVjdCBmb3IgY29uZmlndXJpbmcgdGhlIGRvd25sb2FkZXJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb25jdXJyZW5jeSAtIFRoZSBudW1iZXIgb2YgY2h1bmtzIHRvIGRvd25sb2FkIHNpbXVsdGFuZW91c2x5LiByZWR1Y2Ugb24gc2xvd2VyIGNvbm5lY3Rpb25zLlxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgZG93bmxvYWRDaHVua2VkRGF0YShpZCwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBvZmZzZXRSZXNwb25zZSA9IGF3YWl0IHRoaXMuZ2V0VHJhbnNhY3Rpb25NZXRhZGF0YShpZCk7XG4gICAgICAgIGNvbnN0IHNpemUgPSBwYXJzZUludChvZmZzZXRSZXNwb25zZS5zaXplKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgICAgICBsZXQgYnl0ZSA9IDA7XG4gICAgICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmtEYXRhIG9mIHRoaXMuY29uY3VycmVudENodW5rRG93bmxvYWRlcihpZCwgb3B0aW9ucykpIHtcbiAgICAgICAgICAgIGRhdGEuc2V0KGNodW5rRGF0YSwgYnl0ZSk7XG4gICAgICAgICAgICBieXRlICs9IGNodW5rRGF0YS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGFzeW5jICpjb25jdXJyZW50Q2h1bmtEb3dubG9hZGVyKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IG9wdHMgPSB7IGNvbmN1cnJlbmN5OiAxMCwgLi4ub3B0aW9ucyB9O1xuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IGF3YWl0IHRoaXMuZ2V0VHJhbnNhY3Rpb25NZXRhZGF0YShpZCk7XG4gICAgICAgIC8vIHVzZSBiaWcgbnVtYmVycyBmb3Igc2FmZXR5XG4gICAgICAgIGNvbnN0IGVuZE9mZnNldCA9IG5ldyBCaWdOdW1iZXIobWV0YWRhdGEub2Zmc2V0KTtcbiAgICAgICAgY29uc3Qgc2l6ZSA9IG5ldyBCaWdOdW1iZXIobWV0YWRhdGEuc2l6ZSk7XG4gICAgICAgIGNvbnN0IHN0YXJ0T2Zmc2V0ID0gZW5kT2Zmc2V0Lm1pbnVzKHNpemUpLnBsdXMoMSk7XG4gICAgICAgIGxldCBwcm9jZXNzZWRCeXRlcyA9IDA7XG4gICAgICAgIGNvbnN0IGNodW5rcyA9IE1hdGguY2VpbChzaXplLmRpdmlkZWRCeShNQVhfQ0hVTktfU0laRSkudG9OdW1iZXIoKSk7XG4gICAgICAgIGNvbnN0IGRvd25sb2FkRGF0YSA9IChvZmZzZXQpID0+IHRoaXMuZ2V0Q2h1bmtEYXRhKG9mZnNldC50b1N0cmluZygpKS50aGVuKChyKSA9PiB7XG4gICAgICAgICAgICBwcm9jZXNzZWRCeXRlcyArPSByLmxlbmd0aDtcbiAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcHJvY2Vzc2luZyA9IFtdO1xuICAgICAgICAvLyBvbmx5IHBhcmFsbGVsaXNlIGV2ZXJ5dGhpbmcgZXhjZXB0IGxhc3QgdHdvIGNodW5rcy5cbiAgICAgICAgLy8gbGFzdCB0d28gZHVlIHRvIG1lcmtsZSByZWJhbGFuY2luZyBkdWUgdG8gbWluaW11bSBjaHVuayBzaXplLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL0Fyd2VhdmVUZWFtL2Fyd2VhdmUtanMvYmxvYi9jZTQ0MWY4ZDRlNjZhMjUyNGNmZTg2YmJiY2FlZDM0Yjg4N2JhMTkzL3NyYy9jb21tb24vbGliL21lcmtsZS50cyNMTDUzQzE5LUw1M0MxOVxuICAgICAgICBjb25zdCBwYXJhbGxlbENodW5rcyA9IGNodW5rcyAtIDI7XG4gICAgICAgIGNvbnN0IGNvbmN1cnJlbmN5ID0gTWF0aC5taW4ocGFyYWxsZWxDaHVua3MsIG9wdHMuY29uY3VycmVuY3kpO1xuICAgICAgICBsZXQgY3VyckNodW5rID0gMDtcbiAgICAgICAgLy8gbG9nZ2VyLmRlYnVnKGBbZG93bmxvYWRUeF0gVHggJHt0eElkfSBzdGFydCAke3N0YXJ0T2Zmc2V0fSBzaXplICR7c2l6ZX0gY2h1bmtzICR7Y2h1bmtzfSBjb25jdXJyZW5jeSAke2NvbmN1cnJlbmN5fWApO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbmN1cnJlbmN5OyBpKyspXG4gICAgICAgICAgICBwcm9jZXNzaW5nLnB1c2goZG93bmxvYWREYXRhKHN0YXJ0T2Zmc2V0LnBsdXMoTUFYX0NIVU5LX1NJWkUgKiBjdXJyQ2h1bmsrKykpKTtcbiAgICAgICAgd2hpbGUgKGN1cnJDaHVuayA8IHBhcmFsbGVsQ2h1bmtzKSB7XG4gICAgICAgICAgICBwcm9jZXNzaW5nLnB1c2goZG93bmxvYWREYXRhKHN0YXJ0T2Zmc2V0LnBsdXMoTUFYX0NIVU5LX1NJWkUgKiBjdXJyQ2h1bmsrKykpKTtcbiAgICAgICAgICAgIC8vIHlpZWxkIGF3YWl0IHNvIHRoYXQgcHJvY2Vzc2VkQnl0ZXMgd29ya3MgcHJvcGVybHlcbiAgICAgICAgICAgIHlpZWxkIHByb2Nlc3Npbmcuc2hpZnQoKTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAocHJvY2Vzc2luZy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgeWllbGQgcHJvY2Vzc2luZy5zaGlmdCgpO1xuICAgICAgICB5aWVsZCBkb3dubG9hZERhdGEoc3RhcnRPZmZzZXQucGx1cyhNQVhfQ0hVTktfU0laRSAqIGN1cnJDaHVuaysrKSk7XG4gICAgICAgIGlmIChzaXplLmlzR3JlYXRlclRoYW4ocHJvY2Vzc2VkQnl0ZXMpKVxuICAgICAgICAgICAgeWllbGQgZG93bmxvYWREYXRhKHN0YXJ0T2Zmc2V0LnBsdXMoTUFYX0NIVU5LX1NJWkUgKiBjdXJyQ2h1bmsrKykpO1xuICAgICAgICBpZiAoIXNpemUuaXNFcXVhbFRvKHByb2Nlc3NlZEJ5dGVzKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgZ290ICR7cHJvY2Vzc2VkQnl0ZXN9QiwgZXhwZWN0ZWQgJHtzaXplLnRvU3RyaW5nKCl9QmApO1xuICAgICAgICByZXR1cm47XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmtzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/chunks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* reexport safe */ _arweave_js__WEBPACK_IMPORTED_MODULE_0__.Arweave),\n/* harmony export */   \"default\": () => (/* reexport safe */ _arweave_js__WEBPACK_IMPORTED_MODULE_0__.Arweave)\n/* harmony export */ });\n/* harmony import */ var _arweave_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arweave.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/arweave.js\");\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QjtBQUNxQjtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9pbmRleC5qcz8zYzEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Fyd2VhdmUuanNcIjtcbmV4cG9ydCB7IEFyd2VhdmUgYXMgZGVmYXVsdCB9IGZyb20gXCIuL2Fyd2VhdmUuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Api)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var _arweave_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../arweave.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/arweave.js\");\n\n\n\nclass Api {\n    _instance;\n    cookieMap = new Map();\n    config;\n    constructor(config) {\n        if (config)\n            this.applyConfig(config);\n    }\n    applyConfig(config) {\n        this.config = this.mergeDefaults(config);\n        this._instance = undefined;\n    }\n    getConfig() {\n        return this.config;\n    }\n    async requestInterceptor(request) {\n        const cookies = this.cookieMap.get(new URL(request.baseURL ?? \"\").host);\n        if (cookies)\n            request.headers.cookie = cookies;\n        return request;\n    }\n    async responseInterceptor(response) {\n        const setCookie = response.headers?.[\"set-cookie\"];\n        if (setCookie)\n            this.cookieMap.set(response.request.host, setCookie);\n        return response;\n    }\n    mergeDefaults(config) {\n        config.headers ??= {};\n        if (config.network && !Object.keys(config.headers).includes(\"x-network\"))\n            config.headers[\"x-network\"] = config.network;\n        return {\n            url: config.url,\n            timeout: config.timeout ?? 20000,\n            logging: config.logging ?? false,\n            logger: config.logger ?? console.log,\n            headers: { ...config.headers, \"x-irys-arweave-version\": _arweave_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].VERSION },\n            withCredentials: config.withCredentials ?? false,\n            retry: { retries: 3, maxTimeout: 5_000 },\n        };\n    }\n    async get(path, config) {\n        try {\n            return await this.request(path, { ...config, method: \"GET\" });\n        }\n        catch (error) {\n            if (error.response?.status)\n                return error.response;\n            throw error;\n        }\n    }\n    async post(path, body, config) {\n        try {\n            return await this.request(path, { data: body, ...config, method: \"POST\" });\n        }\n        catch (error) {\n            if (error.response?.status)\n                return error.response;\n            throw error;\n        }\n    }\n    get instance() {\n        if (this._instance)\n            return this._instance;\n        const instance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n            baseURL: this.config.url.toString(),\n            timeout: this.config.timeout,\n            maxContentLength: 1024 * 1024 * 512,\n            headers: this.config.headers,\n            withCredentials: this.config.withCredentials,\n        });\n        if (this.config.withCredentials) {\n            instance.interceptors.request.use(this.requestInterceptor.bind(this));\n            instance.interceptors.response.use(this.responseInterceptor.bind(this));\n        }\n        if (this.config.logging) {\n            instance.interceptors.request.use((request) => {\n                this.config.logger(`Requesting: ${request.baseURL}/${request.url}`);\n                return request;\n            });\n            instance.interceptors.response.use((response) => {\n                this.config.logger(`Response: ${response.config.url} - ${response.status}`);\n                return response;\n            });\n        }\n        return (this._instance = instance);\n    }\n    async request(path, config) {\n        const instance = this.instance;\n        const url = config?.url ?? new URL(path, this.config.url).toString();\n        return async_retry__WEBPACK_IMPORTED_MODULE_0__((_) => instance({ ...config, url }), {\n            ...this.config.retry,\n            ...config?.retry,\n        });\n    }\n}\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQjtBQUNXO0FBQ0Q7QUFDckI7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZDQUE2QyxtREFBTyxVQUFVO0FBQ3JGO0FBQ0EscUJBQXFCLCtCQUErQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywwQkFBMEI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHVDQUF1QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2Q0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxnQkFBZ0IsR0FBRyxZQUFZO0FBQ2pGO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsZ0RBQWdELHFCQUFxQixJQUFJLGdCQUFnQjtBQUN6RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdDQUFVLG1CQUFtQixnQkFBZ0I7QUFDNUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL2J1aWxkL2VzbS9jb21tb24vbGliL2FwaS5qcz9lNTg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBeGlvcyBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCBBc3luY1JldHJ5IGZyb20gXCJhc3luYy1yZXRyeVwiO1xuaW1wb3J0IEFyd2VhdmUgZnJvbSBcIi4uL2Fyd2VhdmUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gICAgX2luc3RhbmNlO1xuICAgIGNvb2tpZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBjb25maWc7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWcpXG4gICAgICAgICAgICB0aGlzLmFwcGx5Q29uZmlnKGNvbmZpZyk7XG4gICAgfVxuICAgIGFwcGx5Q29uZmlnKGNvbmZpZykge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IHRoaXMubWVyZ2VEZWZhdWx0cyhjb25maWcpO1xuICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0Q29uZmlnKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWc7XG4gICAgfVxuICAgIGFzeW5jIHJlcXVlc3RJbnRlcmNlcHRvcihyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IGNvb2tpZXMgPSB0aGlzLmNvb2tpZU1hcC5nZXQobmV3IFVSTChyZXF1ZXN0LmJhc2VVUkwgPz8gXCJcIikuaG9zdCk7XG4gICAgICAgIGlmIChjb29raWVzKVxuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLmNvb2tpZSA9IGNvb2tpZXM7XG4gICAgICAgIHJldHVybiByZXF1ZXN0O1xuICAgIH1cbiAgICBhc3luYyByZXNwb25zZUludGVyY2VwdG9yKHJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnN0IHNldENvb2tpZSA9IHJlc3BvbnNlLmhlYWRlcnM/LltcInNldC1jb29raWVcIl07XG4gICAgICAgIGlmIChzZXRDb29raWUpXG4gICAgICAgICAgICB0aGlzLmNvb2tpZU1hcC5zZXQocmVzcG9uc2UucmVxdWVzdC5ob3N0LCBzZXRDb29raWUpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuICAgIG1lcmdlRGVmYXVsdHMoY29uZmlnKSB7XG4gICAgICAgIGNvbmZpZy5oZWFkZXJzID8/PSB7fTtcbiAgICAgICAgaWYgKGNvbmZpZy5uZXR3b3JrICYmICFPYmplY3Qua2V5cyhjb25maWcuaGVhZGVycykuaW5jbHVkZXMoXCJ4LW5ldHdvcmtcIikpXG4gICAgICAgICAgICBjb25maWcuaGVhZGVyc1tcIngtbmV0d29ya1wiXSA9IGNvbmZpZy5uZXR3b3JrO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdXJsOiBjb25maWcudXJsLFxuICAgICAgICAgICAgdGltZW91dDogY29uZmlnLnRpbWVvdXQgPz8gMjAwMDAsXG4gICAgICAgICAgICBsb2dnaW5nOiBjb25maWcubG9nZ2luZyA/PyBmYWxzZSxcbiAgICAgICAgICAgIGxvZ2dlcjogY29uZmlnLmxvZ2dlciA/PyBjb25zb2xlLmxvZyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgLi4uY29uZmlnLmhlYWRlcnMsIFwieC1pcnlzLWFyd2VhdmUtdmVyc2lvblwiOiBBcndlYXZlLlZFUlNJT04gfSxcbiAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczogY29uZmlnLndpdGhDcmVkZW50aWFscyA/PyBmYWxzZSxcbiAgICAgICAgICAgIHJldHJ5OiB7IHJldHJpZXM6IDMsIG1heFRpbWVvdXQ6IDVfMDAwIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFzeW5jIGdldChwYXRoLCBjb25maWcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QocGF0aCwgeyAuLi5jb25maWcsIG1ldGhvZDogXCJHRVRcIiB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZT8uc3RhdHVzKVxuICAgICAgICAgICAgICAgIHJldHVybiBlcnJvci5yZXNwb25zZTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHBvc3QocGF0aCwgYm9keSwgY29uZmlnKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZXF1ZXN0KHBhdGgsIHsgZGF0YTogYm9keSwgLi4uY29uZmlnLCBtZXRob2Q6IFwiUE9TVFwiIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlPy5zdGF0dXMpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yLnJlc3BvbnNlO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGluc3RhbmNlKCkge1xuICAgICAgICBpZiAodGhpcy5faW5zdGFuY2UpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gQXhpb3MuY3JlYXRlKHtcbiAgICAgICAgICAgIGJhc2VVUkw6IHRoaXMuY29uZmlnLnVybC50b1N0cmluZygpLFxuICAgICAgICAgICAgdGltZW91dDogdGhpcy5jb25maWcudGltZW91dCxcbiAgICAgICAgICAgIG1heENvbnRlbnRMZW5ndGg6IDEwMjQgKiAxMDI0ICogNTEyLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5jb25maWcuaGVhZGVycyxcbiAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczogdGhpcy5jb25maWcud2l0aENyZWRlbnRpYWxzLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLndpdGhDcmVkZW50aWFscykge1xuICAgICAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKHRoaXMucmVxdWVzdEludGVyY2VwdG9yLmJpbmQodGhpcykpO1xuICAgICAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSh0aGlzLnJlc3BvbnNlSW50ZXJjZXB0b3IuYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmxvZ2dpbmcpIHtcbiAgICAgICAgICAgIGluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgocmVxdWVzdCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLmxvZ2dlcihgUmVxdWVzdGluZzogJHtyZXF1ZXN0LmJhc2VVUkx9LyR7cmVxdWVzdC51cmx9YCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maWcubG9nZ2VyKGBSZXNwb25zZTogJHtyZXNwb25zZS5jb25maWcudXJsfSAtICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAodGhpcy5faW5zdGFuY2UgPSBpbnN0YW5jZSk7XG4gICAgfVxuICAgIGFzeW5jIHJlcXVlc3QocGF0aCwgY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5pbnN0YW5jZTtcbiAgICAgICAgY29uc3QgdXJsID0gY29uZmlnPy51cmwgPz8gbmV3IFVSTChwYXRoLCB0aGlzLmNvbmZpZy51cmwpLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiBBc3luY1JldHJ5KChfKSA9PiBpbnN0YW5jZSh7IC4uLmNvbmZpZywgdXJsIH0pLCB7XG4gICAgICAgICAgICAuLi50aGlzLmNvbmZpZy5yZXRyeSxcbiAgICAgICAgICAgIC4uLmNvbmZpZz8ucmV0cnksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/crypto-augment.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/crypto/crypto-augment.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   augmentCrypto: () => (/* binding */ augmentCrypto)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n\nfunction augmentCrypto(crypto, augments) {\n    const crypt = crypto;\n    crypt.deepHash = new augments.deepHash({ deps: { utils: { stringToBuffer: _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer, concatBuffers: _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers }, crypto } });\n    return crypt;\n    //   crypto: Class<CryptoInterface>,\n    //   augments: { deepHash: Class<DeepHash, ConstructorParameters<typeof DeepHash>> },\n    // ): AugmentedCrypto {\n    //   const cryptoAugment = class Crypto extends crypto implements CryptoInterface {\n    //     public deepHash: DeepHash;\n    //     constructor() {\n    //       super();\n    //       this.deepHash = new augments.deepHash({ deps: { crypto: this, utils: ArweaveUtils } });\n    //     }\n    //   };\n    //   return new cryptoAugment();\n}\n//# sourceMappingURL=crypto-augment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9jcnlwdG8vY3J5cHRvLWF1Z21lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEQ7QUFDckQ7QUFDUDtBQUNBLDZDQUE2QyxRQUFRLFNBQVMsY0FBYyxzRUFBZSx3REFBRSxZQUFZO0FBQ3pHO0FBQ0E7QUFDQSxxQkFBcUIsbUVBQW1FO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUSxxQ0FBcUM7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9saWIvY3J5cHRvL2NyeXB0by1hdWdtZW50LmpzPzRhMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uY2F0QnVmZmVycywgc3RyaW5nVG9CdWZmZXIgfSBmcm9tIFwiLi4vdXRpbHMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBhdWdtZW50Q3J5cHRvKGNyeXB0bywgYXVnbWVudHMpIHtcbiAgICBjb25zdCBjcnlwdCA9IGNyeXB0bztcbiAgICBjcnlwdC5kZWVwSGFzaCA9IG5ldyBhdWdtZW50cy5kZWVwSGFzaCh7IGRlcHM6IHsgdXRpbHM6IHsgc3RyaW5nVG9CdWZmZXIsIGNvbmNhdEJ1ZmZlcnMgfSwgY3J5cHRvIH0gfSk7XG4gICAgcmV0dXJuIGNyeXB0O1xuICAgIC8vICAgY3J5cHRvOiBDbGFzczxDcnlwdG9JbnRlcmZhY2U+LFxuICAgIC8vICAgYXVnbWVudHM6IHsgZGVlcEhhc2g6IENsYXNzPERlZXBIYXNoLCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8dHlwZW9mIERlZXBIYXNoPj4gfSxcbiAgICAvLyApOiBBdWdtZW50ZWRDcnlwdG8ge1xuICAgIC8vICAgY29uc3QgY3J5cHRvQXVnbWVudCA9IGNsYXNzIENyeXB0byBleHRlbmRzIGNyeXB0byBpbXBsZW1lbnRzIENyeXB0b0ludGVyZmFjZSB7XG4gICAgLy8gICAgIHB1YmxpYyBkZWVwSGFzaDogRGVlcEhhc2g7XG4gICAgLy8gICAgIGNvbnN0cnVjdG9yKCkge1xuICAgIC8vICAgICAgIHN1cGVyKCk7XG4gICAgLy8gICAgICAgdGhpcy5kZWVwSGFzaCA9IG5ldyBhdWdtZW50cy5kZWVwSGFzaCh7IGRlcHM6IHsgY3J5cHRvOiB0aGlzLCB1dGlsczogQXJ3ZWF2ZVV0aWxzIH0gfSk7XG4gICAgLy8gICAgIH1cbiAgICAvLyAgIH07XG4gICAgLy8gICByZXR1cm4gbmV3IGNyeXB0b0F1Z21lbnQoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyeXB0by1hdWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/crypto-augment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/pem.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/crypto/pem.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RSA_OID: () => (/* binding */ RSA_OID),\n/* harmony export */   jwkTopem: () => (/* binding */ jwkTopem),\n/* harmony export */   pemTojwk: () => (/* binding */ pemTojwk)\n/* harmony export */ });\n/* harmony import */ var asn1_js_lib_asn1_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! asn1.js/lib/asn1/api.js */ \"(ssr)/./node_modules/@irys/arweave/node_modules/asn1.js/lib/asn1/api.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/@irys/arweave/node_modules/bn.js/lib/bn.js\");\n// @ts-expect-error no typing :c\n\nconst define = asn1_js_lib_asn1_api_js__WEBPACK_IMPORTED_MODULE_0__.define;\n\nfunction urlize(base64) {\n    return base64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nfunction hex2b64url(str) {\n    return urlize(Buffer.from(str, \"hex\").toString(\"base64\"));\n}\nconst RSAPublicKey = define(\"RSAPublicKey\", function () {\n    this.seq().obj(this.key(\"n\").int(), this.key(\"e\").int());\n});\nconst AlgorithmIdentifier = define(\"AlgorithmIdentifier\", function () {\n    this.seq().obj(this.key(\"algorithm\").objid(), this.key(\"parameters\").optional().any());\n});\nconst PublicKeyInfo = define(\"PublicKeyInfo\", function () {\n    this.seq().obj(this.key(\"algorithm\").use(AlgorithmIdentifier), this.key(\"publicKey\").bitstr());\n});\nconst Version = define(\"Version\", function () {\n    this.int({\n        0: \"two-prime\",\n        1: \"multi\",\n    });\n});\nconst OtherPrimeInfos = define(\"OtherPrimeInfos\", function () {\n    this.seq().obj(this.key(\"ri\").int(), this.key(\"di\").int(), this.key(\"ti\").int());\n});\nconst RSAPrivateKey = define(\"RSAPrivateKey\", function () {\n    this.seq().obj(this.key(\"version\").use(Version), this.key(\"n\").int(), this.key(\"e\").int(), this.key(\"d\").int(), this.key(\"p\").int(), this.key(\"q\").int(), this.key(\"dp\").int(), this.key(\"dq\").int(), this.key(\"qi\").int(), this.key(\"other\").optional().use(OtherPrimeInfos));\n});\nconst PrivateKeyInfo = define(\"PrivateKeyInfo\", function () {\n    this.seq().obj(this.key(\"version\").use(Version), this.key(\"algorithm\").use(AlgorithmIdentifier), this.key(\"privateKey\").bitstr());\n});\nconst RSA_OID = \"1.2.840.113549.1.1.1\";\nfunction addExtras(obj, extras) {\n    extras = extras || {};\n    Object.keys(extras).forEach(function (key) {\n        obj[key] = extras[key];\n    });\n    return obj;\n}\nfunction pad(hex) {\n    return hex.length % 2 === 1 ? \"0\" + hex : hex;\n}\nfunction decodeRsaPublic(buffer, extras) {\n    const key = RSAPublicKey.decode(buffer, \"der\");\n    const e = pad(key.e.toString(16));\n    const jwk = {\n        kty: \"RSA\",\n        n: bn2base64url(key.n),\n        e: hex2b64url(e),\n    };\n    return addExtras(jwk, extras);\n}\nfunction decodeRsaPrivate(buffer, extras) {\n    const key = RSAPrivateKey.decode(buffer, \"der\");\n    const e = pad(key.e.toString(16));\n    const jwk = {\n        kty: \"RSA\",\n        n: bn2base64url(key.n),\n        e: hex2b64url(e),\n        d: bn2base64url(key.d),\n        p: bn2base64url(key.p),\n        q: bn2base64url(key.q),\n        dp: bn2base64url(key.dp),\n        dq: bn2base64url(key.dq),\n        qi: bn2base64url(key.qi),\n    };\n    return addExtras(jwk, extras);\n}\nfunction decodePublic(buffer, extras) {\n    const info = PublicKeyInfo.decode(buffer, \"der\");\n    return decodeRsaPublic(info.publicKey.data, extras);\n}\nfunction decodePrivate(buffer, extras) {\n    const info = PrivateKeyInfo.decode(buffer, \"der\");\n    return decodeRsaPrivate(info.privateKey.data, extras);\n}\nfunction getDecoder(header) {\n    const match = /^-----BEGIN (RSA )?(PUBLIC|PRIVATE) KEY-----$/.exec(header);\n    if (!match) {\n        return null;\n    }\n    const isRSA = !!match[1];\n    const isPrivate = match[2] === \"PRIVATE\";\n    if (isPrivate) {\n        return isRSA ? decodeRsaPrivate : decodePrivate;\n    }\n    else {\n        return isRSA ? decodeRsaPublic : decodePublic;\n    }\n}\nfunction parse(jwk) {\n    return {\n        n: string2bn(jwk.n),\n        e: string2bn(jwk.e),\n        d: jwk.d && string2bn(jwk.d),\n        p: jwk.p && string2bn(jwk.p),\n        q: jwk.q && string2bn(jwk.q),\n        dp: jwk.dp && string2bn(jwk.dp),\n        dq: jwk.dq && string2bn(jwk.dq),\n        qi: jwk.qi && string2bn(jwk.qi),\n    };\n}\nfunction bn2base64url(bn) {\n    return hex2b64url(pad(bn.toString(16)));\n}\nfunction base64url2bn(str) {\n    return new bn_js__WEBPACK_IMPORTED_MODULE_1__(Buffer.from(str, \"base64\"));\n}\nfunction string2bn(str) {\n    if (/^[0-9]+$/.test(str)) {\n        return new bn_js__WEBPACK_IMPORTED_MODULE_1__(str, 10);\n    }\n    return base64url2bn(str);\n}\nfunction pemTojwk(pem, extras) {\n    let text = pem.toString().split(/(\\r\\n|\\r|\\n)+/g);\n    text = text.filter(function (line) {\n        return line.trim().length !== 0;\n    });\n    const decoder = getDecoder(text[0]);\n    text = text.slice(1, -1).join(\"\");\n    return decoder(Buffer.from(text.replace(/[^\\w\\d\\+\\/=]+/g, \"\"), \"base64\"), extras);\n}\nfunction jwkTopem(json) {\n    const jwk = parse(json);\n    const isPrivate = !!jwk.d;\n    const t = isPrivate ? \"PRIVATE\" : \"PUBLIC\";\n    const header = \"-----BEGIN RSA \" + t + \" KEY-----\\n\";\n    const footer = \"\\n-----END RSA \" + t + \" KEY-----\\n\";\n    let data = Buffer.alloc(0);\n    if (isPrivate) {\n        jwk.version = \"two-prime\";\n        data = RSAPrivateKey.encode(jwk, \"der\");\n    }\n    else {\n        data = RSAPublicKey.encode(jwk, \"der\");\n    }\n    const body = data\n        .toString(\"base64\")\n        .match(/.{1,64}/g)\n        .join(\"\\n\");\n    return header + body + footer;\n}\n//# sourceMappingURL=pem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/pem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/deepHash.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/deepHash.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepHash: () => (/* binding */ DeepHash)\n/* harmony export */ });\nclass DeepHash {\n    crypto;\n    utils;\n    constructor({ deps }) {\n        this.crypto = deps.crypto;\n        this.utils = deps.utils;\n    }\n    async deepHash(data) {\n        if (Array.isArray(data)) {\n            const tag = this.utils.concatBuffers([this.utils.stringToBuffer(\"list\"), this.utils.stringToBuffer(data.length.toString())]);\n            return await this.deepHashChunks(data, await this.crypto.hash(tag, \"SHA-384\"));\n        }\n        const tag = this.utils.concatBuffers([this.utils.stringToBuffer(\"blob\"), this.utils.stringToBuffer(data.byteLength.toString())]);\n        const taggedHash = this.utils.concatBuffers([await this.crypto.hash(tag, \"SHA-384\"), await this.crypto.hash(data, \"SHA-384\")]);\n        return await this.crypto.hash(taggedHash, \"SHA-384\");\n    }\n    async deepHashChunks(chunks, acc) {\n        if (chunks.length < 1)\n            return acc;\n        const hashPair = this.utils.concatBuffers([acc, await this.deepHash(chunks[0])]);\n        const newAcc = await this.crypto.hash(hashPair, \"SHA-384\");\n        return await this.deepHashChunks(chunks.slice(1), newAcc);\n    }\n}\n//# sourceMappingURL=deepHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9kZWVwSGFzaC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0Esa0JBQWtCLE1BQU07QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9kZWVwSGFzaC5qcz9lMmQyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZWVwSGFzaCB7XG4gICAgY3J5cHRvO1xuICAgIHV0aWxzO1xuICAgIGNvbnN0cnVjdG9yKHsgZGVwcyB9KSB7XG4gICAgICAgIHRoaXMuY3J5cHRvID0gZGVwcy5jcnlwdG87XG4gICAgICAgIHRoaXMudXRpbHMgPSBkZXBzLnV0aWxzO1xuICAgIH1cbiAgICBhc3luYyBkZWVwSGFzaChkYXRhKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgICAgICBjb25zdCB0YWcgPSB0aGlzLnV0aWxzLmNvbmNhdEJ1ZmZlcnMoW3RoaXMudXRpbHMuc3RyaW5nVG9CdWZmZXIoXCJsaXN0XCIpLCB0aGlzLnV0aWxzLnN0cmluZ1RvQnVmZmVyKGRhdGEubGVuZ3RoLnRvU3RyaW5nKCkpXSk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5kZWVwSGFzaENodW5rcyhkYXRhLCBhd2FpdCB0aGlzLmNyeXB0by5oYXNoKHRhZywgXCJTSEEtMzg0XCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0YWcgPSB0aGlzLnV0aWxzLmNvbmNhdEJ1ZmZlcnMoW3RoaXMudXRpbHMuc3RyaW5nVG9CdWZmZXIoXCJibG9iXCIpLCB0aGlzLnV0aWxzLnN0cmluZ1RvQnVmZmVyKGRhdGEuYnl0ZUxlbmd0aC50b1N0cmluZygpKV0pO1xuICAgICAgICBjb25zdCB0YWdnZWRIYXNoID0gdGhpcy51dGlscy5jb25jYXRCdWZmZXJzKFthd2FpdCB0aGlzLmNyeXB0by5oYXNoKHRhZywgXCJTSEEtMzg0XCIpLCBhd2FpdCB0aGlzLmNyeXB0by5oYXNoKGRhdGEsIFwiU0hBLTM4NFwiKV0pO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5jcnlwdG8uaGFzaCh0YWdnZWRIYXNoLCBcIlNIQS0zODRcIik7XG4gICAgfVxuICAgIGFzeW5jIGRlZXBIYXNoQ2h1bmtzKGNodW5rcywgYWNjKSB7XG4gICAgICAgIGlmIChjaHVua3MubGVuZ3RoIDwgMSlcbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIGNvbnN0IGhhc2hQYWlyID0gdGhpcy51dGlscy5jb25jYXRCdWZmZXJzKFthY2MsIGF3YWl0IHRoaXMuZGVlcEhhc2goY2h1bmtzWzBdKV0pO1xuICAgICAgICBjb25zdCBuZXdBY2MgPSBhd2FpdCB0aGlzLmNyeXB0by5oYXNoKGhhc2hQYWlyLCBcIlNIQS0zODRcIik7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmRlZXBIYXNoQ2h1bmtzKGNodW5rcy5zbGljZSgxKSwgbmV3QWNjKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWVwSGFzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/deepHash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js":
/*!******************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/error.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArweaveError),\n/* harmony export */   getError: () => (/* binding */ getError)\n/* harmony export */ });\nclass ArweaveError extends Error {\n    type;\n    response;\n    constructor(type, optional = {}) {\n        if (optional.message) {\n            super(optional.message);\n        }\n        else {\n            super();\n        }\n        this.type = type;\n        this.response = optional.response;\n    }\n    getType() {\n        return this.type;\n    }\n}\n// Safely get error string\n// from a response, falling back to\n// resp.data, statusText or 'unknown'.\n// Note: a wrongly set content-type can\n// cause what is a json response to be interepted\n// as a string or Buffer, so we handle that too.\nfunction getError(resp) {\n    let data = resp.data;\n    if (typeof resp.data === \"string\") {\n        try {\n            data = JSON.parse(resp.data);\n        }\n        catch (e) { }\n    }\n    if (resp.data instanceof ArrayBuffer || resp.data instanceof Uint8Array) {\n        try {\n            data = JSON.parse(data.toString());\n        }\n        catch (e) { }\n    }\n    return data ? data.error || data : resp.statusText || \"unknown\";\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL2J1aWxkL2VzbS9jb21tb24vbGliL2Vycm9yLmpzPzM4MDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ3ZWF2ZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIHR5cGU7XG4gICAgcmVzcG9uc2U7XG4gICAgY29uc3RydWN0b3IodHlwZSwgb3B0aW9uYWwgPSB7fSkge1xuICAgICAgICBpZiAob3B0aW9uYWwubWVzc2FnZSkge1xuICAgICAgICAgICAgc3VwZXIob3B0aW9uYWwubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdXBlcigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMucmVzcG9uc2UgPSBvcHRpb25hbC5yZXNwb25zZTtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZTtcbiAgICB9XG59XG4vLyBTYWZlbHkgZ2V0IGVycm9yIHN0cmluZ1xuLy8gZnJvbSBhIHJlc3BvbnNlLCBmYWxsaW5nIGJhY2sgdG9cbi8vIHJlc3AuZGF0YSwgc3RhdHVzVGV4dCBvciAndW5rbm93bicuXG4vLyBOb3RlOiBhIHdyb25nbHkgc2V0IGNvbnRlbnQtdHlwZSBjYW5cbi8vIGNhdXNlIHdoYXQgaXMgYSBqc29uIHJlc3BvbnNlIHRvIGJlIGludGVyZXB0ZWRcbi8vIGFzIGEgc3RyaW5nIG9yIEJ1ZmZlciwgc28gd2UgaGFuZGxlIHRoYXQgdG9vLlxuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yKHJlc3ApIHtcbiAgICBsZXQgZGF0YSA9IHJlc3AuZGF0YTtcbiAgICBpZiAodHlwZW9mIHJlc3AuZGF0YSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UocmVzcC5kYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIGlmIChyZXNwLmRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCByZXNwLmRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGEgPyBkYXRhLmVycm9yIHx8IGRhdGEgOiByZXNwLnN0YXR1c1RleHQgfHwgXCJ1bmtub3duXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/fallbackApi.js":
/*!************************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/fallbackApi.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FallbackApi: () => (/* binding */ FallbackApi),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/api.js\");\n\nconst isApiConfig = (o) => typeof o !== \"string\" && \"url\" in o;\nconst defaultFallbackConfig = {\n    maxAttempts: 15,\n    randomlySelect: true,\n};\nclass FallbackApi {\n    minerInstances = [];\n    globalConfig;\n    gatewayInstances = [];\n    constructor({ gateways, miners, opts, }) {\n        this.globalConfig = opts?.globalConfig ?? {};\n        if (miners)\n            this.addMiners(miners);\n        if (gateways)\n            this.addGateways(gateways);\n        // this.gatewayInstance = this.minerInstances[0];\n    }\n    async addPeersFrom(url, options) {\n        const peers = (await this.get(\"\", { url: new URL(\"/peers\", url).toString() })).data;\n        this.addMiners(peers.slice(0, options?.limit).map((p) => `http://${p}`));\n    }\n    addMiners(hosts) {\n        hosts.forEach((h) => this.minerInstances.push(new _api_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](isApiConfig(h) ? h : { url: new URL(h), ...this.globalConfig })));\n    }\n    addGateways(hosts) {\n        hosts.forEach((h) => this.gatewayInstances.push(new _api_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](isApiConfig(h) ? h : { url: new URL(h), ...this.globalConfig })));\n    }\n    async get(path, config) {\n        return this.request(path, { ...config, method: \"GET\" });\n    }\n    async post(path, body, config) {\n        return this.request(path, { data: body, ...config, method: \"POST\" });\n    }\n    async request(path, config) {\n        const fallbackConfig = { ...defaultFallbackConfig, ...config?.fallback };\n        let attempts = 0;\n        const errors = [];\n        const instances = config?.gatewayOnly ? this.gatewayInstances : this.gatewayInstances.concat(this.minerInstances);\n        const maxAttempts = Math.min(Math.max(fallbackConfig?.maxAttempts, 1), instances.length);\n        const onFallback = fallbackConfig?.onFallback;\n        if (instances.length === 0)\n            throw new Error(`Unable to run request due to 0 configured gateways/miners.`);\n        while (attempts++ < maxAttempts) {\n            const apiInstance = instances.at(fallbackConfig?.randomlySelect ? Math.floor(Math.random() * instances.length) : attempts - 1);\n            if (!apiInstance)\n                continue;\n            try {\n                return await apiInstance.request(path, { ...config });\n            }\n            catch (e) {\n                onFallback?.(e, apiInstance);\n                errors.push(e);\n                if (attempts >= maxAttempts)\n                    throw e;\n            }\n        }\n        throw new Error(\"unreachable\");\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FallbackApi);\n//# sourceMappingURL=fallbackApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi9mYWxsYmFja0FwaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlCQUF5QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdDQUF3QztBQUNwRiwyRUFBMkUsRUFBRTtBQUM3RTtBQUNBO0FBQ0EsMERBQTBELCtDQUFHLHdCQUF3Qix1Q0FBdUM7QUFDNUg7QUFDQTtBQUNBLDREQUE0RCwrQ0FBRyx3QkFBd0IsdUNBQXVDO0FBQzlIO0FBQ0E7QUFDQSxvQ0FBb0MsMEJBQTBCO0FBQzlEO0FBQ0E7QUFDQSxvQ0FBb0MsdUNBQXVDO0FBQzNFO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFdBQVc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFdBQVcsRUFBQztBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9saWIvZmFsbGJhY2tBcGkuanM/M2RjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXBpIGZyb20gXCIuL2FwaS5qc1wiO1xuY29uc3QgaXNBcGlDb25maWcgPSAobykgPT4gdHlwZW9mIG8gIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBvO1xuY29uc3QgZGVmYXVsdEZhbGxiYWNrQ29uZmlnID0ge1xuICAgIG1heEF0dGVtcHRzOiAxNSxcbiAgICByYW5kb21seVNlbGVjdDogdHJ1ZSxcbn07XG5leHBvcnQgY2xhc3MgRmFsbGJhY2tBcGkge1xuICAgIG1pbmVySW5zdGFuY2VzID0gW107XG4gICAgZ2xvYmFsQ29uZmlnO1xuICAgIGdhdGV3YXlJbnN0YW5jZXMgPSBbXTtcbiAgICBjb25zdHJ1Y3Rvcih7IGdhdGV3YXlzLCBtaW5lcnMsIG9wdHMsIH0pIHtcbiAgICAgICAgdGhpcy5nbG9iYWxDb25maWcgPSBvcHRzPy5nbG9iYWxDb25maWcgPz8ge307XG4gICAgICAgIGlmIChtaW5lcnMpXG4gICAgICAgICAgICB0aGlzLmFkZE1pbmVycyhtaW5lcnMpO1xuICAgICAgICBpZiAoZ2F0ZXdheXMpXG4gICAgICAgICAgICB0aGlzLmFkZEdhdGV3YXlzKGdhdGV3YXlzKTtcbiAgICAgICAgLy8gdGhpcy5nYXRld2F5SW5zdGFuY2UgPSB0aGlzLm1pbmVySW5zdGFuY2VzWzBdO1xuICAgIH1cbiAgICBhc3luYyBhZGRQZWVyc0Zyb20odXJsLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBlZXJzID0gKGF3YWl0IHRoaXMuZ2V0KFwiXCIsIHsgdXJsOiBuZXcgVVJMKFwiL3BlZXJzXCIsIHVybCkudG9TdHJpbmcoKSB9KSkuZGF0YTtcbiAgICAgICAgdGhpcy5hZGRNaW5lcnMocGVlcnMuc2xpY2UoMCwgb3B0aW9ucz8ubGltaXQpLm1hcCgocCkgPT4gYGh0dHA6Ly8ke3B9YCkpO1xuICAgIH1cbiAgICBhZGRNaW5lcnMoaG9zdHMpIHtcbiAgICAgICAgaG9zdHMuZm9yRWFjaCgoaCkgPT4gdGhpcy5taW5lckluc3RhbmNlcy5wdXNoKG5ldyBBcGkoaXNBcGlDb25maWcoaCkgPyBoIDogeyB1cmw6IG5ldyBVUkwoaCksIC4uLnRoaXMuZ2xvYmFsQ29uZmlnIH0pKSk7XG4gICAgfVxuICAgIGFkZEdhdGV3YXlzKGhvc3RzKSB7XG4gICAgICAgIGhvc3RzLmZvckVhY2goKGgpID0+IHRoaXMuZ2F0ZXdheUluc3RhbmNlcy5wdXNoKG5ldyBBcGkoaXNBcGlDb25maWcoaCkgPyBoIDogeyB1cmw6IG5ldyBVUkwoaCksIC4uLnRoaXMuZ2xvYmFsQ29uZmlnIH0pKSk7XG4gICAgfVxuICAgIGFzeW5jIGdldChwYXRoLCBjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdChwYXRoLCB7IC4uLmNvbmZpZywgbWV0aG9kOiBcIkdFVFwiIH0pO1xuICAgIH1cbiAgICBhc3luYyBwb3N0KHBhdGgsIGJvZHksIGNvbmZpZykge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHBhdGgsIHsgZGF0YTogYm9keSwgLi4uY29uZmlnLCBtZXRob2Q6IFwiUE9TVFwiIH0pO1xuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0KHBhdGgsIGNvbmZpZykge1xuICAgICAgICBjb25zdCBmYWxsYmFja0NvbmZpZyA9IHsgLi4uZGVmYXVsdEZhbGxiYWNrQ29uZmlnLCAuLi5jb25maWc/LmZhbGxiYWNrIH07XG4gICAgICAgIGxldCBhdHRlbXB0cyA9IDA7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgICAgICBjb25zdCBpbnN0YW5jZXMgPSBjb25maWc/LmdhdGV3YXlPbmx5ID8gdGhpcy5nYXRld2F5SW5zdGFuY2VzIDogdGhpcy5nYXRld2F5SW5zdGFuY2VzLmNvbmNhdCh0aGlzLm1pbmVySW5zdGFuY2VzKTtcbiAgICAgICAgY29uc3QgbWF4QXR0ZW1wdHMgPSBNYXRoLm1pbihNYXRoLm1heChmYWxsYmFja0NvbmZpZz8ubWF4QXR0ZW1wdHMsIDEpLCBpbnN0YW5jZXMubGVuZ3RoKTtcbiAgICAgICAgY29uc3Qgb25GYWxsYmFjayA9IGZhbGxiYWNrQ29uZmlnPy5vbkZhbGxiYWNrO1xuICAgICAgICBpZiAoaW5zdGFuY2VzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIHJ1biByZXF1ZXN0IGR1ZSB0byAwIGNvbmZpZ3VyZWQgZ2F0ZXdheXMvbWluZXJzLmApO1xuICAgICAgICB3aGlsZSAoYXR0ZW1wdHMrKyA8IG1heEF0dGVtcHRzKSB7XG4gICAgICAgICAgICBjb25zdCBhcGlJbnN0YW5jZSA9IGluc3RhbmNlcy5hdChmYWxsYmFja0NvbmZpZz8ucmFuZG9tbHlTZWxlY3QgPyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpbnN0YW5jZXMubGVuZ3RoKSA6IGF0dGVtcHRzIC0gMSk7XG4gICAgICAgICAgICBpZiAoIWFwaUluc3RhbmNlKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYXBpSW5zdGFuY2UucmVxdWVzdChwYXRoLCB7IC4uLmNvbmZpZyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgb25GYWxsYmFjaz8uKGUsIGFwaUluc3RhbmNlKTtcbiAgICAgICAgICAgICAgICBlcnJvcnMucHVzaChlKTtcbiAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdHMgPj0gbWF4QXR0ZW1wdHMpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidW5yZWFjaGFibGVcIik7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgRmFsbGJhY2tBcGk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWxsYmFja0FwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/fallbackApi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/merkle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/merkle.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_CHUNK_SIZE: () => (/* binding */ MAX_CHUNK_SIZE),\n/* harmony export */   MIN_CHUNK_SIZE: () => (/* binding */ MIN_CHUNK_SIZE),\n/* harmony export */   Merkle: () => (/* binding */ Merkle),\n/* harmony export */   arrayCompare: () => (/* binding */ arrayCompare),\n/* harmony export */   arrayFlatten: () => (/* binding */ arrayFlatten),\n/* harmony export */   bufferToInt: () => (/* binding */ bufferToInt),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   intToBuffer: () => (/* binding */ intToBuffer)\n/* harmony export */ });\n/* harmony import */ var _arweave_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../arweave.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/arweave.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/**\n * @see {@link https://github.com/ArweaveTeam/arweave/blob/fbc381e0e36efffa45d13f2faa6199d3766edaa2/apps/arweave/src/ar_merkle.erl}\n */\n\n\nconst MAX_CHUNK_SIZE = 256 * 1024;\nconst MIN_CHUNK_SIZE = 32 * 1024;\nconst NOTE_SIZE = 32;\nconst HASH_SIZE = 32;\nclass Merkle {\n    crypto;\n    constructor(opts) {\n        this.crypto = opts.deps.crypto;\n    }\n    /**\n     * Takes the input data and chunks it into (mostly) equal sized chunks.\n     * The last chunk will be a bit smaller as it contains the remainder\n     * from the chunking process.\n     */\n    async chunkData(data) {\n        const chunks = [];\n        let rest = data;\n        let cursor = 0;\n        while (rest.byteLength >= MAX_CHUNK_SIZE) {\n            let chunkSize = MAX_CHUNK_SIZE;\n            // If the total bytes left will produce a chunk < MIN_CHUNK_SIZE,\n            // then adjust the amount we put in this 2nd last chunk.\n            const nextChunkSize = rest.byteLength - MAX_CHUNK_SIZE;\n            if (nextChunkSize > 0 && nextChunkSize < MIN_CHUNK_SIZE) {\n                chunkSize = Math.ceil(rest.byteLength / 2);\n                // console.log(`Last chunk will be: ${nextChunkSize} which is below ${MIN_CHUNK_SIZE}, adjusting current to ${chunkSize} with ${rest.byteLength} left.`)\n            }\n            const chunk = rest.slice(0, chunkSize);\n            const dataHash = await this.crypto.hash(chunk);\n            cursor += chunk.byteLength;\n            chunks.push({\n                dataHash,\n                minByteRange: cursor - chunk.byteLength,\n                maxByteRange: cursor,\n            });\n            rest = rest.slice(chunkSize);\n        }\n        chunks.push({\n            dataHash: await this.crypto.hash(rest),\n            minByteRange: cursor,\n            maxByteRange: cursor + rest.byteLength,\n        });\n        return chunks;\n    }\n    async generateLeaves(chunks) {\n        return Promise.all(chunks.map(async ({ dataHash, minByteRange, maxByteRange }) => {\n            return {\n                type: \"leaf\",\n                id: await this.hash(await Promise.all([this.hash(dataHash), this.hash(intToBuffer(maxByteRange))])),\n                dataHash: dataHash,\n                minByteRange,\n                maxByteRange,\n            };\n        }));\n    }\n    /**\n     * Builds an arweave merkle tree and gets the root hash for the given input.\n     */\n    async computeRootHash(data) {\n        const rootNode = await this.generateTree(data);\n        return rootNode.id;\n    }\n    async generateTree(data) {\n        const rootNode = await this.buildLayers(await this.generateLeaves(await this.chunkData(data)));\n        return rootNode;\n    }\n    /**\n     * Generates the data_root, chunks & proofs\n     * needed for a transaction.\n     *\n     * This also checks if the last chunk is a zero-length\n     * chunk and discards that chunk and proof if so.\n     * (we do not need to upload this zero length chunk)\n     *\n     * @param data\n     */\n    async generateTransactionChunks(data) {\n        const chunks = await this.chunkData(data);\n        const leaves = await this.generateLeaves(chunks);\n        const root = await this.buildLayers(leaves);\n        const proofs = await this.generateProofs(root);\n        // Discard the last chunk & proof if it's zero length.\n        const lastChunk = chunks.slice(-1)[0];\n        if (lastChunk.maxByteRange - lastChunk.minByteRange === 0) {\n            chunks.splice(chunks.length - 1, 1);\n            proofs.splice(proofs.length - 1, 1);\n        }\n        return {\n            data_root: root.id,\n            chunks,\n            proofs,\n        };\n    }\n    /**\n     * Starting with the bottom layer of leaf nodes, hash every second pair\n     * into a new branch node, push those branch nodes onto a new layer,\n     * and then recurse, building up the tree to it's root, where the\n     * layer only consists of two items.\n     */\n    async buildLayers(nodes, level = 0) {\n        // If there is only 1 node left, this is going to be the root node\n        if (nodes.length < 2) {\n            const root = nodes[0];\n            // console.log(\"Root layer\", root);\n            return root;\n        }\n        const nextLayer = [];\n        for (let i = 0; i < nodes.length; i += 2) {\n            nextLayer.push(await this.hashBranch(nodes[i], nodes[i + 1]));\n        }\n        // console.log(\"Layer\", nextLayer);\n        return this.buildLayers(nextLayer, level + 1);\n    }\n    /**\n     * Recursively search through all branches of the tree,\n     * and generate a proof for each leaf node.\n     */\n    generateProofs(root) {\n        const proofs = this.resolveBranchProofs(root);\n        if (!Array.isArray(proofs)) {\n            return [proofs];\n        }\n        return arrayFlatten(proofs);\n    }\n    resolveBranchProofs(node, proof = new Uint8Array(), depth = 0) {\n        if (node.type == \"leaf\") {\n            return {\n                offset: node.maxByteRange - 1,\n                proof: (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBuffers)([proof, node.dataHash, intToBuffer(node.maxByteRange)]),\n            };\n        }\n        if (node.type == \"branch\") {\n            const partialProof = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBuffers)([proof, node.leftChild.id, node.rightChild.id, intToBuffer(node.byteRange)]);\n            return [\n                this.resolveBranchProofs(node.leftChild, partialProof, depth + 1),\n                this.resolveBranchProofs(node.rightChild, partialProof, depth + 1),\n            ];\n        }\n        throw new Error(`Unexpected node type`);\n    }\n    async validatePath(id, dest, leftBound, rightBound, path) {\n        if (rightBound <= 0) {\n            return false;\n        }\n        if (dest >= rightBound) {\n            return this.validatePath(id, 0, rightBound - 1, rightBound, path);\n        }\n        if (dest < 0) {\n            return this.validatePath(id, 0, 0, rightBound, path);\n        }\n        if (path.length == HASH_SIZE + NOTE_SIZE) {\n            const pathData = path.slice(0, HASH_SIZE);\n            const endOffsetBuffer = path.slice(pathData.length, pathData.length + NOTE_SIZE);\n            const pathDataHash = await this.hash([await this.hash(pathData), await this.hash(endOffsetBuffer)]);\n            const result = arrayCompare(id, pathDataHash);\n            if (result) {\n                return {\n                    offset: rightBound - 1,\n                    leftBound: leftBound,\n                    rightBound: rightBound,\n                    chunkSize: rightBound - leftBound,\n                };\n            }\n            return false;\n        }\n        const left = path.slice(0, HASH_SIZE);\n        const right = path.slice(left.length, left.length + HASH_SIZE);\n        const offsetBuffer = path.slice(left.length + right.length, left.length + right.length + NOTE_SIZE);\n        const offset = bufferToInt(offsetBuffer);\n        const remainder = path.slice(left.length + right.length + offsetBuffer.length);\n        const pathHash = await this.hash([await this.hash(left), await this.hash(right), await this.hash(offsetBuffer)]);\n        if (arrayCompare(id, pathHash)) {\n            if (dest < offset) {\n                return await this.validatePath(left, dest, leftBound, Math.min(rightBound, offset), remainder);\n            }\n            return await this.validatePath(right, dest, Math.max(leftBound, offset), rightBound, remainder);\n        }\n        return false;\n    }\n    async hashBranch(left, right) {\n        if (!right) {\n            return left;\n        }\n        const branch = {\n            type: \"branch\",\n            id: await this.hash([await this.hash(left.id), await this.hash(right.id), await this.hash(intToBuffer(left.maxByteRange))]),\n            byteRange: left.maxByteRange,\n            maxByteRange: right.maxByteRange,\n            leftChild: left,\n            rightChild: right,\n        };\n        return branch;\n    }\n    async hash(data) {\n        if (Array.isArray(data)) {\n            data = _arweave_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].utils.concatBuffers(data);\n        }\n        return new Uint8Array(await this.crypto.hash(data));\n    }\n    /**\n     * Inspect an arweave chunk proof.\n     * Takes proof, parses, reads and displays the values for console logging.\n     * One proof section per line\n     * Format: left,right,offset => hash\n     */\n    async debug(proof, output = \"\") {\n        if (proof.byteLength < 1) {\n            return output;\n        }\n        const left = proof.slice(0, HASH_SIZE);\n        const right = proof.slice(left.length, left.length + HASH_SIZE);\n        const offsetBuffer = proof.slice(left.length + right.length, left.length + right.length + NOTE_SIZE);\n        const offset = bufferToInt(offsetBuffer);\n        const remainder = proof.slice(left.length + right.length + offsetBuffer.length);\n        const pathHash = await this.hash([await this.hash(left), await this.hash(right), await this.hash(offsetBuffer)]);\n        const updatedOutput = `${output}\\n${JSON.stringify(Buffer.from(left))},${JSON.stringify(Buffer.from(right))},${offset} => ${JSON.stringify(pathHash)}`;\n        return this.debug(remainder, updatedOutput);\n    }\n}\nfunction arrayFlatten(input) {\n    const flat = [];\n    input.forEach((item) => {\n        if (Array.isArray(item)) {\n            flat.push(...arrayFlatten(item));\n        }\n        else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nfunction intToBuffer(note) {\n    const buffer = new Uint8Array(NOTE_SIZE);\n    for (let i = buffer.length - 1; i >= 0; i--) {\n        const byte = note % 256;\n        buffer[i] = byte;\n        note = (note - byte) / 256;\n    }\n    return buffer;\n}\nfunction bufferToInt(buffer) {\n    let value = 0;\n    for (let i = 0; i < buffer.length; i++) {\n        value *= 256;\n        value += buffer[i];\n    }\n    return value;\n}\nconst arrayCompare = (a, b) => a.every((value, index) => b[index] === value);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Merkle);\n//# sourceMappingURL=merkle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/merkle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction-uploader.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/transaction-uploader.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FATAL_CHUNK_UPLOAD_ERRORS: () => (/* binding */ FATAL_CHUNK_UPLOAD_ERRORS),\n/* harmony export */   TransactionUploader: () => (/* binding */ TransactionUploader)\n/* harmony export */ });\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n\n\n\n// import { validatePath } from \"./merkle.js\";\n// Maximum amount of chunks we will upload in the body.\nconst MAX_CHUNKS_IN_BODY = 1;\n// We assume these errors are intermitment and we can try again after a delay:\n// - not_joined\n// - timeout\n// - data_root_not_found (we may have hit a node that just hasn't seen it yet)\n// - exceeds_disk_pool_size_limit\n// We also try again after any kind of unexpected network errors\n// Errors from /chunk we should never try and continue on.\nconst FATAL_CHUNK_UPLOAD_ERRORS = [\n    \"invalid_json\",\n    \"chunk_too_big\",\n    \"data_path_too_big\",\n    \"offset_too_big\",\n    \"data_size_too_big\",\n    \"chunk_proof_ratio_not_attractive\",\n    \"invalid_proof\",\n];\n// Amount we will delay on receiving an error response but do want to continue.\nconst ERROR_DELAY = 1000 * 40;\nclass TransactionUploader {\n    chunkIndex = 0;\n    txPosted = false;\n    transaction;\n    lastRequestTimeEnd = 0;\n    totalErrors = 0; // Not serialized.\n    data;\n    lastResponseStatus = 0;\n    lastResponseError = \"\";\n    get isComplete() {\n        return this.txPosted && this.chunkIndex === this.transaction.chunks.chunks.length;\n    }\n    get totalChunks() {\n        return this.transaction.chunks.chunks.length;\n    }\n    get uploadedChunks() {\n        return this.chunkIndex;\n    }\n    get pctComplete() {\n        return Math.trunc((this.uploadedChunks / this.totalChunks) * 100);\n    }\n    crypto;\n    api;\n    merkle;\n    deepHash;\n    constructor({ deps, transaction, }) {\n        if (!transaction.id) {\n            throw new Error(`Transaction is not signed`);\n        }\n        if (!transaction.chunks) {\n            throw new Error(`Transaction chunks not prepared`);\n        }\n        this.api = deps.api;\n        this.crypto = deps.crypto;\n        this.merkle = deps.merkle;\n        this.deepHash = deps.deepHash;\n        // Make a copy of transaction, zeroing the data so we can serialize.\n        this.data = transaction.data;\n        this.transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            attributes: Object.assign({}, transaction, { data: new Uint8Array(0) }),\n            deps: { merkle: deps.merkle, deepHash: deps.deepHash },\n        });\n    }\n    /**\n     * Uploads the next part of the transaction.\n     * On the first call this posts the transaction\n     * itself and on any subsequent calls uploads the\n     * next chunk until it completes.\n     */\n    async uploadChunk(chunkIndex_) {\n        if (this.isComplete) {\n            throw new Error(`Upload is already complete`);\n        }\n        if (this.lastResponseError !== \"\") {\n            this.totalErrors++;\n        }\n        else {\n            this.totalErrors = 0;\n        }\n        // We have been trying for about an hour receiving an\n        // error every time, so eventually bail.\n        if (this.totalErrors === 100) {\n            throw new Error(`Unable to complete upload: ${this.lastResponseStatus}: ${this.lastResponseError}`);\n        }\n        let delay = this.lastResponseError === \"\" ? 0 : Math.max(this.lastRequestTimeEnd + ERROR_DELAY - Date.now(), ERROR_DELAY);\n        if (delay > 0) {\n            // Jitter delay bcoz networks, subtract up to 30% from 40 seconds\n            delay = delay - delay * Math.random() * 0.3;\n            await new Promise((res) => setTimeout(res, delay));\n        }\n        this.lastResponseError = \"\";\n        if (!this.txPosted) {\n            await this.postTransaction();\n            return;\n        }\n        if (chunkIndex_) {\n            this.chunkIndex = chunkIndex_;\n        }\n        const chunk = this.transaction.getChunk(chunkIndex_ || this.chunkIndex, this.data);\n        const chunkOk = await this.merkle.validatePath(this.transaction.chunks.data_root, parseInt(chunk.offset), 0, parseInt(chunk.data_size), (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.b64UrlToBuffer)(chunk.data_path));\n        if (!chunkOk) {\n            throw new Error(`Unable to validate chunk ${this.chunkIndex}`);\n        }\n        // Catch network errors and turn them into objects with status -1 and an error message.\n        const resp = await this.api.post(`chunk`, this.transaction.getChunk(this.chunkIndex, this.data)).catch((e) => {\n            console.error(e.message);\n            return { status: -1, data: { error: e.message } };\n        });\n        this.lastRequestTimeEnd = Date.now();\n        this.lastResponseStatus = resp.status;\n        if (this.lastResponseStatus == 200) {\n            this.chunkIndex++;\n        }\n        else {\n            this.lastResponseError = (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.getError)(resp);\n            if (FATAL_CHUNK_UPLOAD_ERRORS.includes(this.lastResponseError)) {\n                throw new Error(`Fatal error uploading chunk ${this.chunkIndex}: ${this.lastResponseError}`);\n            }\n        }\n    }\n    /**\n     * Reconstructs an upload from its serialized state and data.\n     * Checks if data matches the expected data_root.\n     *\n     * @param serialized\n     * @param data\n     */\n    static async fromSerialized({ serialized, data, deps, }) {\n        if (!serialized || typeof serialized.chunkIndex !== \"number\" || typeof serialized.transaction !== \"object\") {\n            throw new Error(`Serialized object does not match expected format.`);\n        }\n        // Everything looks ok, reconstruct the TransactionUpload,\n        // prepare the chunks again and verify the data_root matches\n        const transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](serialized.transaction);\n        if (!transaction.chunks) {\n            await transaction.prepareChunks(data);\n        }\n        const upload = new TransactionUploader({\n            deps,\n            transaction,\n        });\n        // Copy the serialized upload information, and data passed in.\n        upload.chunkIndex = serialized.chunkIndex;\n        upload.lastRequestTimeEnd = serialized.lastRequestTimeEnd;\n        upload.lastResponseError = serialized.lastResponseError;\n        upload.lastResponseStatus = serialized.lastResponseStatus;\n        upload.txPosted = serialized.txPosted;\n        upload.data = data;\n        if (upload.transaction.data_root !== serialized.transaction.data_root) {\n            throw new Error(`Data mismatch: Uploader doesn't match provided data.`);\n        }\n        return upload;\n    }\n    /**\n     * Reconstruct an upload from the tx metadata, ie /tx/<id>.\n     *\n     * @param api\n     * @param id\n     * @param data\n     */\n    static async fromTransactionId(api, id) {\n        const resp = await api.get(`tx/${id}`);\n        if (resp.status !== 200) {\n            throw new Error(`Tx ${id} not found: ${resp.status}`);\n        }\n        const transaction = resp.data;\n        transaction.data = new Uint8Array(0);\n        const serialized = {\n            txPosted: true,\n            chunkIndex: 0,\n            lastResponseError: \"\",\n            lastRequestTimeEnd: 0,\n            lastResponseStatus: 0,\n            transaction,\n        };\n        return serialized;\n    }\n    toJSON() {\n        return {\n            chunkIndex: this.chunkIndex,\n            transaction: this.transaction,\n            lastRequestTimeEnd: this.lastRequestTimeEnd,\n            lastResponseStatus: this.lastResponseStatus,\n            lastResponseError: this.lastResponseError,\n            txPosted: this.txPosted,\n        };\n    }\n    // POST to /tx\n    async postTransaction() {\n        const uploadInBody = this.totalChunks <= MAX_CHUNKS_IN_BODY;\n        if (uploadInBody) {\n            // Post the transaction with data.\n            this.transaction.data = this.data;\n            const resp = await this.api.post(`tx`, this.transaction).catch((e) => {\n                console.error(e);\n                return { status: -1, data: { error: e.message } };\n            });\n            this.lastRequestTimeEnd = Date.now();\n            this.lastResponseStatus = resp.status;\n            this.transaction.data = new Uint8Array(0);\n            if (resp.status >= 200 && resp.status < 300) {\n                // We are complete.\n                this.txPosted = true;\n                this.chunkIndex = MAX_CHUNKS_IN_BODY;\n                return;\n            }\n            this.lastResponseError = (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.getError)(resp);\n            throw new Error(`Unable to upload transaction: ${resp.status}, ${this.lastResponseError}`);\n        }\n        // Post the transaction with no data.\n        const resp = await this.api.post(`tx`, this.transaction);\n        this.lastRequestTimeEnd = Date.now();\n        this.lastResponseStatus = resp.status;\n        if (!(resp.status >= 200 && resp.status < 300)) {\n            this.lastResponseError = (0,_error_js__WEBPACK_IMPORTED_MODULE_1__.getError)(resp);\n            throw new Error(`Unable to upload transaction: ${resp.status}, ${this.lastResponseError}`);\n        }\n        this.txPosted = true;\n    }\n}\n//# sourceMappingURL=transaction-uploader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction-uploader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/transaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArweaveTag: () => (/* binding */ ArweaveTag),\n/* harmony export */   \"default\": () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/* eslint-disable no-case-declarations */\n\n\nclass BaseObject {\n    get(field, options) {\n        if (!Object.getOwnPropertyNames(this).includes(field)) {\n            throw new Error(`Field \"${field}\" is not a property of the Arweave Transaction class.`);\n        }\n        // Handle fields that are Uint8Arrays.\n        // To maintain compat we encode them to b64url\n        // if decode option is not specificed.\n        if (this[field] instanceof Uint8Array) {\n            if (options && options.decode && options.string) {\n                return _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferToString(this[field]);\n            }\n            if (options && options.decode && !options.string) {\n                return this[field];\n            }\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url(this[field]);\n        }\n        if (this[field] instanceof Array) {\n            if (options?.decode !== undefined || options?.string !== undefined) {\n                if (field === \"tags\") {\n                    console.warn(`Did you mean to use 'transaction[\"tags\"]' ?`);\n                }\n                throw new Error(`Cannot decode or stringify an array.`);\n            }\n            return this[field];\n        }\n        if (options && options.decode == true) {\n            if (options && options.string) {\n                return _utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToString(this[field]);\n            }\n            return _utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer(this[field]);\n        }\n        return this[field];\n    }\n}\nclass ArweaveTag extends BaseObject {\n    name;\n    value;\n    constructor(name, value /* _decode = false */) {\n        super();\n        this.name = name;\n        this.value = value;\n    }\n}\nclass Transaction extends BaseObject {\n    format = 2;\n    id = \"\";\n    last_tx = \"\";\n    owner = \"\";\n    tags = [];\n    target = \"\";\n    quantity = \"0\";\n    data_size = \"0\";\n    data = new Uint8Array();\n    data_root = \"\";\n    reward = \"0\";\n    signature = \"\";\n    merkle;\n    deepHash;\n    // Computed when needed.\n    chunks;\n    constructor({ attributes, deps }) {\n        super();\n        this.merkle = deps.merkle;\n        this.deepHash = deps.deepHash;\n        Object.assign(this, attributes);\n        // If something passes in a Tx that has been toJSON'ed and back,\n        // or where the data was filled in from /tx/data endpoint.\n        // data will be b64url encoded, so decode it.\n        if (typeof this.data === \"string\") {\n            this.data = _utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer(this.data);\n        }\n        if (attributes.tags) {\n            this.tags = attributes.tags /* .map((tag: { name: string; value: string }) => {\n              return new Tag(tag.name, tag.value);\n            }) */;\n        }\n    }\n    addTag(name, value) {\n        this.tags.push({ name: _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToB64Url(name), value: _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToB64Url(value) });\n    }\n    toJSON() {\n        return {\n            format: this.format,\n            id: this.id,\n            last_tx: this.last_tx,\n            owner: this.owner,\n            tags: this.tags,\n            target: this.target,\n            quantity: this.quantity,\n            data: _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url(this.data),\n            data_size: this.data_size,\n            data_root: this.data_root,\n            data_tree: this.data_tree,\n            reward: this.reward,\n            signature: this.signature,\n        };\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    setSignature({ id, owner, reward, tags, signature }) {\n        this.id = id;\n        this.owner = owner;\n        if (reward)\n            this.reward = reward;\n        if (tags)\n            this.tags = tags;\n        this.signature = signature;\n    }\n    async prepareChunks(data) {\n        // Note: we *do not* use `this.data`, the caller may be\n        // operating on a transaction with an zero length data field.\n        // This function computes the chunks for the data passed in and\n        // assigns the result to this transaction. It should not read the\n        // data *from* this transaction.\n        if (!this.chunks && data.byteLength > 0) {\n            this.chunks = await this.merkle.generateTransactionChunks(data);\n            this.data_root = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url)(this.chunks.data_root);\n        }\n        if (!this.chunks && data.byteLength === 0) {\n            this.chunks = {\n                chunks: [],\n                data_root: new Uint8Array(),\n                proofs: [],\n            };\n            this.data_root = \"\";\n        }\n    }\n    // Returns a chunk in a format suitable for posting to /chunk.\n    // Similar to `prepareChunks()` this does not operate `this.data`,\n    // instead using the data passed in.\n    getChunk(idx, data) {\n        if (!this.chunks) {\n            throw new Error(`Chunks have not been prepared`);\n        }\n        const proof = this.chunks.proofs[idx];\n        const chunk = this.chunks.chunks[idx];\n        return {\n            data_root: this.data_root,\n            data_size: this.data_size,\n            data_path: _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url(proof.proof),\n            offset: proof.offset.toString(),\n            chunk: _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange)),\n        };\n    }\n    async getSignatureData() {\n        switch (this.format) {\n            case 1:\n                const tags = this.tags.reduce((accumulator, tag) => {\n                    return _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers([accumulator, (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer)(tag.name), (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer)(tag.value)]);\n                }, new Uint8Array());\n                return _utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers([\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    this.get(\"data\", { decode: true, string: false }),\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.quantity),\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tags,\n                ]);\n            case 2:\n                if (!this.data_root) {\n                    await this.prepareChunks(this.data);\n                }\n                const tagList = this.tags.map((tag) => [(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer)(tag.name), (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer)(tag.value)]);\n                return await this.deepHash.deepHash([\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.format.toString()),\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.quantity),\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tagList,\n                    _utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer(this.data_size),\n                    this.get(\"data_root\", { decode: true, string: false }),\n                ]);\n            default:\n                throw new Error(`Unexpected transaction format: ${this.format}`);\n        }\n    }\n}\n//# sourceMappingURL=transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/lib/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arToWinston: () => (/* binding */ arToWinston),\n/* harmony export */   b64UrlDecode: () => (/* binding */ b64UrlDecode),\n/* harmony export */   b64UrlEncode: () => (/* binding */ b64UrlEncode),\n/* harmony export */   b64UrlToBuffer: () => (/* binding */ b64UrlToBuffer),\n/* harmony export */   b64UrlToString: () => (/* binding */ b64UrlToString),\n/* harmony export */   bufferToString: () => (/* binding */ bufferToString),\n/* harmony export */   bufferTob64: () => (/* binding */ bufferTob64),\n/* harmony export */   bufferTob64Url: () => (/* binding */ bufferTob64Url),\n/* harmony export */   concatBuffers: () => (/* binding */ concatBuffers),\n/* harmony export */   stringToB64Url: () => (/* binding */ stringToB64Url),\n/* harmony export */   stringToBuffer: () => (/* binding */ stringToBuffer),\n/* harmony export */   winstonToAr: () => (/* binding */ winstonToAr)\n/* harmony export */ });\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n\n\nfunction concatBuffers(buffers) {\n    let totalLength = 0;\n    for (const b of buffers)\n        totalLength += b.byteLength;\n    const temp = new Uint8Array(totalLength);\n    let offset = 0;\n    temp.set(new Uint8Array(buffers[0]), offset);\n    offset += buffers[0].byteLength;\n    for (let i = 1; i < buffers.length; i++) {\n        temp.set(new Uint8Array(buffers[i]), offset);\n        offset += buffers[i].byteLength;\n    }\n    return temp;\n}\nfunction b64UrlToString(b64UrlString) {\n    const buffer = b64UrlToBuffer(b64UrlString);\n    return bufferToString(buffer);\n}\nfunction bufferToString(buffer) {\n    return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n}\nfunction stringToBuffer(string) {\n    return new TextEncoder().encode(string);\n}\nfunction stringToB64Url(string) {\n    return bufferTob64Url(stringToBuffer(string));\n}\nfunction b64UrlToBuffer(b64UrlString) {\n    return new Uint8Array((0,base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray)(b64UrlDecode(b64UrlString)));\n}\nfunction bufferTob64(buffer) {\n    return (0,base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray)(new Uint8Array(buffer));\n}\nfunction bufferTob64Url(buffer) {\n    return b64UrlEncode(bufferTob64(buffer));\n}\nfunction b64UrlEncode(b64UrlString) {\n    return b64UrlString.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n}\nfunction b64UrlDecode(b64UrlString) {\n    b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n    let padding;\n    b64UrlString.length % 4 == 0 ? (padding = 0) : (padding = 4 - (b64UrlString.length % 4));\n    return b64UrlString.concat(\"=\".repeat(padding));\n}\nfunction winstonToAr(winston) {\n    return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](winston).shiftedBy(-12);\n}\nfunction arToWinston(ar) {\n    return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ar).shiftedBy(12);\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF1RDtBQUNsQjtBQUM5QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQLHNDQUFzQyxhQUFhO0FBQ25EO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCwwQkFBMEIsc0RBQVc7QUFDckM7QUFDTztBQUNQLFdBQVcsd0RBQWE7QUFDeEI7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsb0RBQVM7QUFDeEI7QUFDTztBQUNQLGVBQWUsb0RBQVM7QUFDeEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi9saWIvdXRpbHMuanM/OTY0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tQnl0ZUFycmF5LCB0b0J5dGVBcnJheSB9IGZyb20gXCJiYXNlNjQtanNcIjtcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSBcImJpZ251bWJlci5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ1ZmZlcnMoYnVmZmVycykge1xuICAgIGxldCB0b3RhbExlbmd0aCA9IDA7XG4gICAgZm9yIChjb25zdCBiIG9mIGJ1ZmZlcnMpXG4gICAgICAgIHRvdGFsTGVuZ3RoICs9IGIuYnl0ZUxlbmd0aDtcbiAgICBjb25zdCB0ZW1wID0gbmV3IFVpbnQ4QXJyYXkodG90YWxMZW5ndGgpO1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIHRlbXAuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZmZlcnNbMF0pLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSBidWZmZXJzWzBdLmJ5dGVMZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBidWZmZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRlbXAuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZmZlcnNbaV0pLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gYnVmZmVyc1tpXS5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gdGVtcDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBiNjRVcmxUb1N0cmluZyhiNjRVcmxTdHJpbmcpIHtcbiAgICBjb25zdCBidWZmZXIgPSBiNjRVcmxUb0J1ZmZlcihiNjRVcmxTdHJpbmcpO1xuICAgIHJldHVybiBidWZmZXJUb1N0cmluZyhidWZmZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ1ZmZlclRvU3RyaW5nKGJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoXCJ1dGYtOFwiLCB7IGZhdGFsOiB0cnVlIH0pLmRlY29kZShidWZmZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvQnVmZmVyKHN0cmluZykge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyaW5nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdUb0I2NFVybChzdHJpbmcpIHtcbiAgICByZXR1cm4gYnVmZmVyVG9iNjRVcmwoc3RyaW5nVG9CdWZmZXIoc3RyaW5nKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYjY0VXJsVG9CdWZmZXIoYjY0VXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRvQnl0ZUFycmF5KGI2NFVybERlY29kZShiNjRVcmxTdHJpbmcpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyVG9iNjQoYnVmZmVyKSB7XG4gICAgcmV0dXJuIGZyb21CeXRlQXJyYXkobmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyVG9iNjRVcmwoYnVmZmVyKSB7XG4gICAgcmV0dXJuIGI2NFVybEVuY29kZShidWZmZXJUb2I2NChidWZmZXIpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBiNjRVcmxFbmNvZGUoYjY0VXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIGI2NFVybFN0cmluZy5yZXBsYWNlKC9cXCsvZywgXCItXCIpLnJlcGxhY2UoL1xcLy9nLCBcIl9cIikucmVwbGFjZSgvXFw9L2csIFwiXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGI2NFVybERlY29kZShiNjRVcmxTdHJpbmcpIHtcbiAgICBiNjRVcmxTdHJpbmcgPSBiNjRVcmxTdHJpbmcucmVwbGFjZSgvXFwtL2csIFwiK1wiKS5yZXBsYWNlKC9cXF8vZywgXCIvXCIpO1xuICAgIGxldCBwYWRkaW5nO1xuICAgIGI2NFVybFN0cmluZy5sZW5ndGggJSA0ID09IDAgPyAocGFkZGluZyA9IDApIDogKHBhZGRpbmcgPSA0IC0gKGI2NFVybFN0cmluZy5sZW5ndGggJSA0KSk7XG4gICAgcmV0dXJuIGI2NFVybFN0cmluZy5jb25jYXQoXCI9XCIucmVwZWF0KHBhZGRpbmcpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aW5zdG9uVG9Bcih3aW5zdG9uKSB7XG4gICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIod2luc3Rvbikuc2hpZnRlZEJ5KC0xMik7XG59XG5leHBvcnQgZnVuY3Rpb24gYXJUb1dpbnN0b24oYXIpIHtcbiAgICByZXR1cm4gbmV3IEJpZ051bWJlcihhcikuc2hpZnRlZEJ5KDEyKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/network.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/network.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Network)\n/* harmony export */ });\nclass Network {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    getInfo() {\n        return this.api.get(`info`).then((response) => {\n            return response.data;\n        });\n    }\n    getPeers() {\n        return this.api.get(`peers`).then((response) => {\n            return response.data;\n        });\n    }\n}\n//# sourceMappingURL=network.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL25ldHdvcmsuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL25ldHdvcmsuanM/OWZkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBOZXR3b3JrIHtcbiAgICBhcGk7XG4gICAgY29uc3RydWN0b3IoYXBpKSB7XG4gICAgICAgIHRoaXMuYXBpID0gYXBpO1xuICAgIH1cbiAgICBnZXRJbmZvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcGkuZ2V0KGBpbmZvYCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0UGVlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaS5nZXQoYHBlZXJzYCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXR3b3JrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/network.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/transactions.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/transactions.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Transactions)\n/* harmony export */ });\n/* harmony import */ var _lib_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/error.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/error.js\");\n/* harmony import */ var _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/transaction.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js\");\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/* harmony import */ var _lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/transaction-uploader.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction-uploader.js\");\n\n\n\n\nclass Transactions {\n    api;\n    crypto;\n    chunks;\n    merkle;\n    deepHash;\n    constructor({ deps }) {\n        this.api = deps.api;\n        this.crypto = deps.crypto;\n        this.chunks = deps.chunks;\n        this.merkle = deps.merkle;\n        this.deepHash = deps.deepHash;\n    }\n    getTransactionAnchor() {\n        /**\n         * Maintain compatibility with erdjs which sets a global axios.defaults.transformResponse\n         * in order to overcome some other issue in:  https://github.com/axios/axios/issues/983\n         *\n         * However, this introduces a problem with ardrive-js, so we will enforce\n         * config =  {transformResponse: []} where we do not require a transform\n         */\n        return this.api.get(`tx_anchor`, { transformResponse: [] }).then((response) => {\n            return response.data;\n        });\n    }\n    getPrice(byteSize, targetAddress) {\n        const endpoint = targetAddress ? `price/${byteSize}/${targetAddress}` : `price/${byteSize}`;\n        return this.api\n            .get(endpoint, {\n            transformResponse: [\n                /**\n                 * We need to specify a response transformer to override\n                 * the default JSON.parse behavior, as this causes\n                 * winston to be converted to a number and we want to\n                 * return it as a winston string.\n                 * @param data\n                 */\n                function (data) {\n                    return data;\n                },\n            ],\n        })\n            .then((response) => {\n            return response.data;\n        });\n    }\n    async get(id) {\n        const response = await this.api.get(`tx/${id}`);\n        if (response.status == 200) {\n            const data_size = parseInt(response.data.data_size);\n            if (response.data.format >= 2 && data_size > 0 && data_size <= 1024 * 1024 * 12) {\n                const data = await this.getData(id);\n                return new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n                    attributes: {\n                        ...response.data,\n                        data,\n                    },\n                    deps: { merkle: this.merkle, deepHash: this.deepHash },\n                });\n            }\n            return new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n                attributes: {\n                    ...response.data,\n                    format: response.data.format || 1,\n                },\n                deps: { merkle: this.merkle, deepHash: this.deepHash },\n            });\n        }\n        if (response.status === 404) {\n            throw new _lib_error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"TX_NOT_FOUND\" /* ArweaveErrorType.TX_NOT_FOUND */);\n        }\n        if (response.status === 410) {\n            throw new _lib_error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"TX_FAILED\" /* ArweaveErrorType.TX_FAILED */);\n        }\n        throw new _lib_error_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"TX_INVALID\" /* ArweaveErrorType.TX_INVALID */);\n    }\n    fromRaw(attributes) {\n        return new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ attributes, deps: { merkle: this.merkle, deepHash: this.deepHash } });\n    }\n    getStatus(id) {\n        return this.api.get(`tx/${id}/status`).then((response) => {\n            if (response.status === 200) {\n                return {\n                    status: 200,\n                    confirmed: response.data,\n                };\n            }\n            return {\n                status: response.status,\n                confirmed: null,\n            };\n        });\n    }\n    async getData(id) {\n        let data = undefined;\n        try {\n            data = (await this.api.get(`/${id}`, { responseType: \"arraybuffer\" })).data;\n        }\n        catch (error) {\n            console.error(`Error while trying to download contiguous data from gateway cache for ${id}`);\n            console.error(error);\n        }\n        if (!data) {\n            console.warn(`Falling back to chunks for ${id}`);\n            try {\n                data = await this.chunks.downloadChunkedData(id);\n            }\n            catch (error) {\n                console.error(`Error while trying to download chunked data for ${id}`);\n                console.error(error);\n            }\n        }\n        if (!data) {\n            throw new Error(`${id} data was not found!`);\n        }\n        return data;\n    }\n    async getDataStream(id) {\n        let data = undefined;\n        try {\n            const resData = (await this.api.get(`/${id}`, { responseType: \"arraybuffer\" })).data;\n            const gen = async function* g() {\n                yield resData;\n            };\n            data = gen();\n        }\n        catch (error) {\n            console.error(`Error while trying to download contiguous data from gateway cache for ${id}`);\n            console.error(error);\n        }\n        if (!data) {\n            console.warn(`Falling back to chunks for ${id}`);\n            try {\n                const gen = this.chunks.concurrentChunkDownloader(id);\n                data = gen;\n            }\n            catch (error) {\n                console.error(`Error while trying to download chunked data for ${id}`);\n                console.error(error);\n            }\n        }\n        if (!data) {\n            throw new Error(`${id} data was not found!`);\n        }\n        return data;\n    }\n    async sign(transaction, jwk, // \"use_wallet\" for backwards compatibility only\n    options) {\n        /** Non-exhaustive (only checks key names), but previously no jwk checking was done */\n        const isJwk = (obj) => {\n            let valid = true;\n            [\"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"].map((key) => !(key in obj) && (valid = false));\n            return valid;\n        };\n        const validJwk = typeof jwk === \"object\" && isJwk(jwk);\n        const externalWallet = typeof arweaveWallet === \"object\";\n        if (!validJwk && !externalWallet) {\n            throw new Error(`No valid JWK or external wallet found to sign transaction.`);\n        }\n        else if (externalWallet) {\n            try {\n                const existingPermissions = await arweaveWallet.getPermissions();\n                if (!existingPermissions.includes(\"SIGN_TRANSACTION\"))\n                    await arweaveWallet.connect([\"SIGN_TRANSACTION\"]);\n            }\n            catch {\n                // Permission is already granted\n            }\n            // for external compatibility\n            transaction.tags = transaction.tags.map((v) => new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__.ArweaveTag(v.name, v.value));\n            const signedTransaction = await arweaveWallet.sign(transaction, options);\n            transaction.setSignature({\n                id: signedTransaction.id,\n                owner: signedTransaction.owner,\n                reward: signedTransaction.reward,\n                tags: signedTransaction.tags,\n                signature: signedTransaction.signature,\n            });\n        }\n        else if (validJwk) {\n            transaction.setOwner(jwk.n);\n            const dataToSign = await transaction.getSignatureData();\n            const rawSignature = await this.crypto.sign(jwk, dataToSign, options);\n            const id = await this.crypto.hash(rawSignature);\n            transaction.setSignature({\n                id: _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__.bufferTob64Url(id),\n                owner: jwk.n,\n                signature: _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__.bufferTob64Url(rawSignature),\n            });\n        }\n        else {\n            // can't get here, but for sanity we'll throw an error.\n            throw new Error(`An error occurred while signing. Check wallet is valid`);\n        }\n    }\n    async verify(transaction) {\n        const signaturePayload = await transaction.getSignatureData();\n        /**\n         * The transaction ID should be a SHA-256 hash of the raw signature bytes, so this needs\n         * to be recalculated from the signature and checked against the transaction ID.\n         */\n        const rawSignature = transaction.get(\"signature\", {\n            decode: true,\n            string: false,\n        });\n        const expectedId = _lib_utils_js__WEBPACK_IMPORTED_MODULE_2__.bufferTob64Url(await this.crypto.hash(rawSignature));\n        if (transaction.id !== expectedId) {\n            throw new Error(`Invalid transaction signature or ID! The transaction ID doesn't match the expected SHA-256 hash of the signature.`);\n        }\n        /**\n         * Now verify the signature is valid and signed by the owner wallet (owner field = originating wallet public key).\n         */\n        return this.crypto.verify(transaction.owner, signaturePayload, rawSignature);\n    }\n    async post(transaction) {\n        if (typeof transaction === \"string\") {\n            transaction = new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ attributes: JSON.parse(transaction), deps: { merkle: this.merkle, deepHash: this.deepHash } });\n        }\n        else if (typeof transaction.readInt32BE === \"function\") {\n            transaction = new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ attributes: JSON.parse(transaction.toString()), deps: { merkle: this.merkle, deepHash: this.deepHash } });\n        }\n        else if (typeof transaction === \"object\" && !(transaction instanceof _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n            transaction = new _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ attributes: transaction, deps: { merkle: this.merkle, deepHash: this.deepHash } });\n        }\n        if (!(transaction instanceof _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n            throw new Error(`Must be Transaction object`);\n        }\n        if (!transaction.chunks) {\n            await transaction.prepareChunks(transaction.data);\n        }\n        const uploader = await this.getUploader(transaction, transaction.data);\n        // Emulate existing error & return value behavior.\n        try {\n            while (!uploader.isComplete) {\n                await uploader.uploadChunk();\n            }\n        }\n        catch (e) {\n            if (uploader.lastResponseStatus > 0) {\n                return {\n                    status: uploader.lastResponseStatus,\n                    statusText: uploader.lastResponseError,\n                    data: {\n                        error: uploader.lastResponseError,\n                    },\n                };\n            }\n            throw e;\n        }\n        return {\n            status: 200,\n            statusText: \"OK\",\n            data: {},\n        };\n    }\n    /**\n     * Gets an uploader than can be used to upload a transaction chunk by chunk, giving progress\n     * and the ability to resume.\n     *\n     * Usage example:\n     *\n     * ```\n     * const uploader = arweave.transactions.getUploader(transaction);\n     * while (!uploader.isComplete) {\n     *   await uploader.uploadChunk();\n     *   console.log(`${uploader.pctComplete}%`);\n     * }\n     * ```\n     *\n     * @param upload a Transaction object, a previously save progress object, or a transaction id.\n     * @param data the data of the transaction. Required when resuming an upload.\n     */\n    async getUploader(upload, data) {\n        let uploader;\n        if (data instanceof ArrayBuffer) {\n            data = new Uint8Array(data);\n        }\n        if (upload instanceof _lib_transaction_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n            if (!data) {\n                data = upload.data;\n            }\n            if (!(data instanceof Uint8Array)) {\n                throw new Error(\"Data format is invalid\");\n            }\n            if (!upload.chunks) {\n                await upload.prepareChunks(data);\n            }\n            uploader = new _lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__.TransactionUploader({\n                transaction: upload,\n                deps: { api: this.api, crypto: this.crypto, merkle: this.merkle, deepHash: this.deepHash },\n            });\n            if (!uploader.data || uploader.data.length === 0) {\n                uploader.data = data;\n            }\n        }\n        else {\n            if (typeof upload === \"string\") {\n                upload = await _lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__.TransactionUploader.fromTransactionId(this.api, upload);\n            }\n            if (!data || !(data instanceof Uint8Array)) {\n                throw new Error(`Must provide data when resuming upload`);\n            }\n            // upload should be a serialized upload.\n            uploader = await _lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__.TransactionUploader.fromSerialized({\n                deps: { api: this.api, merkle: this.merkle, crypto: this.crypto, deepHash: this.deepHash },\n                serialized: upload,\n                data,\n            });\n        }\n        return uploader;\n    }\n    /**\n     * Async generator version of uploader\n     *\n     * Usage example:\n     *\n     * ```\n     * for await (const uploader of arweave.transactions.upload(tx)) {\n     *  console.log(`${uploader.pctComplete}%`);\n     * }\n     * ```\n     *\n     * @param upload a Transaction object, a previously save uploader, or a transaction id.\n     * @param data the data of the transaction. Required when resuming an upload.\n     */\n    async *upload(upload, data) {\n        const uploader = await this.getUploader(upload, data);\n        while (!uploader.isComplete) {\n            await uploader.uploadChunk();\n            yield uploader;\n        }\n        return uploader;\n    }\n}\n//# sourceMappingURL=transactions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/common/wallets.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/common/wallets.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Wallets)\n/* harmony export */ });\n/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n\nclass Wallets {\n    api;\n    crypto;\n    constructor(api, crypto) {\n        this.api = api;\n        this.crypto = crypto;\n    }\n    /**\n     * Get the wallet balance for the given address.\n     *\n     * @param {string} address - The arweave address to get the balance for.\n     *\n     * @returns {Promise<string>} - Promise which resolves with a winston string balance.\n     */\n    getBalance(address) {\n        return this.api\n            .get(`wallet/${address}/balance`, {\n            transformResponse: [\n                /**\n                 * We need to specify a response transformer to override\n                 * the default JSON.parse behaviour, as this causes\n                 * balances to be converted to a number and we want to\n                 * return it as a winston string.\n                 * @param data\n                 */\n                function (data) {\n                    return data;\n                },\n            ],\n        })\n            .then((response) => {\n            return response.data;\n        });\n    }\n    /**\n     * Get the last transaction ID for the given wallet address.\n     *\n     * @param {string} address - The arweave address to get the transaction for.\n     *\n     * @returns {Promise<string>} - Promise which resolves with a transaction ID.\n     */\n    getLastTransactionID(address) {\n        return this.api.get(`wallet/${address}/last_tx`).then((response) => {\n            return response.data;\n        });\n    }\n    generate() {\n        return this.crypto.generateJWK();\n    }\n    async jwkToAddress(jwk) {\n        if (!jwk || jwk === \"use_wallet\") {\n            return this.getAddress();\n        }\n        else {\n            return this.getAddress(jwk);\n        }\n    }\n    async getAddress(jwk) {\n        if (!jwk || jwk === \"use_wallet\") {\n            try {\n                await arweaveWallet.connect([\"ACCESS_ADDRESS\"]);\n            }\n            catch {\n                // Permission is already granted\n            }\n            return arweaveWallet.getActiveAddress();\n        }\n        else {\n            return this.ownerToAddress(jwk.n);\n        }\n    }\n    async ownerToAddress(owner) {\n        return _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferTob64Url(await this.crypto.hash(_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.b64UrlToBuffer(owner)));\n    }\n}\n//# sourceMappingURL=wallets.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vY29tbW9uL3dhbGxldHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDaEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQSxzQ0FBc0MsUUFBUTtBQUM5QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHlEQUEyQix3QkFBd0IseURBQTJCO0FBQzdGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL2NvbW1vbi93YWxsZXRzLmpzPzA3MTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQXJ3ZWF2ZVV0aWxzIGZyb20gXCIuL2xpYi91dGlscy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2FsbGV0cyB7XG4gICAgYXBpO1xuICAgIGNyeXB0bztcbiAgICBjb25zdHJ1Y3RvcihhcGksIGNyeXB0bykge1xuICAgICAgICB0aGlzLmFwaSA9IGFwaTtcbiAgICAgICAgdGhpcy5jcnlwdG8gPSBjcnlwdG87XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgd2FsbGV0IGJhbGFuY2UgZm9yIHRoZSBnaXZlbiBhZGRyZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFkZHJlc3MgLSBUaGUgYXJ3ZWF2ZSBhZGRyZXNzIHRvIGdldCB0aGUgYmFsYW5jZSBmb3IuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSAtIFByb21pc2Ugd2hpY2ggcmVzb2x2ZXMgd2l0aCBhIHdpbnN0b24gc3RyaW5nIGJhbGFuY2UuXG4gICAgICovXG4gICAgZ2V0QmFsYW5jZShhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaVxuICAgICAgICAgICAgLmdldChgd2FsbGV0LyR7YWRkcmVzc30vYmFsYW5jZWAsIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybVJlc3BvbnNlOiBbXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogV2UgbmVlZCB0byBzcGVjaWZ5IGEgcmVzcG9uc2UgdHJhbnNmb3JtZXIgdG8gb3ZlcnJpZGVcbiAgICAgICAgICAgICAgICAgKiB0aGUgZGVmYXVsdCBKU09OLnBhcnNlIGJlaGF2aW91ciwgYXMgdGhpcyBjYXVzZXNcbiAgICAgICAgICAgICAgICAgKiBiYWxhbmNlcyB0byBiZSBjb252ZXJ0ZWQgdG8gYSBudW1iZXIgYW5kIHdlIHdhbnQgdG9cbiAgICAgICAgICAgICAgICAgKiByZXR1cm4gaXQgYXMgYSB3aW5zdG9uIHN0cmluZy5cbiAgICAgICAgICAgICAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgbGFzdCB0cmFuc2FjdGlvbiBJRCBmb3IgdGhlIGdpdmVuIHdhbGxldCBhZGRyZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFkZHJlc3MgLSBUaGUgYXJ3ZWF2ZSBhZGRyZXNzIHRvIGdldCB0aGUgdHJhbnNhY3Rpb24gZm9yLlxuICAgICAqXG4gICAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gLSBQcm9taXNlIHdoaWNoIHJlc29sdmVzIHdpdGggYSB0cmFuc2FjdGlvbiBJRC5cbiAgICAgKi9cbiAgICBnZXRMYXN0VHJhbnNhY3Rpb25JRChhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaS5nZXQoYHdhbGxldC8ke2FkZHJlc3N9L2xhc3RfdHhgKS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZW5lcmF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3J5cHRvLmdlbmVyYXRlSldLKCk7XG4gICAgfVxuICAgIGFzeW5jIGp3a1RvQWRkcmVzcyhqd2spIHtcbiAgICAgICAgaWYgKCFqd2sgfHwgandrID09PSBcInVzZV93YWxsZXRcIikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWRkcmVzcygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWRkcmVzcyhqd2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGdldEFkZHJlc3MoandrKSB7XG4gICAgICAgIGlmICghandrIHx8IGp3ayA9PT0gXCJ1c2Vfd2FsbGV0XCIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgYXJ3ZWF2ZVdhbGxldC5jb25uZWN0KFtcIkFDQ0VTU19BRERSRVNTXCJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgICAgICAvLyBQZXJtaXNzaW9uIGlzIGFscmVhZHkgZ3JhbnRlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGFyd2VhdmVXYWxsZXQuZ2V0QWN0aXZlQWRkcmVzcygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub3duZXJUb0FkZHJlc3MoandrLm4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIG93bmVyVG9BZGRyZXNzKG93bmVyKSB7XG4gICAgICAgIHJldHVybiBBcndlYXZlVXRpbHMuYnVmZmVyVG9iNjRVcmwoYXdhaXQgdGhpcy5jcnlwdG8uaGFzaChBcndlYXZlVXRpbHMuYjY0VXJsVG9CdWZmZXIob3duZXIpKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FsbGV0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/common/wallets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/node/arweave.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/node/arweave.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* binding */ Arweave),\n/* harmony export */   NodeArweave: () => (/* binding */ NodeArweave),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/index.js\");\n/* harmony import */ var _node_driver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-driver.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/node/node-driver.js\");\n/* harmony import */ var _stream_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stream/index.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/index.js\");\n\n\n\nclass Arweave extends _common_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    stream;\n    /**\n     * Constructor for a new `Arweave` instance - this one uses the node crypto driver\n     * @param gateways - Specify the Arweave gateway(s) you want to use for requests\n     * @param options - Other configuration options\n     * @param options.miners - A list of Arweave miners (peers) to use for requests\n     * @param options.gateways - A list of Arweave miners (peers) to use for requests\n     */\n    constructor(gateways, options) {\n        super({ crypto: options?.crypto ?? new _node_driver_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](), ...options, gateways: gateways ?? \"https://arweave.net\" });\n        this.stream = new _stream_index_js__WEBPACK_IMPORTED_MODULE_2__.Stream({\n            deps: { crypto: this.crypto, api: this.api, merkle: this.merkle, transactions: this.transactions, deepHash: this.deepHash },\n        });\n    }\n    static init(apiConfig) {\n        return new Arweave(apiConfig);\n    }\n}\nconst NodeArweave = Arweave;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arweave);\n//# sourceMappingURL=arweave.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vbm9kZS9hcndlYXZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNDO0FBQ0w7QUFDcEMsc0JBQXNCLHdEQUFhO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrQkFBK0IsdURBQWdCLDZEQUE2RDtBQUM1SCwwQkFBMEIsb0RBQU07QUFDaEMsb0JBQW9CLG1IQUFtSDtBQUN2SSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUVBQWUsT0FBTyxFQUFDO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vbm9kZS9hcndlYXZlLmpzPzZjMGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1vbkFyd2VhdmUgZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IE5vZGVDcnlwdG9Ecml2ZXIgZnJvbSBcIi4vbm9kZS1kcml2ZXIuanNcIjtcbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuL3N0cmVhbS9pbmRleC5qc1wiO1xuZXhwb3J0IGNsYXNzIEFyd2VhdmUgZXh0ZW5kcyBDb21tb25BcndlYXZlIHtcbiAgICBzdHJlYW07XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0b3IgZm9yIGEgbmV3IGBBcndlYXZlYCBpbnN0YW5jZSAtIHRoaXMgb25lIHVzZXMgdGhlIG5vZGUgY3J5cHRvIGRyaXZlclxuICAgICAqIEBwYXJhbSBnYXRld2F5cyAtIFNwZWNpZnkgdGhlIEFyd2VhdmUgZ2F0ZXdheShzKSB5b3Ugd2FudCB0byB1c2UgZm9yIHJlcXVlc3RzXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBPdGhlciBjb25maWd1cmF0aW9uIG9wdGlvbnNcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5taW5lcnMgLSBBIGxpc3Qgb2YgQXJ3ZWF2ZSBtaW5lcnMgKHBlZXJzKSB0byB1c2UgZm9yIHJlcXVlc3RzXG4gICAgICogQHBhcmFtIG9wdGlvbnMuZ2F0ZXdheXMgLSBBIGxpc3Qgb2YgQXJ3ZWF2ZSBtaW5lcnMgKHBlZXJzKSB0byB1c2UgZm9yIHJlcXVlc3RzXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZ2F0ZXdheXMsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoeyBjcnlwdG86IG9wdGlvbnM/LmNyeXB0byA/PyBuZXcgTm9kZUNyeXB0b0RyaXZlcigpLCAuLi5vcHRpb25zLCBnYXRld2F5czogZ2F0ZXdheXMgPz8gXCJodHRwczovL2Fyd2VhdmUubmV0XCIgfSk7XG4gICAgICAgIHRoaXMuc3RyZWFtID0gbmV3IFN0cmVhbSh7XG4gICAgICAgICAgICBkZXBzOiB7IGNyeXB0bzogdGhpcy5jcnlwdG8sIGFwaTogdGhpcy5hcGksIG1lcmtsZTogdGhpcy5tZXJrbGUsIHRyYW5zYWN0aW9uczogdGhpcy50cmFuc2FjdGlvbnMsIGRlZXBIYXNoOiB0aGlzLmRlZXBIYXNoIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgaW5pdChhcGlDb25maWcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBcndlYXZlKGFwaUNvbmZpZyk7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IE5vZGVBcndlYXZlID0gQXJ3ZWF2ZTtcbmV4cG9ydCBkZWZhdWx0IEFyd2VhdmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcndlYXZlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/node/arweave.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/node/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/node/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* reexport safe */ _arweave_js__WEBPACK_IMPORTED_MODULE_0__.Arweave),\n/* harmony export */   NodeArweave: () => (/* reexport safe */ _arweave_js__WEBPACK_IMPORTED_MODULE_0__.NodeArweave),\n/* harmony export */   \"default\": () => (/* reexport safe */ _arweave_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _arweave_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arweave.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/node/arweave.js\");\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vbm9kZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZCO0FBQ1U7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9hcndlYXZlL2J1aWxkL2VzbS9ub2RlL2luZGV4LmpzPzU2NDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYXJ3ZWF2ZS5qc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCIuL2Fyd2VhdmUuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/node/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/node/node-driver.js":
/*!******************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/node/node-driver.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeCryptoDriver: () => (/* binding */ NodeCryptoDriver),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_lib_crypto_pem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/lib/crypto/pem.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/crypto/pem.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n\nclass NodeCryptoDriver {\n    keyLength = 4096;\n    publicExponent = 0x10001;\n    hashAlgorithm = \"sha256\";\n    encryptionAlgorithm = \"aes-256-cbc\";\n    generateJWK() {\n        if (typeof crypto__WEBPACK_IMPORTED_MODULE_1__.generateKeyPair !== \"function\") {\n            throw new Error(\"Keypair generation not supported in this version of Node, only supported in versions 10+\");\n        }\n        return new Promise((resolve, reject) => {\n            crypto__WEBPACK_IMPORTED_MODULE_1__.generateKeyPair(\"rsa\", {\n                modulusLength: this.keyLength,\n                publicExponent: this.publicExponent,\n                privateKeyEncoding: {\n                    type: \"pkcs1\",\n                    format: \"pem\",\n                },\n                publicKeyEncoding: { type: \"pkcs1\", format: \"pem\" },\n            }, (err, _publicKey, privateKey) => {\n                if (err) {\n                    reject(err);\n                }\n                resolve(this.pemToJWK(privateKey));\n            });\n        });\n    }\n    sign(jwk, data, { saltLength } = {}) {\n        return new Promise((resolve) => {\n            resolve(crypto__WEBPACK_IMPORTED_MODULE_1__.createSign(this.hashAlgorithm)\n                .update(data)\n                .sign({\n                key: this.jwkToPem(jwk),\n                padding: crypto__WEBPACK_IMPORTED_MODULE_1__.constants.RSA_PKCS1_PSS_PADDING,\n                saltLength,\n            }));\n        });\n    }\n    verify(publicModulus, data, signature) {\n        return new Promise((resolve) => {\n            const publicKey = {\n                kty: \"RSA\",\n                e: \"AQAB\",\n                n: publicModulus,\n            };\n            const pem = this.jwkToPem(publicKey);\n            resolve(crypto__WEBPACK_IMPORTED_MODULE_1__.createVerify(this.hashAlgorithm).update(data).verify({\n                key: pem,\n                padding: crypto__WEBPACK_IMPORTED_MODULE_1__.constants.RSA_PKCS1_PSS_PADDING,\n            }, signature));\n        });\n    }\n    hash(data, algorithm = \"SHA-256\") {\n        return new Promise((resolve) => {\n            resolve(crypto__WEBPACK_IMPORTED_MODULE_1__.createHash(this.parseHashAlgorithm(algorithm)).update(data).digest());\n        });\n    }\n    /**\n     * If a key is passed as a buffer it *must* be exactly 32 bytes.\n     * If a key is passed as a string then any length may be used.\n     *\n     * @param {Buffer} data\n     * @param {(string | Buffer)} key\n     * @returns {Promise<Uint8Array>}\n     */\n    async encrypt(data, key, salt) {\n        // create a random string for deriving the key\n        // const salt = crypto.randomBytes(16);\n        // console.log(salt);\n        // As we're using CBC with a randomised IV per cypher we don't really need\n        // an additional random salt per passphrase.\n        const derivedKey = crypto__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync(key, (salt = salt ? salt : \"salt\"), 100000, 32, this.hashAlgorithm);\n        const iv = crypto__WEBPACK_IMPORTED_MODULE_1__.randomBytes(16);\n        const cipher = crypto__WEBPACK_IMPORTED_MODULE_1__.createCipheriv(this.encryptionAlgorithm, derivedKey, iv);\n        const encrypted = Buffer.concat([iv, cipher.update(data), cipher.final()]);\n        return encrypted;\n    }\n    /**\n     * If a key is passed as a buffer it *must* be exactly 32 bytes.\n     * If a key is passed as a string then any length may be used.\n     *\n     * @param {Buffer} encrypted\n     * @param {(string | Buffer)} key\n     * @returns {Promise<Uint8Array>}\n     */\n    async decrypt(encrypted, key, salt) {\n        try {\n            // create a random string for deriving the key\n            // const salt = crypto.randomBytes(16).toString('hex');\n            // As we're using CBC with a randomised IV per cypher we don't really need\n            // an additional random salt per passphrase.\n            const derivedKey = crypto__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync(key, (salt = salt ? salt : \"salt\"), 100000, 32, this.hashAlgorithm);\n            const iv = encrypted.slice(0, 16);\n            const data = encrypted.slice(16);\n            const decipher = crypto__WEBPACK_IMPORTED_MODULE_1__.createDecipheriv(this.encryptionAlgorithm, derivedKey, iv);\n            const decrypted = Buffer.concat([decipher.update(data), decipher.final()]);\n            return decrypted;\n        }\n        catch (error) {\n            throw new Error(\"Failed to decrypt\");\n        }\n    }\n    jwkToPem(jwk) {\n        return (0,_common_lib_crypto_pem_js__WEBPACK_IMPORTED_MODULE_0__.jwkTopem)(jwk);\n    }\n    pemToJWK(pem) {\n        const jwk = (0,_common_lib_crypto_pem_js__WEBPACK_IMPORTED_MODULE_0__.pemTojwk)(pem);\n        return jwk;\n    }\n    parseHashAlgorithm(algorithm) {\n        switch (algorithm) {\n            case \"SHA-256\":\n                return \"sha256\";\n            case \"SHA-384\":\n                return \"sha384\";\n            default:\n                throw new Error(`Algorithm not supported: ${algorithm}`);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeCryptoDriver);\n//# sourceMappingURL=node-driver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/node/node-driver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/chunker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/node/stream/chunker.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkBuffer: () => (/* binding */ ChunkBuffer),\n/* harmony export */   chunker: () => (/* binding */ chunker)\n/* harmony export */ });\nclass ChunkBuffer {\n    buffers = [];\n    get empty() {\n        return this.buffers.length === 0;\n    }\n    push(...buffers) {\n        this.buffers.push(...buffers);\n    }\n    pop(expectedChunkSize) {\n        let totalBufferSize = 0;\n        for (const [i, chunk] of this.buffers.entries()) {\n            totalBufferSize += chunk.byteLength;\n            if (totalBufferSize === expectedChunkSize) {\n                return Buffer.concat(this.buffers.splice(0, i + 1));\n            }\n            else if (totalBufferSize > expectedChunkSize) {\n                const chunkOverflowAmount = totalBufferSize - expectedChunkSize;\n                const chunkWatermark = chunk.byteLength - chunkOverflowAmount;\n                const chunkBelowWatermark = chunk.slice(0, chunkWatermark);\n                const chunkOverflow = chunk.slice(chunkWatermark);\n                const chunkBuffers = this.buffers.splice(0, i);\n                chunkBuffers.push(chunkBelowWatermark);\n                this.buffers[0] = chunkOverflow;\n                return Buffer.concat(chunkBuffers);\n            }\n        }\n        return null;\n    }\n    flush() {\n        const remaining = Buffer.concat(this.buffers);\n        this.buffers.length = 0;\n        return remaining;\n    }\n}\nfunction chunker(expectedChunkSize, { flush } = { flush: false }) {\n    return async function* (stream) {\n        const chunkBuffer = new ChunkBuffer();\n        for await (const chunk of stream) {\n            chunkBuffer.push(chunk);\n            while (true) {\n                const sizedChunk = chunkBuffer.pop(expectedChunkSize);\n                if (!sizedChunk) {\n                    break;\n                }\n                yield sizedChunk;\n            }\n        }\n        if (flush) {\n            const flushedBuffer = chunkBuffer.flush();\n            if (flushedBuffer.byteLength > 0) {\n                yield flushedBuffer;\n            }\n        }\n    };\n}\n//# sourceMappingURL=chunker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vbm9kZS9zdHJlYW0vY2h1bmtlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0NBQXNDLFFBQVEsSUFBSSxjQUFjO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL25vZGUvc3RyZWFtL2NodW5rZXIuanM/MmE2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ2h1bmtCdWZmZXIge1xuICAgIGJ1ZmZlcnMgPSBbXTtcbiAgICBnZXQgZW1wdHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlcnMubGVuZ3RoID09PSAwO1xuICAgIH1cbiAgICBwdXNoKC4uLmJ1ZmZlcnMpIHtcbiAgICAgICAgdGhpcy5idWZmZXJzLnB1c2goLi4uYnVmZmVycyk7XG4gICAgfVxuICAgIHBvcChleHBlY3RlZENodW5rU2l6ZSkge1xuICAgICAgICBsZXQgdG90YWxCdWZmZXJTaXplID0gMDtcbiAgICAgICAgZm9yIChjb25zdCBbaSwgY2h1bmtdIG9mIHRoaXMuYnVmZmVycy5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIHRvdGFsQnVmZmVyU2l6ZSArPSBjaHVuay5ieXRlTGVuZ3RoO1xuICAgICAgICAgICAgaWYgKHRvdGFsQnVmZmVyU2l6ZSA9PT0gZXhwZWN0ZWRDaHVua1NpemUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gQnVmZmVyLmNvbmNhdCh0aGlzLmJ1ZmZlcnMuc3BsaWNlKDAsIGkgKyAxKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0b3RhbEJ1ZmZlclNpemUgPiBleHBlY3RlZENodW5rU2l6ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rT3ZlcmZsb3dBbW91bnQgPSB0b3RhbEJ1ZmZlclNpemUgLSBleHBlY3RlZENodW5rU2l6ZTtcbiAgICAgICAgICAgICAgICBjb25zdCBjaHVua1dhdGVybWFyayA9IGNodW5rLmJ5dGVMZW5ndGggLSBjaHVua092ZXJmbG93QW1vdW50O1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rQmVsb3dXYXRlcm1hcmsgPSBjaHVuay5zbGljZSgwLCBjaHVua1dhdGVybWFyayk7XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmtPdmVyZmxvdyA9IGNodW5rLnNsaWNlKGNodW5rV2F0ZXJtYXJrKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjaHVua0J1ZmZlcnMgPSB0aGlzLmJ1ZmZlcnMuc3BsaWNlKDAsIGkpO1xuICAgICAgICAgICAgICAgIGNodW5rQnVmZmVycy5wdXNoKGNodW5rQmVsb3dXYXRlcm1hcmspO1xuICAgICAgICAgICAgICAgIHRoaXMuYnVmZmVyc1swXSA9IGNodW5rT3ZlcmZsb3c7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5jb25jYXQoY2h1bmtCdWZmZXJzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZmx1c2goKSB7XG4gICAgICAgIGNvbnN0IHJlbWFpbmluZyA9IEJ1ZmZlci5jb25jYXQodGhpcy5idWZmZXJzKTtcbiAgICAgICAgdGhpcy5idWZmZXJzLmxlbmd0aCA9IDA7XG4gICAgICAgIHJldHVybiByZW1haW5pbmc7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNodW5rZXIoZXhwZWN0ZWRDaHVua1NpemUsIHsgZmx1c2ggfSA9IHsgZmx1c2g6IGZhbHNlIH0pIHtcbiAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24qIChzdHJlYW0pIHtcbiAgICAgICAgY29uc3QgY2h1bmtCdWZmZXIgPSBuZXcgQ2h1bmtCdWZmZXIoKTtcbiAgICAgICAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBzdHJlYW0pIHtcbiAgICAgICAgICAgIGNodW5rQnVmZmVyLnB1c2goY2h1bmspO1xuICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzaXplZENodW5rID0gY2h1bmtCdWZmZXIucG9wKGV4cGVjdGVkQ2h1bmtTaXplKTtcbiAgICAgICAgICAgICAgICBpZiAoIXNpemVkQ2h1bmspIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkIHNpemVkQ2h1bms7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZsdXNoKSB7XG4gICAgICAgICAgICBjb25zdCBmbHVzaGVkQnVmZmVyID0gY2h1bmtCdWZmZXIuZmx1c2goKTtcbiAgICAgICAgICAgIGlmIChmbHVzaGVkQnVmZmVyLmJ5dGVMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgZmx1c2hlZEJ1ZmZlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVua2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/chunker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/node/stream/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* binding */ Stream)\n/* harmony export */ });\n/* harmony import */ var stream_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream/promises */ \"stream/promises\");\n/* harmony import */ var _common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/lib/merkle.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/merkle.js\");\n/* harmony import */ var _common_lib_transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/lib/transaction.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction.js\");\n/* harmony import */ var _common_lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/lib/transaction-uploader.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/transaction-uploader.js\");\n/* harmony import */ var _common_lib_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n/* harmony import */ var _chunker_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunker.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/chunker.js\");\n\n\n\n\n\n\nconst MAX_CONCURRENT_CHUNK_UPLOAD_COUNT = 128;\nclass Stream {\n    crypto;\n    merkle;\n    api;\n    transactions;\n    deepHash;\n    constructor({ deps, }) {\n        this.crypto = deps.crypto;\n        this.merkle = deps.merkle;\n        this.api = deps.api;\n        this.transactions = deps.transactions;\n        this.deepHash = deps.deepHash;\n    }\n    /**\n     * Creates an Arweave transaction from the piped data stream.\n     */\n    createTransactionAsync(attributes, jwk) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const oThis = this;\n        return async (source) => {\n            const chunks = await (0,stream_promises__WEBPACK_IMPORTED_MODULE_0__.pipeline)(source, oThis.generateTransactionChunksAsync());\n            const txAttrs = Object.assign({}, attributes);\n            txAttrs.owner ??= jwk?.n;\n            txAttrs.last_tx ??= await oThis.transactions.getTransactionAnchor();\n            const lastChunk = chunks.chunks[chunks.chunks.length - 1];\n            const dataByteLength = lastChunk.maxByteRange;\n            txAttrs.reward ??= await oThis.transactions.getPrice(dataByteLength, txAttrs.target);\n            txAttrs.data_size = dataByteLength.toString();\n            const tx = new _common_lib_transaction_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({ attributes: txAttrs, deps: { merkle: oThis.merkle, deepHash: oThis.deepHash } });\n            tx.chunks = chunks;\n            tx.data_root = (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_4__.bufferTob64Url)(chunks.data_root);\n            return tx;\n        };\n    }\n    /**\n     * Generates the Arweave transaction chunk information from the piped data stream.\n     */\n    generateTransactionChunksAsync() {\n        const crypto = this.crypto;\n        return async (source) => {\n            const chunks = [];\n            /**\n             * @param chunkByteIndex the index the start of the specified chunk is located at within its original data stream.\n             */\n            const addChunk = async (chunkByteIndex, chunk) => {\n                const dataHash = await crypto.hash(chunk);\n                const chunkRep = {\n                    dataHash,\n                    minByteRange: chunkByteIndex,\n                    maxByteRange: chunkByteIndex + chunk.byteLength,\n                };\n                chunks.push(chunkRep);\n                return chunkRep;\n            };\n            let chunkStreamByteIndex = 0;\n            let previousDataChunk;\n            let expectChunkGenerationCompleted = false;\n            await (0,stream_promises__WEBPACK_IMPORTED_MODULE_0__.pipeline)(source, (0,_chunker_js__WEBPACK_IMPORTED_MODULE_5__.chunker)(_common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MAX_CHUNK_SIZE, { flush: true }), async (chunkedSource) => {\n                for await (const chunk of chunkedSource) {\n                    if (expectChunkGenerationCompleted) {\n                        throw Error(\"Expected chunk generation to have completed.\");\n                    }\n                    if (chunk.byteLength >= _common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MIN_CHUNK_SIZE && chunk.byteLength <= _common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MAX_CHUNK_SIZE) {\n                        await addChunk(chunkStreamByteIndex, chunk);\n                    }\n                    else if (chunk.byteLength < _common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MIN_CHUNK_SIZE) {\n                        if (previousDataChunk) {\n                            // If this final chunk is smaller than the minimum chunk size, rebalance this final chunk and\n                            // the previous chunk to keep the final chunk size above the minimum threshold.\n                            const remainingBytes = Buffer.concat([previousDataChunk, chunk], previousDataChunk.byteLength + chunk.byteLength);\n                            const rebalancedSizeForPreviousChunk = Math.ceil(remainingBytes.byteLength / 2);\n                            const previousChunk = chunks.pop();\n                            const rebalancedPreviousChunk = await addChunk(previousChunk.minByteRange, remainingBytes.slice(0, rebalancedSizeForPreviousChunk));\n                            await addChunk(rebalancedPreviousChunk.maxByteRange, remainingBytes.slice(rebalancedSizeForPreviousChunk));\n                        }\n                        else {\n                            // This entire stream should be smaller than the minimum chunk size, just add the chunk in.\n                            await addChunk(chunkStreamByteIndex, chunk);\n                        }\n                        expectChunkGenerationCompleted = true;\n                    }\n                    else if (chunk.byteLength > _common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MAX_CHUNK_SIZE) {\n                        throw Error(\"Encountered chunk larger than max chunk size.\");\n                    }\n                    chunkStreamByteIndex += chunk.byteLength;\n                    previousDataChunk = chunk;\n                }\n            });\n            const leaves = await this.merkle.generateLeaves(chunks);\n            const root = await this.merkle.buildLayers(leaves);\n            const proofs = this.merkle.generateProofs(root);\n            return {\n                data_root: root.id,\n                chunks,\n                proofs,\n            };\n        };\n    }\n    /**\n     * Uploads the piped data to the specified transaction.\n     *\n     * @param tx\n     * @param arweave\n     * @param createTx whether or not the passed transaction should be created on the network.\n     * This can be false if we want to reseed an existing transaction,\n     * @param debugOpts\n     */\n    uploadTransactionAsync(tx, createTx = true, debugOpts) {\n        const txId = tx.id;\n        const log = (message) => {\n            if (debugOpts?.log)\n                debugOpts.log(`[uploadTransactionAsync:${txId}] ${message}`);\n        };\n        log(`Starting chunked upload - ${tx.chunks?.chunks?.length} chunks / ${tx.data_size} total bytes`);\n        return async (source) => {\n            if (!tx.chunks) {\n                throw Error(\"Transaction has no computed chunks!\");\n            }\n            if (createTx) {\n                // Ensure the transaction data field is blank.\n                // We'll upload this data in chunks instead.\n                tx.data = new Uint8Array(0);\n                const createTxRes = await this.api.post(`tx`, tx);\n                if (!(createTxRes.status >= 200 && createTxRes.status < 300)) {\n                    throw new Error(`Failed to create transaction: status ${createTxRes.status} / data ${createTxRes.data}`);\n                }\n            }\n            const txChunkData = tx.chunks;\n            const { chunks, proofs } = txChunkData;\n            function prepareChunkUploadPayload(chunkIndex, chunkData) {\n                const proof = proofs[chunkIndex];\n                return {\n                    data_root: tx.data_root,\n                    data_size: tx.data_size,\n                    data_path: (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_4__.bufferTob64Url)(proof.proof),\n                    offset: proof.offset.toString(),\n                    chunk: (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_4__.bufferTob64Url)(chunkData),\n                };\n            }\n            log(`Starting pipe - MAX_CHUNK_SIZE=${_common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MAX_CHUNK_SIZE}`);\n            await (0,stream_promises__WEBPACK_IMPORTED_MODULE_0__.pipeline)(source, (0,_chunker_js__WEBPACK_IMPORTED_MODULE_5__.chunker)(_common_lib_merkle_js__WEBPACK_IMPORTED_MODULE_1__.MAX_CHUNK_SIZE, { flush: true }), async (chunkedSource) => {\n                let chunkIndex = 0;\n                let dataRebalancedIntoFinalChunk;\n                const activeChunkUploads = [];\n                for await (const chunkData of chunkedSource) {\n                    const currentChunk = chunks[chunkIndex];\n                    const chunkSize = currentChunk.maxByteRange - currentChunk.minByteRange;\n                    log(`Got chunk - ${chunkData.byteLength} bytes / chunkSize ${chunkSize}`);\n                    const expectedToBeFinalRebalancedChunk = dataRebalancedIntoFinalChunk != null;\n                    let chunkPayload;\n                    if (chunkData.byteLength === chunkSize) {\n                        // If the transaction data chunks was never rebalanced this is the only code path that\n                        // will execute as the incoming chunked data as the will always be equivalent to `chunkSize`.\n                        chunkPayload = prepareChunkUploadPayload(chunkIndex, chunkData);\n                    }\n                    else if (chunkData.byteLength > chunkSize) {\n                        // If the incoming chunk data is larger than the expected size of the current chunk\n                        // it means that the transaction had chunks that were rebalanced to meet the minimum chunk size.\n                        //\n                        // It also means that the chunk we're currently processing should be the second to last\n                        // chunk.\n                        chunkPayload = prepareChunkUploadPayload(chunkIndex, chunkData.slice(0, chunkSize));\n                        dataRebalancedIntoFinalChunk = chunkData.slice(chunkSize);\n                    }\n                    else if (chunkData.byteLength < chunkSize && expectedToBeFinalRebalancedChunk) {\n                        // If this is the final rebalanced chunk, create the upload payload by concatenating the previous\n                        // chunk's data that was moved into this and the remaining stream data.\n                        chunkPayload = prepareChunkUploadPayload(chunkIndex, Buffer.concat([dataRebalancedIntoFinalChunk, chunkData], dataRebalancedIntoFinalChunk.length + chunkData.length));\n                    }\n                    else {\n                        throw Error(\"Transaction data stream terminated incorrectly.\");\n                    }\n                    const chunkValid = await this.merkle.validatePath(txChunkData.data_root, parseInt(chunkPayload.offset), 0, parseInt(chunkPayload.data_size), (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_4__.b64UrlToBuffer)(chunkPayload.data_path));\n                    if (!chunkValid) {\n                        throw new Error(`Unable to validate chunk ${chunkIndex}.`);\n                    }\n                    // Upload multiple transaction chunks in parallel to speed up the upload.\n                    // If we are already at the maximum concurrent chunk upload limit,\n                    // wait till all of them to complete first before continuing.\n                    if (activeChunkUploads.length >= MAX_CONCURRENT_CHUNK_UPLOAD_COUNT) {\n                        await Promise.all(activeChunkUploads);\n                        // Clear the active chunk uploads array.\n                        activeChunkUploads.length = 0;\n                    }\n                    // TODO: allow for this abort code behaviour\n                    activeChunkUploads.push(this.api.post(\"chunk\", chunkPayload, { retry: { onRetry: (err) => !_common_lib_transaction_uploader_js__WEBPACK_IMPORTED_MODULE_3__.FATAL_CHUNK_UPLOAD_ERRORS.includes(err.message) } }));\n                    chunkIndex++;\n                    log(`Chunk process done - ${chunkIndex}`);\n                }\n                log(`Active chunks to upload - ${activeChunkUploads.length}`);\n                await Promise.all(activeChunkUploads);\n                if (chunkIndex < chunks.length) {\n                    throw Error(`Transaction upload incomplete: ${chunkIndex + 1}/${chunks.length} chunks uploaded.`);\n                }\n            }).catch((e) => {\n                log(e.message);\n                throw e;\n            });\n        };\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/node/stream/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/web/arweave.js":
/*!*************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/web/arweave.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* binding */ Arweave),\n/* harmony export */   WebArweave: () => (/* binding */ WebArweave),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/index.js\");\n/* harmony import */ var _webcrypto_driver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webcrypto-driver.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/web/webcrypto-driver.js\");\n\n\nclass Arweave extends _common_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * Constructor for a new `Arweave` instance - this one uses the web crypto driver\n     * @param gatways - Specify the Arweave gateway(s) you want to use for requests\n     * @param options - Other configuration options\n     * @param options.miners - A list of Arweave miners (peers) to use for requests\n     * @param options.gateways - A list of Arweave miners (peers) to use for requests\n     */\n    constructor(gateways, options) {\n        super({ crypto: options?.crypto ?? new _webcrypto_driver_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](), ...options, gateways: gateways ?? \"https://arweave.net\" });\n    }\n    static init(apiConfig) {\n        return new Arweave(apiConfig);\n    }\n}\nconst WebArweave = Arweave;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arweave);\n//# sourceMappingURL=arweave.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvYXJ3ZWF2ZS9idWlsZC9lc20vd2ViL2Fyd2VhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0M7QUFDSztBQUM3QyxzQkFBc0Isd0RBQWE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrQkFBK0IsNERBQWUsNkRBQTZEO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlFQUFlLE9BQU8sRUFBQztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL2Fyd2VhdmUvYnVpbGQvZXNtL3dlYi9hcndlYXZlLmpzPzNiZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1vbkFyd2VhdmUgZnJvbSBcIi4uL2NvbW1vbi9pbmRleC5qc1wiO1xuaW1wb3J0IFdlYkNyeXB0b0RyaXZlciBmcm9tIFwiLi93ZWJjcnlwdG8tZHJpdmVyLmpzXCI7XG5leHBvcnQgY2xhc3MgQXJ3ZWF2ZSBleHRlbmRzIENvbW1vbkFyd2VhdmUge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdG9yIGZvciBhIG5ldyBgQXJ3ZWF2ZWAgaW5zdGFuY2UgLSB0aGlzIG9uZSB1c2VzIHRoZSB3ZWIgY3J5cHRvIGRyaXZlclxuICAgICAqIEBwYXJhbSBnYXR3YXlzIC0gU3BlY2lmeSB0aGUgQXJ3ZWF2ZSBnYXRld2F5KHMpIHlvdSB3YW50IHRvIHVzZSBmb3IgcmVxdWVzdHNcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE90aGVyIGNvbmZpZ3VyYXRpb24gb3B0aW9uc1xuICAgICAqIEBwYXJhbSBvcHRpb25zLm1pbmVycyAtIEEgbGlzdCBvZiBBcndlYXZlIG1pbmVycyAocGVlcnMpIHRvIHVzZSBmb3IgcmVxdWVzdHNcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5nYXRld2F5cyAtIEEgbGlzdCBvZiBBcndlYXZlIG1pbmVycyAocGVlcnMpIHRvIHVzZSBmb3IgcmVxdWVzdHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihnYXRld2F5cywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcih7IGNyeXB0bzogb3B0aW9ucz8uY3J5cHRvID8/IG5ldyBXZWJDcnlwdG9Ecml2ZXIoKSwgLi4ub3B0aW9ucywgZ2F0ZXdheXM6IGdhdGV3YXlzID8/IFwiaHR0cHM6Ly9hcndlYXZlLm5ldFwiIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgaW5pdChhcGlDb25maWcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBcndlYXZlKGFwaUNvbmZpZyk7XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IFdlYkFyd2VhdmUgPSBBcndlYXZlO1xuZXhwb3J0IGRlZmF1bHQgQXJ3ZWF2ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFyd2VhdmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/web/arweave.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/arweave/build/esm/web/webcrypto-driver.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@irys/arweave/build/esm/web/webcrypto-driver.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebCryptoDriver)\n/* harmony export */ });\n/* harmony import */ var _common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/lib/utils.js */ \"(ssr)/./node_modules/@irys/arweave/build/esm/common/lib/utils.js\");\n\nclass WebCryptoDriver {\n    keyLength = 4096;\n    publicExponent = 0x10001;\n    hashAlgorithm = \"sha256\";\n    driver;\n    constructor() {\n        this.driver = crypto?.subtle;\n    }\n    async generateJWK() {\n        const cryptoKey = await this.driver.generateKey({\n            name: \"RSA-PSS\",\n            modulusLength: 4096,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, true, [\"sign\"]);\n        const jwk = await this.driver.exportKey(\"jwk\", cryptoKey.privateKey);\n        return {\n            kty: jwk.kty,\n            e: jwk.e,\n            n: jwk.n,\n            d: jwk.d,\n            p: jwk.p,\n            q: jwk.q,\n            dp: jwk.dp,\n            dq: jwk.dq,\n            qi: jwk.qi,\n        };\n    }\n    async sign(jwk, data, { saltLength } = { saltLength: 32 }) {\n        const signature = await this.driver.sign({\n            name: \"RSA-PSS\",\n            saltLength,\n        }, await this.jwkToCryptoKey(jwk), data);\n        return new Uint8Array(signature);\n    }\n    async hash(data, algorithm = \"SHA-256\") {\n        const digest = await this.driver.digest(algorithm, data);\n        return new Uint8Array(digest);\n    }\n    async verify(publicModulus, data, signature) {\n        const publicKey = {\n            kty: \"RSA\",\n            e: \"AQAB\",\n            n: publicModulus,\n        };\n        const key = await this.jwkToPublicCryptoKey(publicKey);\n        const digest = await this.driver.digest(\"SHA-256\", data);\n        const salt0 = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: 0,\n        }, key, signature, data);\n        const salt32 = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: 32,\n        }, key, signature, data);\n        // saltN's salt-length is derived from a formula described here\n        // https://developer.mozilla.org/en-US/docs/Web/API/RsaPssParams\n        const saltN = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: Math.ceil((key.algorithm.modulusLength - 1) / 8) - digest.byteLength - 2,\n        }, key, signature, data);\n        return salt0 || salt32 || saltN;\n    }\n    async jwkToCryptoKey(jwk) {\n        return this.driver.importKey(\"jwk\", jwk, {\n            name: \"RSA-PSS\",\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, false, [\"sign\"]);\n    }\n    async jwkToPublicCryptoKey(publicJwk) {\n        return this.driver.importKey(\"jwk\", publicJwk, {\n            name: \"RSA-PSS\",\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, false, [\"verify\"]);\n    }\n    // private detectWebCrypto() {\n    //   if (typeof crypto === \"undefined\") {\n    //     return false;\n    //   }\n    //   const subtle = crypto?.subtle;\n    //   if (subtle === undefined) {\n    //     return false;\n    //   }\n    //   const names = [\"generateKey\", \"importKey\", \"exportKey\", \"digest\", \"sign\"] as const;\n    //   return names.every((name) => typeof subtle[name] === \"function\");\n    // }\n    async encrypt(data, key, salt) {\n        const initialKey = await this.driver.importKey(\"raw\", typeof key === \"string\" ? (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(key) : key, {\n            name: \"PBKDF2\",\n            length: 32,\n        }, false, [\"deriveKey\"]);\n        // const salt = ArweaveUtils.stringToBuffer(\"salt\");\n        // create a random string for deriving the key\n        // const salt = this.driver.randomBytes(16).toString('hex');\n        const derivedkey = await this.driver.deriveKey({\n            name: \"PBKDF2\",\n            salt: salt ? (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(salt) : (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(\"salt\"),\n            iterations: 100000,\n            hash: \"SHA-256\",\n        }, initialKey, {\n            name: \"AES-CBC\",\n            length: 256,\n        }, false, [\"encrypt\", \"decrypt\"]);\n        const iv = new Uint8Array(16);\n        crypto.getRandomValues(iv);\n        const encryptedData = await this.driver.encrypt({\n            name: \"AES-CBC\",\n            iv: iv,\n        }, derivedkey, data);\n        return (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers)([iv, encryptedData]);\n    }\n    async decrypt(encrypted, key, salt) {\n        const initialKey = await this.driver.importKey(\"raw\", typeof key === \"string\" ? (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(key) : key, {\n            name: \"PBKDF2\",\n            length: 32,\n        }, false, [\"deriveKey\"]);\n        // const salt = ArweaveUtils.stringToBuffer(\"pepper\");\n        const derivedkey = await this.driver.deriveKey({\n            name: \"PBKDF2\",\n            salt: salt ? (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(salt) : (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)(\"salt\"),\n            iterations: 100000,\n            hash: \"SHA-256\",\n        }, initialKey, {\n            name: \"AES-CBC\",\n            length: 256,\n        }, false, [\"encrypt\", \"decrypt\"]);\n        const iv = encrypted.slice(0, 16);\n        const data = await this.driver.decrypt({\n            name: \"AES-CBC\",\n            iv: iv,\n        }, derivedkey, encrypted.slice(16));\n        // We're just using concat to convert from an array buffer to uint8array\n        return (0,_common_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers)([data]);\n    }\n}\n//# sourceMappingURL=webcrypto-driver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/arweave/build/esm/web/webcrypto-driver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/api.js":
/*!********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/api.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Api)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var _irys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./irys.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/irys.js\");\n\n\n\nclass Api {\n    _instance;\n    cookieMap = new Map();\n    config;\n    constructor(config) {\n        if (config)\n            this.applyConfig(config);\n    }\n    applyConfig(config) {\n        this.config = this.mergeDefaults(config);\n        this._instance = undefined;\n    }\n    getConfig() {\n        return this.config;\n    }\n    async requestInterceptor(request) {\n        const cookies = this.cookieMap.get(new URL(request.baseURL ?? \"\").host);\n        if (cookies)\n            request.headers.cookie = cookies;\n        return request;\n    }\n    async responseInterceptor(response) {\n        const setCookie = response.headers?.[\"set-cookie\"];\n        if (setCookie)\n            this.cookieMap.set(response.request.host, setCookie);\n        return response;\n    }\n    mergeDefaults(config) {\n        return {\n            url: config.url,\n            timeout: config.timeout ?? 20000,\n            logging: config.logging ?? false,\n            logger: config.logger ?? console.log,\n            headers: { ...config.headers, \"x-irys-js-sdk-version\": _irys_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].VERSION },\n            withCredentials: config.withCredentials ?? false,\n            retry: { retries: 3, maxTimeout: 5_000 },\n        };\n    }\n    async get(path, config) {\n        try {\n            return await this.request(path, { ...config, method: \"GET\" });\n        }\n        catch (error) {\n            if (error.response?.status)\n                return error.response;\n            throw error;\n        }\n    }\n    async post(path, body, config) {\n        try {\n            return await this.request(path, { data: body, ...config, method: \"POST\" });\n        }\n        catch (error) {\n            if (error.response?.status)\n                return error.response;\n            throw error;\n        }\n    }\n    get instance() {\n        if (this._instance)\n            return this._instance;\n        const instance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n            baseURL: this.config.url.toString(),\n            timeout: this.config.timeout,\n            maxContentLength: 1024 * 1024 * 512,\n            headers: this.config.headers,\n            withCredentials: this.config.withCredentials,\n        });\n        if (this.config.withCredentials) {\n            instance.interceptors.request.use(this.requestInterceptor.bind(this));\n            instance.interceptors.response.use(this.responseInterceptor.bind(this));\n        }\n        if (this.config.logging) {\n            instance.interceptors.request.use((request) => {\n                this.config.logger(`Requesting: ${request.baseURL}/${request.url}`);\n                return request;\n            });\n            instance.interceptors.response.use((response) => {\n                this.config.logger(`Response: ${response.config.url} - ${response.status}`);\n                return response;\n            });\n        }\n        return (this._instance = instance);\n    }\n    async request(path, config) {\n        const instance = this.instance;\n        const url = config?.url ?? new URL(path, this.config.url).toString();\n        return async_retry__WEBPACK_IMPORTED_MODULE_0__((_) => instance({ ...config, url }), {\n            ...this.config.retry,\n            ...config?.retry,\n        });\n    }\n}\n// /**\n//  * *** To be removed when browsers catch up with the whatwg standard. ***\n//  * [Symbol.AsyncIterator] is needed to use `for-await` on the returned ReadableStream (web stream).\n//  * Feature is available in nodejs, and should be available in browsers eventually.\n//  */\n// export const addAsyncIterator = (body: ReadableStream): ReadableStream => {\n//   const bodyWithIter = body as ReadableStream<Uint8Array> & AsyncIterable<Uint8Array>;\n//   if (typeof bodyWithIter[Symbol.asyncIterator] === \"undefined\") {\n//     bodyWithIter[Symbol.asyncIterator] = webIiterator<Uint8Array>(body);\n//     return bodyWithIter;\n//   }\n//   return body;\n// };\n// const webIiterator = function <T>(stream: ReadableStream): () => AsyncGenerator<Awaited<T>, void> {\n//   return async function* iteratorGenerator<T>() {\n//     const reader = stream.getReader(); // lock\n//     try {\n//       while (true) {\n//         const { done, value } = await reader.read();\n//         if (done) return;\n//         yield value as T;\n//       }\n//     } finally {\n//       reader.releaseLock(); // unlock\n//     }\n//   };\n// };\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEI7QUFDVztBQUNSO0FBQ2Q7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDRDQUE0QyxnREFBSSxVQUFVO0FBQ2pGO0FBQ0EscUJBQXFCLCtCQUErQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywwQkFBMEI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHVDQUF1QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2Q0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxnQkFBZ0IsR0FBRyxZQUFZO0FBQ2pGO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsZ0RBQWdELHFCQUFxQixJQUFJLGdCQUFnQjtBQUN6RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdDQUFVLG1CQUFtQixnQkFBZ0I7QUFDNUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vYXBpLmpzP2Y2ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IEFzeW5jUmV0cnkgZnJvbSBcImFzeW5jLXJldHJ5XCI7XG5pbXBvcnQgSXJ5cyBmcm9tIFwiLi9pcnlzLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICAgIF9pbnN0YW5jZTtcbiAgICBjb29raWVNYXAgPSBuZXcgTWFwKCk7XG4gICAgY29uZmlnO1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnKVxuICAgICAgICAgICAgdGhpcy5hcHBseUNvbmZpZyhjb25maWcpO1xuICAgIH1cbiAgICBhcHBseUNvbmZpZyhjb25maWcpIHtcbiAgICAgICAgdGhpcy5jb25maWcgPSB0aGlzLm1lcmdlRGVmYXVsdHMoY29uZmlnKTtcbiAgICAgICAgdGhpcy5faW5zdGFuY2UgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldENvbmZpZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xuICAgIH1cbiAgICBhc3luYyByZXF1ZXN0SW50ZXJjZXB0b3IocmVxdWVzdCkge1xuICAgICAgICBjb25zdCBjb29raWVzID0gdGhpcy5jb29raWVNYXAuZ2V0KG5ldyBVUkwocmVxdWVzdC5iYXNlVVJMID8/IFwiXCIpLmhvc3QpO1xuICAgICAgICBpZiAoY29va2llcylcbiAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5jb29raWUgPSBjb29raWVzO1xuICAgICAgICByZXR1cm4gcmVxdWVzdDtcbiAgICB9XG4gICAgYXN5bmMgcmVzcG9uc2VJbnRlcmNlcHRvcihyZXNwb25zZSkge1xuICAgICAgICBjb25zdCBzZXRDb29raWUgPSByZXNwb25zZS5oZWFkZXJzPy5bXCJzZXQtY29va2llXCJdO1xuICAgICAgICBpZiAoc2V0Q29va2llKVxuICAgICAgICAgICAgdGhpcy5jb29raWVNYXAuc2V0KHJlc3BvbnNlLnJlcXVlc3QuaG9zdCwgc2V0Q29va2llKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbiAgICBtZXJnZURlZmF1bHRzKGNvbmZpZykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdXJsOiBjb25maWcudXJsLFxuICAgICAgICAgICAgdGltZW91dDogY29uZmlnLnRpbWVvdXQgPz8gMjAwMDAsXG4gICAgICAgICAgICBsb2dnaW5nOiBjb25maWcubG9nZ2luZyA/PyBmYWxzZSxcbiAgICAgICAgICAgIGxvZ2dlcjogY29uZmlnLmxvZ2dlciA/PyBjb25zb2xlLmxvZyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgLi4uY29uZmlnLmhlYWRlcnMsIFwieC1pcnlzLWpzLXNkay12ZXJzaW9uXCI6IElyeXMuVkVSU0lPTiB9LFxuICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiBjb25maWcud2l0aENyZWRlbnRpYWxzID8/IGZhbHNlLFxuICAgICAgICAgICAgcmV0cnk6IHsgcmV0cmllczogMywgbWF4VGltZW91dDogNV8wMDAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0KHBhdGgsIGNvbmZpZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVxdWVzdChwYXRoLCB7IC4uLmNvbmZpZywgbWV0aG9kOiBcIkdFVFwiIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlPy5zdGF0dXMpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yLnJlc3BvbnNlO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcG9zdChwYXRoLCBib2R5LCBjb25maWcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlcXVlc3QocGF0aCwgeyBkYXRhOiBib2R5LCAuLi5jb25maWcsIG1ldGhvZDogXCJQT1NUXCIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2U/LnN0YXR1cylcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3IucmVzcG9uc2U7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgaW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICh0aGlzLl9pbnN0YW5jZSlcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcbiAgICAgICAgY29uc3QgaW5zdGFuY2UgPSBBeGlvcy5jcmVhdGUoe1xuICAgICAgICAgICAgYmFzZVVSTDogdGhpcy5jb25maWcudXJsLnRvU3RyaW5nKCksXG4gICAgICAgICAgICB0aW1lb3V0OiB0aGlzLmNvbmZpZy50aW1lb3V0LFxuICAgICAgICAgICAgbWF4Q29udGVudExlbmd0aDogMTAyNCAqIDEwMjQgKiA1MTIsXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmNvbmZpZy5oZWFkZXJzLFxuICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0aGlzLmNvbmZpZy53aXRoQ3JlZGVudGlhbHMsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy5jb25maWcud2l0aENyZWRlbnRpYWxzKSB7XG4gICAgICAgICAgICBpbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UodGhpcy5yZXF1ZXN0SW50ZXJjZXB0b3IuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICBpbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKHRoaXMucmVzcG9uc2VJbnRlcmNlcHRvci5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb25maWcubG9nZ2luZykge1xuICAgICAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKChyZXF1ZXN0KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25maWcubG9nZ2VyKGBSZXF1ZXN0aW5nOiAke3JlcXVlc3QuYmFzZVVSTH0vJHtyZXF1ZXN0LnVybH1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5sb2dnZXIoYFJlc3BvbnNlOiAke3Jlc3BvbnNlLmNvbmZpZy51cmx9IC0gJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICh0aGlzLl9pbnN0YW5jZSA9IGluc3RhbmNlKTtcbiAgICB9XG4gICAgYXN5bmMgcmVxdWVzdChwYXRoLCBjb25maWcpIHtcbiAgICAgICAgY29uc3QgaW5zdGFuY2UgPSB0aGlzLmluc3RhbmNlO1xuICAgICAgICBjb25zdCB1cmwgPSBjb25maWc/LnVybCA/PyBuZXcgVVJMKHBhdGgsIHRoaXMuY29uZmlnLnVybCkudG9TdHJpbmcoKTtcbiAgICAgICAgcmV0dXJuIEFzeW5jUmV0cnkoKF8pID0+IGluc3RhbmNlKHsgLi4uY29uZmlnLCB1cmwgfSksIHtcbiAgICAgICAgICAgIC4uLnRoaXMuY29uZmlnLnJldHJ5LFxuICAgICAgICAgICAgLi4uY29uZmlnPy5yZXRyeSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8gLyoqXG4vLyAgKiAqKiogVG8gYmUgcmVtb3ZlZCB3aGVuIGJyb3dzZXJzIGNhdGNoIHVwIHdpdGggdGhlIHdoYXR3ZyBzdGFuZGFyZC4gKioqXG4vLyAgKiBbU3ltYm9sLkFzeW5jSXRlcmF0b3JdIGlzIG5lZWRlZCB0byB1c2UgYGZvci1hd2FpdGAgb24gdGhlIHJldHVybmVkIFJlYWRhYmxlU3RyZWFtICh3ZWIgc3RyZWFtKS5cbi8vICAqIEZlYXR1cmUgaXMgYXZhaWxhYmxlIGluIG5vZGVqcywgYW5kIHNob3VsZCBiZSBhdmFpbGFibGUgaW4gYnJvd3NlcnMgZXZlbnR1YWxseS5cbi8vICAqL1xuLy8gZXhwb3J0IGNvbnN0IGFkZEFzeW5jSXRlcmF0b3IgPSAoYm9keTogUmVhZGFibGVTdHJlYW0pOiBSZWFkYWJsZVN0cmVhbSA9PiB7XG4vLyAgIGNvbnN0IGJvZHlXaXRoSXRlciA9IGJvZHkgYXMgUmVhZGFibGVTdHJlYW08VWludDhBcnJheT4gJiBBc3luY0l0ZXJhYmxlPFVpbnQ4QXJyYXk+O1xuLy8gICBpZiAodHlwZW9mIGJvZHlXaXRoSXRlcltTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPT09IFwidW5kZWZpbmVkXCIpIHtcbi8vICAgICBib2R5V2l0aEl0ZXJbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gd2ViSWl0ZXJhdG9yPFVpbnQ4QXJyYXk+KGJvZHkpO1xuLy8gICAgIHJldHVybiBib2R5V2l0aEl0ZXI7XG4vLyAgIH1cbi8vICAgcmV0dXJuIGJvZHk7XG4vLyB9O1xuLy8gY29uc3Qgd2ViSWl0ZXJhdG9yID0gZnVuY3Rpb24gPFQ+KHN0cmVhbTogUmVhZGFibGVTdHJlYW0pOiAoKSA9PiBBc3luY0dlbmVyYXRvcjxBd2FpdGVkPFQ+LCB2b2lkPiB7XG4vLyAgIHJldHVybiBhc3luYyBmdW5jdGlvbiogaXRlcmF0b3JHZW5lcmF0b3I8VD4oKSB7XG4vLyAgICAgY29uc3QgcmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpOyAvLyBsb2NrXG4vLyAgICAgdHJ5IHtcbi8vICAgICAgIHdoaWxlICh0cnVlKSB7XG4vLyAgICAgICAgIGNvbnN0IHsgZG9uZSwgdmFsdWUgfSA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4vLyAgICAgICAgIGlmIChkb25lKSByZXR1cm47XG4vLyAgICAgICAgIHlpZWxkIHZhbHVlIGFzIFQ7XG4vLyAgICAgICB9XG4vLyAgICAgfSBmaW5hbGx5IHtcbi8vICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpOyAvLyB1bmxvY2tcbi8vICAgICB9XG4vLyAgIH07XG4vLyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/chunkingUploader.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/chunkingUploader.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkingUploader: () => (/* binding */ ChunkingUploader)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var _s2ai_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./s2ai.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/s2ai.js\");\n\n\n\n\n\n\nclass ChunkingUploader extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    tokenConfig;\n    api;\n    uploadID;\n    token;\n    chunkSize;\n    batchSize;\n    paused = false;\n    isResume = false;\n    uploadOptions;\n    arbundles;\n    constructor(tokenConfig, api) {\n        super({ captureRejections: true });\n        this.tokenConfig = tokenConfig;\n        this.arbundles = this.tokenConfig.irys.arbundles;\n        this.api = api;\n        this.token = this.tokenConfig.name;\n        this.chunkSize = 25_000_000;\n        this.batchSize = 5;\n        this.uploadID = \"\";\n    }\n    setResumeData(uploadID) {\n        if (uploadID) {\n            this.uploadID = uploadID;\n            this.isResume = true;\n        }\n        return this;\n    }\n    /**\n     * Note: Will return undefined unless an upload has been started.\n     * @returns\n     */\n    getResumeData() {\n        return this.uploadID;\n    }\n    setChunkSize(size) {\n        if (size < 1) {\n            throw new Error(\"Invalid chunk size (must be >=1)\");\n        }\n        this.chunkSize = size;\n        return this;\n    }\n    setBatchSize(size) {\n        if (size < 1) {\n            throw new Error(\"Invalid batch size (must be >=1)\");\n        }\n        this.batchSize = size;\n        return this;\n    }\n    pause() {\n        this.emit(\"pause\");\n        this.paused = true;\n    }\n    resume() {\n        this.paused = false;\n        this.emit(\"resume\");\n    }\n    async uploadTransaction(data, opts) {\n        this.uploadOptions = opts;\n        if (this.arbundles.DataItem.isDataItem(data)) {\n            return this.runUpload(data.getRaw());\n        }\n        else {\n            return this.runUpload(data);\n        }\n    }\n    async uploadData(dataStream, options) {\n        this.uploadOptions = options?.upload;\n        return this.runUpload(dataStream, { ...options });\n    }\n    async runUpload(dataStream, transactionOpts) {\n        let id = this.uploadID;\n        const isTransaction = transactionOpts === undefined;\n        const headers = { \"x-chunking-version\": \"2\" };\n        let getres;\n        if (!id) {\n            getres = await this.api.get(`/chunks/${this.token}/-1/-1`, { headers });\n            _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(getres, \"Getting upload token\");\n            this.uploadID = id = getres.data.id;\n        }\n        else {\n            getres = await this.api.get(`/chunks/${this.token}/${id}/-1`, { headers });\n            if (getres.status === 404)\n                throw new Error(`Upload ID not found - your upload has probably expired.`);\n            _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(getres, \"Getting upload info\");\n            if (this.chunkSize != +getres.data.size) {\n                throw new Error(`Chunk size not equal to that of a previous upload (${+getres.data.size}).`);\n            }\n        }\n        const { max, min } = getres.data;\n        if (this.chunkSize < +min || this.chunkSize > +max) {\n            throw new Error(`Chunk size out of allowed range: ${min} - ${max}`);\n        }\n        let totalUploaded = 0;\n        const promiseFactory = (d, o, c) => {\n            return new Promise((r) => {\n                async_retry__WEBPACK_IMPORTED_MODULE_4__(async (bail) => {\n                    await this.api\n                        .post(`/chunks/${this.token}/${id}/${o}`, d, {\n                        headers: { \"Content-Type\": \"application/octet-stream\", ...headers },\n                        maxBodyLength: Infinity,\n                        maxContentLength: Infinity,\n                    })\n                        .then((re) => {\n                        if (re?.status >= 300) {\n                            const e = { res: re, id: c, offset: o, size: d.length };\n                            this.emit(\"chunkError\", e);\n                            if (re?.status === 402)\n                                bail(new Error(\"Not enough funds to send data\"));\n                            throw e;\n                        }\n                        this.emit(\"chunkUpload\", { id: c, offset: o, size: d.length, totalUploaded: (totalUploaded += d.length) });\n                        r({ o, d: re });\n                    });\n                }),\n                    { retries: 3, minTimeout: 1000, maxTimeout: 10_000 };\n            });\n        };\n        const present = getres.data.chunks ?? [];\n        const stream = new stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough();\n        let cache = Buffer.alloc(0);\n        let ended = false;\n        let hasData = true;\n        stream.on(\"end\", () => (ended = true));\n        stream.on(\"error\", (e) => {\n            throw new Error(`Error processing readable: ${e}`);\n        });\n        // custom as we need to read any number of bytes.\n        const readBytes = async (size) => {\n            while (!ended) {\n                if (cache.length >= size) {\n                    data = Buffer.from(cache.slice(0, size)); // force a copy\n                    cache = cache.slice(size);\n                    return data;\n                }\n                // eslint-disable-next-line no-var\n                var data = stream.read(size);\n                if (data === null) {\n                    // wait for stream refill (perferred over setImmeadiate due to multi env support)\n                    await new Promise((r) => setTimeout((r) => r(true), 0, r));\n                    continue;\n                }\n                if (data.length === size)\n                    return data;\n                cache = Buffer.concat([cache, data]);\n            }\n            // flush\n            while (cache.length >= size) {\n                data = Buffer.from(cache.slice(0, size)); // force a copy\n                cache = cache.slice(size);\n                return data;\n            }\n            hasData = false;\n            return cache;\n        };\n        let tx;\n        let txHeaderLength;\n        // doesn't matter if we randomise ID (anchor) between resumes, as the tx header/signing info is always uploaded last.\n        if (!isTransaction) {\n            tx = this.arbundles.createData(\"\", this.tokenConfig.getSigner(), {\n                ...transactionOpts,\n                anchor: transactionOpts?.anchor ?? crypto__WEBPACK_IMPORTED_MODULE_3__.randomBytes(32).toString(\"base64\").slice(0, 32),\n            });\n            const raw = tx.getRaw();\n            txHeaderLength = raw.length;\n            stream.write(raw);\n            totalUploaded -= raw.length;\n        }\n        if (Buffer.isBuffer(dataStream)) {\n            stream.write(dataStream);\n            stream.end();\n        }\n        else if (\"pipe\" in dataStream) {\n            dataStream.pipe(stream);\n        }\n        else {\n            throw new Error(\"Input data is not a buffer or a compatible stream (no .pipe method)\");\n        }\n        let offset = 0;\n        const processing = new Set();\n        let chunkID = 0;\n        let heldChunk;\n        let teeStream;\n        let deephash;\n        if (!isTransaction) {\n            teeStream = new stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough();\n            const txLength = tx.getRaw().length;\n            if (this.chunkSize < txHeaderLength)\n                throw new Error(`Configured chunk size is too small for transaction header! (${this.chunkSize} < ${txHeaderLength})`);\n            heldChunk = await readBytes(this.chunkSize);\n            chunkID++;\n            offset += heldChunk.length;\n            teeStream.write(heldChunk.slice(txLength));\n            const sigComponents = [\n                this.arbundles.stringToBuffer(\"dataitem\"),\n                this.arbundles.stringToBuffer(\"1\"),\n                this.arbundles.stringToBuffer(tx.signatureType.toString()),\n                tx.rawOwner,\n                tx.rawTarget,\n                tx.rawAnchor,\n                tx.rawTags,\n                new _s2ai_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](teeStream),\n            ];\n            // do *not* await, this needs to process in parallel to the upload process.\n            deephash = this.arbundles.deepHash(sigComponents);\n        }\n        let nextPresent = present.pop();\n        // Consume data while there's data to read.\n        while (hasData) {\n            if (this.paused) {\n                await new Promise((r) => this.on(\"resume\", () => r(undefined)));\n            }\n            // do not upload data that's already present\n            if (nextPresent) {\n                const delta = +nextPresent[0] - offset;\n                if (delta <= this.chunkSize) {\n                    const bytesToSkip = nextPresent[1];\n                    const data = await readBytes(bytesToSkip);\n                    if (!isTransaction)\n                        teeStream.write(data);\n                    offset += bytesToSkip;\n                    nextPresent = present.pop();\n                    chunkID++;\n                    totalUploaded += bytesToSkip;\n                    continue;\n                }\n            }\n            const chunk = await readBytes(this.chunkSize);\n            if (!isTransaction)\n                teeStream.write(chunk);\n            while (processing.size >= this.batchSize) {\n                // get & then remove resolved promise from processing set\n                const [p] = await Promise.race(processing);\n                processing.delete(p);\n            }\n            // self-referencing promise\n            const promise = (async () => await promiseFactory(chunk, offset, ++chunkID))().then((value) => [promise, value]);\n            processing.add(promise);\n            offset += chunk.length;\n        }\n        if (teeStream)\n            teeStream.end();\n        await Promise.all(processing);\n        if (!isTransaction) {\n            const hash = await deephash;\n            const sigBytes = Buffer.from(await this.tokenConfig.getSigner().sign(hash));\n            heldChunk.set(sigBytes, 2); // tx will be the first part of the held chunk.\n            await promiseFactory(heldChunk, 0, 0);\n        }\n        // potential improvement: write chunks into a file at offsets, instead of individual chunks + doing a concatenating copy\n        const finishUpload = await this.api.post(`/chunks/${this.token}/${id}/-1`, null, {\n            headers: { \"Content-Type\": \"application/octet-stream\", ...headers },\n            timeout: this.api.config?.timeout ?? 40_000 * 10, // server side reconstruction can take a while\n        });\n        if (finishUpload.status === 402) {\n            throw new Error(\"Not enough funds to send data\");\n        }\n        // this will throw if the dataItem reconstruction fails\n        _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(finishUpload, \"Finalising upload\", [201]);\n        // Recover ID\n        if (finishUpload.status === 201) {\n            throw new Error(finishUpload.data);\n        }\n        finishUpload.data.verify = _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].verifyReceipt.bind({}, this.arbundles, finishUpload.data.data);\n        this.emit(\"done\", finishUpload);\n        return finishUpload;\n    }\n    get completionPromise() {\n        return new Promise((r) => this.on(\"done\", r));\n    }\n}\n//# sourceMappingURL=chunkingUploader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/chunkingUploader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/fund.js":
/*!*********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/fund.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fund)\n/* harmony export */ });\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n\n\n\nclass Fund {\n    utils;\n    constructor(utils) {\n        this.utils = utils;\n    }\n    /**\n     * Function to Fund (send funds to) a Irys node - inherits instance token and node\n     * @param amount - amount in base units to send\n     * @param multiplier - network tx fee multiplier - only works for specific currencies\n     * @returns  - funding receipt\n     */\n    async fund(amount, multiplier = 1.0) {\n        const _amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount);\n        if (!_amount.isInteger()) {\n            throw new Error(\"must use an integer for funding amount\");\n        }\n        const c = this.utils.tokenConfig;\n        const to = await this.utils.getBundlerAddress(this.utils.token);\n        let fee;\n        if (c.needsFee) {\n            // winston's fee is actually for amount of data, not funds, so we have to 0 this.\n            const baseFee = await c.getFee(c.base[0] === \"winston\" ? 0 : _amount, to);\n            fee = bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBigNumber(baseFee) ? baseFee.multipliedBy(multiplier).integerValue(bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ROUND_CEIL) : baseFee;\n        }\n        const tx = await c.createTx(_amount, to, fee);\n        let nres;\n        // eslint-disable-next-line no-useless-catch\n        try {\n            nres = await c.sendTx(tx.tx);\n        }\n        catch (e) {\n            throw e;\n        }\n        tx.txId ??= nres;\n        if (!tx.txId) {\n            throw new Error(`Undefined transaction ID`);\n        }\n        _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(nres, `Sending transaction to the ${this.utils.token} network`);\n        let confirmError = await this.utils.confirmationPoll(tx.txId);\n        const bres = await this.submitTransaction(tx.txId).catch((e) => {\n            confirmError = e;\n            return undefined;\n        });\n        if (!bres) {\n            throw new Error(`failed to post funding tx - ${tx.txId} - keep this id! \\n ${confirmError ? ` - ${confirmError?.message ?? confirmError}` : \"\"}`);\n        }\n        return { reward: bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBigNumber(fee) ? fee.toString() : JSON.stringify(fee), target: to, quantity: _amount.toString(), id: tx.txId };\n    }\n    async submitTransaction(transactionId) {\n        return await async_retry__WEBPACK_IMPORTED_MODULE_0__(async () => {\n            const bres = await this.utils.api.post(`/account/balance/${this.utils.token}`, { tx_id: transactionId });\n            _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(bres, `Posting transaction ${transactionId} information to the bundler`, [202]);\n            return bres;\n        }, {\n            retries: 5,\n            maxTimeout: 1000,\n            minTimeout: 100,\n            randomize: true,\n        });\n    }\n    async submitFundTransaction(transactionId) {\n        return this.submitTransaction(transactionId);\n    }\n}\n//# sourceMappingURL=fund.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vZnVuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFDO0FBQ0E7QUFDTjtBQUNoQjtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0RBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9EQUFTLHNFQUFzRSxvREFBUztBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpREFBSyxtREFBbUQsa0JBQWtCO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsMkRBQTJELFNBQVMscUJBQXFCLHFCQUFxQixzQ0FBc0MsT0FBTztBQUMzSjtBQUNBLGlCQUFpQixRQUFRLG9EQUFTO0FBQ2xDO0FBQ0E7QUFDQSxxQkFBcUIsd0NBQVU7QUFDL0IsdUVBQXVFLGlCQUFpQixLQUFLLHNCQUFzQjtBQUNuSCxZQUFZLGlEQUFLLDRDQUE0QyxlQUFlO0FBQzVFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vY29tbW9uL2Z1bmQuanM/OGU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXN5bmNSZXRyeSBmcm9tIFwiYXN5bmMtcmV0cnlcIjtcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSBcImJpZ251bWJlci5qc1wiO1xuaW1wb3J0IFV0aWxzIGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGdW5kIHtcbiAgICB1dGlscztcbiAgICBjb25zdHJ1Y3Rvcih1dGlscykge1xuICAgICAgICB0aGlzLnV0aWxzID0gdXRpbHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIEZ1bmQgKHNlbmQgZnVuZHMgdG8pIGEgSXJ5cyBub2RlIC0gaW5oZXJpdHMgaW5zdGFuY2UgdG9rZW4gYW5kIG5vZGVcbiAgICAgKiBAcGFyYW0gYW1vdW50IC0gYW1vdW50IGluIGJhc2UgdW5pdHMgdG8gc2VuZFxuICAgICAqIEBwYXJhbSBtdWx0aXBsaWVyIC0gbmV0d29yayB0eCBmZWUgbXVsdGlwbGllciAtIG9ubHkgd29ya3MgZm9yIHNwZWNpZmljIGN1cnJlbmNpZXNcbiAgICAgKiBAcmV0dXJucyAgLSBmdW5kaW5nIHJlY2VpcHRcbiAgICAgKi9cbiAgICBhc3luYyBmdW5kKGFtb3VudCwgbXVsdGlwbGllciA9IDEuMCkge1xuICAgICAgICBjb25zdCBfYW1vdW50ID0gbmV3IEJpZ051bWJlcihhbW91bnQpO1xuICAgICAgICBpZiAoIV9hbW91bnQuaXNJbnRlZ2VyKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIm11c3QgdXNlIGFuIGludGVnZXIgZm9yIGZ1bmRpbmcgYW1vdW50XCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGMgPSB0aGlzLnV0aWxzLnRva2VuQ29uZmlnO1xuICAgICAgICBjb25zdCB0byA9IGF3YWl0IHRoaXMudXRpbHMuZ2V0QnVuZGxlckFkZHJlc3ModGhpcy51dGlscy50b2tlbik7XG4gICAgICAgIGxldCBmZWU7XG4gICAgICAgIGlmIChjLm5lZWRzRmVlKSB7XG4gICAgICAgICAgICAvLyB3aW5zdG9uJ3MgZmVlIGlzIGFjdHVhbGx5IGZvciBhbW91bnQgb2YgZGF0YSwgbm90IGZ1bmRzLCBzbyB3ZSBoYXZlIHRvIDAgdGhpcy5cbiAgICAgICAgICAgIGNvbnN0IGJhc2VGZWUgPSBhd2FpdCBjLmdldEZlZShjLmJhc2VbMF0gPT09IFwid2luc3RvblwiID8gMCA6IF9hbW91bnQsIHRvKTtcbiAgICAgICAgICAgIGZlZSA9IEJpZ051bWJlci5pc0JpZ051bWJlcihiYXNlRmVlKSA/IGJhc2VGZWUubXVsdGlwbGllZEJ5KG11bHRpcGxpZXIpLmludGVnZXJWYWx1ZShCaWdOdW1iZXIuUk9VTkRfQ0VJTCkgOiBiYXNlRmVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHR4ID0gYXdhaXQgYy5jcmVhdGVUeChfYW1vdW50LCB0bywgZmVlKTtcbiAgICAgICAgbGV0IG5yZXM7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2VsZXNzLWNhdGNoXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBucmVzID0gYXdhaXQgYy5zZW5kVHgodHgudHgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICAgIHR4LnR4SWQgPz89IG5yZXM7XG4gICAgICAgIGlmICghdHgudHhJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmRlZmluZWQgdHJhbnNhY3Rpb24gSURgKTtcbiAgICAgICAgfVxuICAgICAgICBVdGlscy5jaGVja0FuZFRocm93KG5yZXMsIGBTZW5kaW5nIHRyYW5zYWN0aW9uIHRvIHRoZSAke3RoaXMudXRpbHMudG9rZW59IG5ldHdvcmtgKTtcbiAgICAgICAgbGV0IGNvbmZpcm1FcnJvciA9IGF3YWl0IHRoaXMudXRpbHMuY29uZmlybWF0aW9uUG9sbCh0eC50eElkKTtcbiAgICAgICAgY29uc3QgYnJlcyA9IGF3YWl0IHRoaXMuc3VibWl0VHJhbnNhY3Rpb24odHgudHhJZCkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIGNvbmZpcm1FcnJvciA9IGU7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFicmVzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGZhaWxlZCB0byBwb3N0IGZ1bmRpbmcgdHggLSAke3R4LnR4SWR9IC0ga2VlcCB0aGlzIGlkISBcXG4gJHtjb25maXJtRXJyb3IgPyBgIC0gJHtjb25maXJtRXJyb3I/Lm1lc3NhZ2UgPz8gY29uZmlybUVycm9yfWAgOiBcIlwifWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IHJld2FyZDogQmlnTnVtYmVyLmlzQmlnTnVtYmVyKGZlZSkgPyBmZWUudG9TdHJpbmcoKSA6IEpTT04uc3RyaW5naWZ5KGZlZSksIHRhcmdldDogdG8sIHF1YW50aXR5OiBfYW1vdW50LnRvU3RyaW5nKCksIGlkOiB0eC50eElkIH07XG4gICAgfVxuICAgIGFzeW5jIHN1Ym1pdFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uSWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IEFzeW5jUmV0cnkoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYnJlcyA9IGF3YWl0IHRoaXMudXRpbHMuYXBpLnBvc3QoYC9hY2NvdW50L2JhbGFuY2UvJHt0aGlzLnV0aWxzLnRva2VufWAsIHsgdHhfaWQ6IHRyYW5zYWN0aW9uSWQgfSk7XG4gICAgICAgICAgICBVdGlscy5jaGVja0FuZFRocm93KGJyZXMsIGBQb3N0aW5nIHRyYW5zYWN0aW9uICR7dHJhbnNhY3Rpb25JZH0gaW5mb3JtYXRpb24gdG8gdGhlIGJ1bmRsZXJgLCBbMjAyXSk7XG4gICAgICAgICAgICByZXR1cm4gYnJlcztcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgcmV0cmllczogNSxcbiAgICAgICAgICAgIG1heFRpbWVvdXQ6IDEwMDAsXG4gICAgICAgICAgICBtaW5UaW1lb3V0OiAxMDAsXG4gICAgICAgICAgICByYW5kb21pemU6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBzdWJtaXRGdW5kVHJhbnNhY3Rpb24odHJhbnNhY3Rpb25JZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdWJtaXRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbklkKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mdW5kLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/fund.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/hack.js":
/*!*********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/hack.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// crypto hack - this is to stop arweave-js's import time(!!!) check for `subtleCrypto` - which occurs if you try to use the root import of this SDK.\nconst hack = () => {\n    throw new Error(`Unimplemented`);\n};\n// @ts-expect-error hack\nglobalThis.crypto ??= {};\n// @ts-expect-error hack\nglobalThis.crypto.subtle ??= {};\n// @ts-expect-error hack\nglobalThis.crypto.subtle.generateKey ??= hack;\n// @ts-expect-error hack\nglobalThis.crypto.subtle.importKey ??= hack;\n// @ts-expect-error hack\nglobalThis.crypto.subtle.exportKey ??= hack;\n// @ts-expect-error hack\nglobalThis.crypto.subtle.digest ??= hack;\n// @ts-expect-error hack\nglobalThis.crypto.subtle.sign ??= hack;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hack);\n//# sourceMappingURL=hack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vaGFjay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsSUFBSSxFQUFDO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vaGFjay5qcz9lN2FmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNyeXB0byBoYWNrIC0gdGhpcyBpcyB0byBzdG9wIGFyd2VhdmUtanMncyBpbXBvcnQgdGltZSghISEpIGNoZWNrIGZvciBgc3VidGxlQ3J5cHRvYCAtIHdoaWNoIG9jY3VycyBpZiB5b3UgdHJ5IHRvIHVzZSB0aGUgcm9vdCBpbXBvcnQgb2YgdGhpcyBTREsuXG5jb25zdCBoYWNrID0gKCkgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5pbXBsZW1lbnRlZGApO1xufTtcbi8vIEB0cy1leHBlY3QtZXJyb3IgaGFja1xuZ2xvYmFsVGhpcy5jcnlwdG8gPz89IHt9O1xuLy8gQHRzLWV4cGVjdC1lcnJvciBoYWNrXG5nbG9iYWxUaGlzLmNyeXB0by5zdWJ0bGUgPz89IHt9O1xuLy8gQHRzLWV4cGVjdC1lcnJvciBoYWNrXG5nbG9iYWxUaGlzLmNyeXB0by5zdWJ0bGUuZ2VuZXJhdGVLZXkgPz89IGhhY2s7XG4vLyBAdHMtZXhwZWN0LWVycm9yIGhhY2tcbmdsb2JhbFRoaXMuY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkgPz89IGhhY2s7XG4vLyBAdHMtZXhwZWN0LWVycm9yIGhhY2tcbmdsb2JhbFRoaXMuY3J5cHRvLnN1YnRsZS5leHBvcnRLZXkgPz89IGhhY2s7XG4vLyBAdHMtZXhwZWN0LWVycm9yIGhhY2tcbmdsb2JhbFRoaXMuY3J5cHRvLnN1YnRsZS5kaWdlc3QgPz89IGhhY2s7XG4vLyBAdHMtZXhwZWN0LWVycm9yIGhhY2tcbmdsb2JhbFRoaXMuY3J5cHRvLnN1YnRsZS5zaWduID8/PSBoYWNrO1xuZXhwb3J0IGRlZmF1bHQgaGFjaztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/hack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/irys.js":
/*!*********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/irys.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Irys)\n/* harmony export */ });\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/transaction.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var _withdrawal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./withdrawal.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/withdrawal.js\");\n/* harmony import */ var _irys_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @irys/query */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/index.js\");\n\n\n\n\nclass Irys {\n    api;\n    utils;\n    uploader;\n    funder;\n    address;\n    token;\n    tokenConfig;\n    provenance;\n    transactions;\n    _readyPromise;\n    url;\n    arbundles;\n    IrysTransaction;\n    static VERSION = \"0.0.2\";\n    constructor({ url, arbundles }) {\n        this.url = url;\n        this.arbundles = arbundles;\n        this.IrysTransaction = (0,_transaction_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this);\n    }\n    get signer() {\n        return this.tokenConfig.getSigner();\n    }\n    get search() {\n        const q = new _irys_query__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({ url: new URL(\"/graphql\", this.url) });\n        return q.search.bind(q);\n    }\n    query(queryOpts) {\n        return new _irys_query__WEBPACK_IMPORTED_MODULE_3__[\"default\"](queryOpts ?? { url: this.url });\n    }\n    async withdrawBalance(amount) {\n        return (0,_withdrawal_js__WEBPACK_IMPORTED_MODULE_2__.withdrawBalance)(this.utils, this.api, amount);\n    }\n    /**\n     * Gets the balance for the loaded wallet\n     * @returns balance (in winston)\n     */\n    async getLoadedBalance() {\n        if (!this.address)\n            throw new Error(\"address is undefined\");\n        return this.utils.getBalance(this.address);\n    }\n    /**\n     * Gets the balance for the specified address\n     * @param address address to query for\n     * @returns the balance (in winston)\n     */\n    async getBalance(address) {\n        return this.utils.getBalance(address);\n    }\n    /**\n     * Sends amount atomic units to the specified bundler\n     * @param amount amount to send in atomic units\n     * @returns details about the fund transaction\n     */\n    async fund(amount, multiplier) {\n        return this.funder.fund(amount, multiplier);\n    }\n    /**\n     * Calculates the price for [bytes] bytes for the loaded token and Irys node.\n     * @param bytes\n     * @returns\n     */\n    async getPrice(bytes) {\n        return this.utils.getPrice(this.token, bytes);\n    }\n    async verifyReceipt(receipt) {\n        return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].verifyReceipt(this.arbundles, receipt);\n    }\n    /**\n     * Create a new IrysTransactions (flex token arbundles dataItem)\n     * @param data\n     * @param opts - dataItemCreateOptions\n     * @returns - a new IrysTransaction instance\n     */\n    createTransaction(data, opts) {\n        return new this.IrysTransaction(data, this, opts);\n    }\n    /**\n     * Returns the signer for the loaded token\n     */\n    getSigner() {\n        return this.tokenConfig.getSigner();\n    }\n    async upload(data, opts) {\n        return this.uploader.uploadData(data, opts);\n    }\n    async uploadWithReceipt(data, opts) {\n        return this.uploader.uploadData(data, { ...opts, upload: { getReceiptSignature: true } });\n    }\n    async ready() {\n        this.tokenConfig.ready ? await this.tokenConfig.ready() : true;\n        this.address = this.tokenConfig.address;\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    get transaction() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const oThis = this;\n        return {\n            fromRaw(rawTransaction) {\n                return new oThis.IrysTransaction(rawTransaction, oThis, { dataIsRawTransaction: true });\n            },\n        };\n    }\n}\n//# sourceMappingURL=irys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vaXJ5cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRDtBQUNyQjtBQUNtQjtBQUNsQjtBQUNqQjtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQSwrQkFBK0IsMkRBQW9CO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbURBQUssR0FBRyxvQ0FBb0M7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1EQUFLLGdCQUFnQixlQUFlO0FBQ3ZEO0FBQ0E7QUFDQSxlQUFlLCtEQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsbUJBQW1CLDZCQUE2QjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsNEJBQTRCO0FBQ3RHLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vY29tbW9uL2lyeXMuanM/ZGZiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnVpbGRJcnlzVHJhbnNhY3Rpb24gZnJvbSBcIi4vdHJhbnNhY3Rpb24uanNcIjtcbmltcG9ydCBVdGlscyBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgd2l0aGRyYXdCYWxhbmNlIH0gZnJvbSBcIi4vd2l0aGRyYXdhbC5qc1wiO1xuaW1wb3J0IFF1ZXJ5IGZyb20gXCJAaXJ5cy9xdWVyeVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSXJ5cyB7XG4gICAgYXBpO1xuICAgIHV0aWxzO1xuICAgIHVwbG9hZGVyO1xuICAgIGZ1bmRlcjtcbiAgICBhZGRyZXNzO1xuICAgIHRva2VuO1xuICAgIHRva2VuQ29uZmlnO1xuICAgIHByb3ZlbmFuY2U7XG4gICAgdHJhbnNhY3Rpb25zO1xuICAgIF9yZWFkeVByb21pc2U7XG4gICAgdXJsO1xuICAgIGFyYnVuZGxlcztcbiAgICBJcnlzVHJhbnNhY3Rpb247XG4gICAgc3RhdGljIFZFUlNJT04gPSBcIjAuMC4yXCI7XG4gICAgY29uc3RydWN0b3IoeyB1cmwsIGFyYnVuZGxlcyB9KSB7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLmFyYnVuZGxlcyA9IGFyYnVuZGxlcztcbiAgICAgICAgdGhpcy5JcnlzVHJhbnNhY3Rpb24gPSBidWlsZElyeXNUcmFuc2FjdGlvbih0aGlzKTtcbiAgICB9XG4gICAgZ2V0IHNpZ25lcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9rZW5Db25maWcuZ2V0U2lnbmVyKCk7XG4gICAgfVxuICAgIGdldCBzZWFyY2goKSB7XG4gICAgICAgIGNvbnN0IHEgPSBuZXcgUXVlcnkoeyB1cmw6IG5ldyBVUkwoXCIvZ3JhcGhxbFwiLCB0aGlzLnVybCkgfSk7XG4gICAgICAgIHJldHVybiBxLnNlYXJjaC5iaW5kKHEpO1xuICAgIH1cbiAgICBxdWVyeShxdWVyeU9wdHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBRdWVyeShxdWVyeU9wdHMgPz8geyB1cmw6IHRoaXMudXJsIH0pO1xuICAgIH1cbiAgICBhc3luYyB3aXRoZHJhd0JhbGFuY2UoYW1vdW50KSB7XG4gICAgICAgIHJldHVybiB3aXRoZHJhd0JhbGFuY2UodGhpcy51dGlscywgdGhpcy5hcGksIGFtb3VudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGJhbGFuY2UgZm9yIHRoZSBsb2FkZWQgd2FsbGV0XG4gICAgICogQHJldHVybnMgYmFsYW5jZSAoaW4gd2luc3RvbilcbiAgICAgKi9cbiAgICBhc3luYyBnZXRMb2FkZWRCYWxhbmNlKCkge1xuICAgICAgICBpZiAoIXRoaXMuYWRkcmVzcylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImFkZHJlc3MgaXMgdW5kZWZpbmVkXCIpO1xuICAgICAgICByZXR1cm4gdGhpcy51dGlscy5nZXRCYWxhbmNlKHRoaXMuYWRkcmVzcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGJhbGFuY2UgZm9yIHRoZSBzcGVjaWZpZWQgYWRkcmVzc1xuICAgICAqIEBwYXJhbSBhZGRyZXNzIGFkZHJlc3MgdG8gcXVlcnkgZm9yXG4gICAgICogQHJldHVybnMgdGhlIGJhbGFuY2UgKGluIHdpbnN0b24pXG4gICAgICovXG4gICAgYXN5bmMgZ2V0QmFsYW5jZShhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnV0aWxzLmdldEJhbGFuY2UoYWRkcmVzcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmRzIGFtb3VudCBhdG9taWMgdW5pdHMgdG8gdGhlIHNwZWNpZmllZCBidW5kbGVyXG4gICAgICogQHBhcmFtIGFtb3VudCBhbW91bnQgdG8gc2VuZCBpbiBhdG9taWMgdW5pdHNcbiAgICAgKiBAcmV0dXJucyBkZXRhaWxzIGFib3V0IHRoZSBmdW5kIHRyYW5zYWN0aW9uXG4gICAgICovXG4gICAgYXN5bmMgZnVuZChhbW91bnQsIG11bHRpcGxpZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnVuZGVyLmZ1bmQoYW1vdW50LCBtdWx0aXBsaWVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgcHJpY2UgZm9yIFtieXRlc10gYnl0ZXMgZm9yIHRoZSBsb2FkZWQgdG9rZW4gYW5kIElyeXMgbm9kZS5cbiAgICAgKiBAcGFyYW0gYnl0ZXNcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIGdldFByaWNlKGJ5dGVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnV0aWxzLmdldFByaWNlKHRoaXMudG9rZW4sIGJ5dGVzKTtcbiAgICB9XG4gICAgYXN5bmMgdmVyaWZ5UmVjZWlwdChyZWNlaXB0KSB7XG4gICAgICAgIHJldHVybiBVdGlscy52ZXJpZnlSZWNlaXB0KHRoaXMuYXJidW5kbGVzLCByZWNlaXB0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IElyeXNUcmFuc2FjdGlvbnMgKGZsZXggdG9rZW4gYXJidW5kbGVzIGRhdGFJdGVtKVxuICAgICAqIEBwYXJhbSBkYXRhXG4gICAgICogQHBhcmFtIG9wdHMgLSBkYXRhSXRlbUNyZWF0ZU9wdGlvbnNcbiAgICAgKiBAcmV0dXJucyAtIGEgbmV3IElyeXNUcmFuc2FjdGlvbiBpbnN0YW5jZVxuICAgICAqL1xuICAgIGNyZWF0ZVRyYW5zYWN0aW9uKGRhdGEsIG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyB0aGlzLklyeXNUcmFuc2FjdGlvbihkYXRhLCB0aGlzLCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgc2lnbmVyIGZvciB0aGUgbG9hZGVkIHRva2VuXG4gICAgICovXG4gICAgZ2V0U2lnbmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b2tlbkNvbmZpZy5nZXRTaWduZXIoKTtcbiAgICB9XG4gICAgYXN5bmMgdXBsb2FkKGRhdGEsIG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkZXIudXBsb2FkRGF0YShkYXRhLCBvcHRzKTtcbiAgICB9XG4gICAgYXN5bmMgdXBsb2FkV2l0aFJlY2VpcHQoZGF0YSwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy51cGxvYWRlci51cGxvYWREYXRhKGRhdGEsIHsgLi4ub3B0cywgdXBsb2FkOiB7IGdldFJlY2VpcHRTaWduYXR1cmU6IHRydWUgfSB9KTtcbiAgICB9XG4gICAgYXN5bmMgcmVhZHkoKSB7XG4gICAgICAgIHRoaXMudG9rZW5Db25maWcucmVhZHkgPyBhd2FpdCB0aGlzLnRva2VuQ29uZmlnLnJlYWR5KCkgOiB0cnVlO1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSB0aGlzLnRva2VuQ29uZmlnLmFkZHJlc3M7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LWZ1bmN0aW9uLXJldHVybi10eXBlXG4gICAgZ2V0IHRyYW5zYWN0aW9uKCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXRoaXMtYWxpYXNcbiAgICAgICAgY29uc3Qgb1RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZnJvbVJhdyhyYXdUcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgb1RoaXMuSXJ5c1RyYW5zYWN0aW9uKHJhd1RyYW5zYWN0aW9uLCBvVGhpcywgeyBkYXRhSXNSYXdUcmFuc2FjdGlvbjogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXJ5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/irys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/provenance.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/provenance.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provenance: () => (/* binding */ Provenance)\n/* harmony export */ });\nclass Provenance {\n    irys;\n    constructor(irys) {\n        this.irys = irys;\n    }\n    async upload(data, opts) {\n        return this.irys.uploadWithReceipt(data, opts);\n    }\n    async uploadProof(proofFields) {\n        return await this.irys.uploadWithReceipt(\"\", {\n            tags: Object.entries({ dataProtocol: \"Provenance-Confirmation\", ...proofFields }).map(([k, v]) => ({ name: tagMap[k], value: v })),\n        });\n    }\n    async getAllProofs(searchBy, opts) {\n        const queryTags = Object.entries(searchBy).map(([k, v]) => ({ name: tagMap[k], values: [v] }));\n        if (queryTags.length === 0)\n            throw new Error(`Getting a provenance proof requires at least one query element`);\n        const query = `\n    query ($tags: [TagFilter!]) {\n      transactions(tags: $tags) {\n        edges {\n          node {\n            id\n            receipt {\n              deadlineHeight\n              signature\n              timestamp\n              version\n            }\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n    `;\n        const txs = [];\n        let endCursor = null;\n        do {\n            const gqlRes = await this.irys.api.post(\"/graphql\", {\n                query,\n                variables: { tags: queryTags, limit: opts?.limit ?? null, after: endCursor },\n            }, undefined);\n            endCursor = gqlRes.data.data.transactions?.pageInfo?.hasNextPage ? gqlRes.data.data.transactions.pageInfo.endCursor : null;\n            txs.push(...gqlRes.data.data.transactions.edges.map((t) => t.node));\n        } while (endCursor);\n        return txs;\n    }\n    async getProof(searchBy) {\n        const res = (await this.getAllProofs(searchBy, { limit: 1 })).at(0);\n        if (!res)\n            throw new Error(`Unable to locate proof with fields ${JSON.stringify(searchBy)}`);\n        return res;\n    }\n}\nconst tagMap = {\n    dataProtocol: \"Data-Protocol\",\n    hashingAlgo: \"Hashing-Algo\",\n    dataHash: \"Data-Hash\",\n    uploadedFor: \"Uploaded-For\",\n    prompt: \"Prompt\",\n    promptHash: \"Prompt-Hash\",\n    model: \"Model\",\n};\n//# sourceMappingURL=provenance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vcHJvdmVuYW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseURBQXlELHFCQUFxQiwyQkFBMkI7QUFDNUksU0FBUztBQUNUO0FBQ0E7QUFDQSxzRUFBc0UsOEJBQThCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLCtEQUErRDtBQUM1RixhQUFhO0FBQ2I7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTtBQUNBLGtFQUFrRSx5QkFBeUI7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL2NvbW1vbi9wcm92ZW5hbmNlLmpzP2Y3OWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFByb3ZlbmFuY2Uge1xuICAgIGlyeXM7XG4gICAgY29uc3RydWN0b3IoaXJ5cykge1xuICAgICAgICB0aGlzLmlyeXMgPSBpcnlzO1xuICAgIH1cbiAgICBhc3luYyB1cGxvYWQoZGF0YSwgb3B0cykge1xuICAgICAgICByZXR1cm4gdGhpcy5pcnlzLnVwbG9hZFdpdGhSZWNlaXB0KGRhdGEsIG9wdHMpO1xuICAgIH1cbiAgICBhc3luYyB1cGxvYWRQcm9vZihwcm9vZkZpZWxkcykge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5pcnlzLnVwbG9hZFdpdGhSZWNlaXB0KFwiXCIsIHtcbiAgICAgICAgICAgIHRhZ3M6IE9iamVjdC5lbnRyaWVzKHsgZGF0YVByb3RvY29sOiBcIlByb3ZlbmFuY2UtQ29uZmlybWF0aW9uXCIsIC4uLnByb29mRmllbGRzIH0pLm1hcCgoW2ssIHZdKSA9PiAoeyBuYW1lOiB0YWdNYXBba10sIHZhbHVlOiB2IH0pKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEFsbFByb29mcyhzZWFyY2hCeSwgb3B0cykge1xuICAgICAgICBjb25zdCBxdWVyeVRhZ3MgPSBPYmplY3QuZW50cmllcyhzZWFyY2hCeSkubWFwKChbaywgdl0pID0+ICh7IG5hbWU6IHRhZ01hcFtrXSwgdmFsdWVzOiBbdl0gfSkpO1xuICAgICAgICBpZiAocXVlcnlUYWdzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgR2V0dGluZyBhIHByb3ZlbmFuY2UgcHJvb2YgcmVxdWlyZXMgYXQgbGVhc3Qgb25lIHF1ZXJ5IGVsZW1lbnRgKTtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBgXG4gICAgcXVlcnkgKCR0YWdzOiBbVGFnRmlsdGVyIV0pIHtcbiAgICAgIHRyYW5zYWN0aW9ucyh0YWdzOiAkdGFncykge1xuICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgbm9kZSB7XG4gICAgICAgICAgICBpZFxuICAgICAgICAgICAgcmVjZWlwdCB7XG4gICAgICAgICAgICAgIGRlYWRsaW5lSGVpZ2h0XG4gICAgICAgICAgICAgIHNpZ25hdHVyZVxuICAgICAgICAgICAgICB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgdmVyc2lvblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFncyB7XG4gICAgICAgICAgICAgIG5hbWVcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgYDtcbiAgICAgICAgY29uc3QgdHhzID0gW107XG4gICAgICAgIGxldCBlbmRDdXJzb3IgPSBudWxsO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBjb25zdCBncWxSZXMgPSBhd2FpdCB0aGlzLmlyeXMuYXBpLnBvc3QoXCIvZ3JhcGhxbFwiLCB7XG4gICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7IHRhZ3M6IHF1ZXJ5VGFncywgbGltaXQ6IG9wdHM/LmxpbWl0ID8/IG51bGwsIGFmdGVyOiBlbmRDdXJzb3IgfSxcbiAgICAgICAgICAgIH0sIHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBlbmRDdXJzb3IgPSBncWxSZXMuZGF0YS5kYXRhLnRyYW5zYWN0aW9ucz8ucGFnZUluZm8/Lmhhc05leHRQYWdlID8gZ3FsUmVzLmRhdGEuZGF0YS50cmFuc2FjdGlvbnMucGFnZUluZm8uZW5kQ3Vyc29yIDogbnVsbDtcbiAgICAgICAgICAgIHR4cy5wdXNoKC4uLmdxbFJlcy5kYXRhLmRhdGEudHJhbnNhY3Rpb25zLmVkZ2VzLm1hcCgodCkgPT4gdC5ub2RlKSk7XG4gICAgICAgIH0gd2hpbGUgKGVuZEN1cnNvcik7XG4gICAgICAgIHJldHVybiB0eHM7XG4gICAgfVxuICAgIGFzeW5jIGdldFByb29mKHNlYXJjaEJ5KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IChhd2FpdCB0aGlzLmdldEFsbFByb29mcyhzZWFyY2hCeSwgeyBsaW1pdDogMSB9KSkuYXQoMCk7XG4gICAgICAgIGlmICghcmVzKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbG9jYXRlIHByb29mIHdpdGggZmllbGRzICR7SlNPTi5zdHJpbmdpZnkoc2VhcmNoQnkpfWApO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbn1cbmNvbnN0IHRhZ01hcCA9IHtcbiAgICBkYXRhUHJvdG9jb2w6IFwiRGF0YS1Qcm90b2NvbFwiLFxuICAgIGhhc2hpbmdBbGdvOiBcIkhhc2hpbmctQWxnb1wiLFxuICAgIGRhdGFIYXNoOiBcIkRhdGEtSGFzaFwiLFxuICAgIHVwbG9hZGVkRm9yOiBcIlVwbG9hZGVkLUZvclwiLFxuICAgIHByb21wdDogXCJQcm9tcHRcIixcbiAgICBwcm9tcHRIYXNoOiBcIlByb21wdC1IYXNoXCIsXG4gICAgbW9kZWw6IFwiTW9kZWxcIixcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92ZW5hbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/provenance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/s2ai.js":
/*!*********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/s2ai.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATES: () => (/* binding */ STATES),\n/* harmony export */   \"default\": () => (/* binding */ StreamToAsyncIterator)\n/* harmony export */ });\nconst NOT_READABLE = Symbol(\"not readable\");\nconst READABLE = Symbol(\"readable\");\nconst ENDED = Symbol(\"ended\");\nconst ERRORED = Symbol(\"errored\");\nconst STATES = {\n    notReadable: NOT_READABLE,\n    readable: READABLE,\n    ended: ENDED,\n    errored: ERRORED,\n};\n/**\n * Wraps a stream into an object that can be used as an async iterator.\n *\n * This will keep a stream in a paused state, and will only read from the stream on each\n * iteration. A size can be supplied to set an explicit call to `stream.read([size])` in\n * the options for each iteration.\n */\nclass StreamToAsyncIterator {\n    /** The underlying readable stream */\n    _stream;\n    /** Contains stream's error when stream has error'ed out */\n    _error;\n    /** The current state of the iterator (not readable, readable, ended, errored) */\n    _state = STATES.notReadable;\n    _size;\n    /** The rejections of promises to call when stream errors out */\n    _rejections = new Set();\n    get closed() {\n        return this._state === STATES.ended;\n    }\n    constructor(stream, { size } = {}) {\n        this._stream = stream;\n        this._size = size;\n        const bindMethods = [\"_handleStreamEnd\", \"_handleStreamError\"];\n        for (const method of bindMethods) {\n            Object.defineProperty(this, method, {\n                configurable: true,\n                writable: true,\n                value: this[method].bind(this),\n            });\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        stream.once(\"error\", this._handleStreamError);\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        stream.once(\"end\", this._handleStreamEnd);\n        stream.on(\"readable\", () => {\n            this._state = STATES.readable;\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    /**\n     * Returns the next iteration of data. Rejects if the stream errored out.\n     */\n    async next() {\n        switch (this._state) {\n            case STATES.notReadable: {\n                let untilReadable;\n                let untilEnd;\n                try {\n                    untilReadable = this._untilReadable();\n                    untilEnd = this._untilEnd();\n                    await Promise.race([untilReadable.promise, untilEnd.promise]);\n                }\n                finally {\n                    // need to clean up any hanging event listeners\n                    if (untilReadable != null) {\n                        untilReadable.close();\n                    }\n                    if (untilEnd != null) {\n                        untilEnd.close();\n                    }\n                }\n                return this.next();\n            }\n            case STATES.ended: {\n                this.close();\n                return { done: true, value: undefined };\n            }\n            case STATES.errored: {\n                this.close();\n                throw this._error;\n            }\n            case STATES.readable: {\n                // stream.read returns null if not readable or when stream has ended\n                // todo: Could add a way to ensure data-type/shape of reads to make this type safe\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const data = this._size ? this._stream.read(this._size) : this._stream.read();\n                if (data !== null) {\n                    return { done: false, value: data };\n                }\n                else {\n                    // we're no longer readable, need to find out what state we're in\n                    this._state = STATES.notReadable;\n                    // need to let event loop run to fill stream buffer\n                    await new Promise((r) => setTimeout((r) => r(true), 0, r));\n                    return this.next();\n                }\n            }\n        }\n    }\n    /**\n     * Waits until the stream is readable. Rejects if the stream errored out.\n     * @returns Promise when stream is readable\n     */\n    _untilReadable() {\n        // let is used here instead of const because the exact reference is\n        // required to remove it, this is why it is not a curried function that\n        // accepts resolve & reject as parameters.\n        let handleReadable = undefined;\n        const promise = new Promise((resolve, reject) => {\n            handleReadable = () => {\n                this._state = STATES.readable;\n                this._rejections.delete(reject);\n                resolve();\n            };\n            if (this._state === STATES.readable)\n                handleReadable; // race condition guard\n            this._stream.once(\"readable\", handleReadable);\n            this._rejections.add(reject);\n        });\n        const cleanup = () => {\n            if (handleReadable != null) {\n                this._stream.removeListener(\"readable\", handleReadable);\n            }\n        };\n        return { close: cleanup, promise };\n    }\n    /**\n     * Waits until the stream is ended. Rejects if the stream errored out.\n     * @returns Promise when stream is finished\n     */\n    _untilEnd() {\n        let handleEnd = undefined;\n        const promise = new Promise((resolve, reject) => {\n            handleEnd = () => {\n                this._state = STATES.ended;\n                this._rejections.delete(reject);\n                resolve();\n            };\n            this._stream.once(\"end\", handleEnd);\n            this._rejections.add(reject);\n        });\n        const cleanup = () => {\n            if (handleEnd != null) {\n                this._stream.removeListener(\"end\", handleEnd);\n            }\n        };\n        return { close: cleanup, promise };\n    }\n    return() {\n        this._state = STATES.ended;\n        return this.next();\n    }\n    throw(err) {\n        this._error = err;\n        this._state = STATES.errored;\n        return this.next();\n    }\n    /**\n     * Destroy the stream\n     * @param err An optional error to pass to the stream for an error event\n     */\n    close(err) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this._stream.removeListener(\"end\", this._handleStreamEnd);\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this._stream.removeListener(\"error\", this._handleStreamError);\n        this._state = STATES.ended;\n        this._stream.destroy(err);\n    }\n    _handleStreamError(err) {\n        this._error = err;\n        this._state = STATES.errored;\n        for (const reject of this._rejections) {\n            reject(err);\n        }\n    }\n    _handleStreamEnd() {\n        this._state = STATES.ended;\n    }\n    get state() {\n        return this._state;\n    }\n}\n// export const addAsyncIterator = (body: ReadableStream) => {\n//   const bodyWithIter = body as ReadableStream<Uint8Array> & AsyncIterable<Uint8Array>;\n//   if (typeof bodyWithIter[Symbol.asyncIterator] === \"undefined\") {\n//     bodyWithIter[Symbol.asyncIterator] = webIiterator<Uint8Array>(body);\n//     return bodyWithIter;\n//   }\n//   return body;\n// };\n// export const webIiterator = function <T>(stream: ReadableStream) {\n//   return async function* iteratorGenerator<T>() {\n//     const reader = stream.getReader(); //lock\n//     try {\n//       const { done, value } = await reader.read();\n//       if (done) return;\n//       yield value as T;\n//     } finally {\n//       reader.releaseLock(); //unlock\n//     }\n//   };\n// };\n//# sourceMappingURL=s2ai.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/s2ai.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/transaction.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/transaction.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildIrysTransaction)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n\n/**\n * Extended DataItem that allows for seamless Irys operations, such as signing and uploading.\n * Takes the same parameters as a regular DataItem.\n */\nfunction buildIrysTransaction(irys) {\n    class IrysTransaction extends irys.arbundles.DataItem {\n        Irys;\n        signer;\n        constructor(data, irys, opts) {\n            super(opts?.dataIsRawTransaction === true\n                ? Buffer.from(data)\n                : irys.arbundles\n                    .createData(data, irys.tokenConfig.getSigner(), {\n                    ...opts,\n                    anchor: opts?.anchor ?? crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes(32).toString(\"base64\").slice(0, 32),\n                })\n                    .getRaw());\n            this.Irys = irys;\n            this.signer = irys.tokenConfig.getSigner();\n        }\n        sign() {\n            return super.sign(this.signer);\n        }\n        get size() {\n            return this.getRaw().length;\n        }\n        async uploadWithReceipt(opts) {\n            return (await this.Irys.uploader.uploadTransaction(this, { ...opts, getReceiptSignature: true })).data;\n        }\n        async upload(opts) {\n            return (await this.Irys.uploader.uploadTransaction(this, opts)).data;\n        }\n        // static fromRaw(rawTransaction: Buffer, IrysInstance: Irys): IrysTransaction {\n        //   return new IrysTransaction(rawTransaction, IrysInstance, { dataIsRawTransaction: true });\n        // }\n        async getPrice() {\n            return this.Irys.utils.getPrice(this.Irys.tokenConfig.name, this.size);\n        }\n        async isValid() {\n            return irys.arbundles.DataItem.verify(this.getRaw());\n        }\n    }\n    return IrysTransaction;\n}\n// export abstract class IrysTransaction extends DataItem {}\n// export interface IrysTransaction extends DataItem {\n//   size: number;\n//   uploadWithReceipt(opts?: UploadOptions): Promise<UploadReceipt>;\n//   upload(opts: UploadOptions & { getReceiptSignature: true }): Promise<UploadReceipt>;\n//   upload(opts?: UploadOptions): Promise<UploadResponse>;\n// }\n//# sourceMappingURL=transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywrQ0FBa0I7QUFDOUQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsb0NBQW9DO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsNEJBQTRCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsMkJBQTJCO0FBQy9EO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vY29tbW9uL3RyYW5zYWN0aW9uLmpzPzJlNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENyeXB0byBmcm9tIFwiY3J5cHRvXCI7XG4vKipcbiAqIEV4dGVuZGVkIERhdGFJdGVtIHRoYXQgYWxsb3dzIGZvciBzZWFtbGVzcyBJcnlzIG9wZXJhdGlvbnMsIHN1Y2ggYXMgc2lnbmluZyBhbmQgdXBsb2FkaW5nLlxuICogVGFrZXMgdGhlIHNhbWUgcGFyYW1ldGVycyBhcyBhIHJlZ3VsYXIgRGF0YUl0ZW0uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkSXJ5c1RyYW5zYWN0aW9uKGlyeXMpIHtcbiAgICBjbGFzcyBJcnlzVHJhbnNhY3Rpb24gZXh0ZW5kcyBpcnlzLmFyYnVuZGxlcy5EYXRhSXRlbSB7XG4gICAgICAgIElyeXM7XG4gICAgICAgIHNpZ25lcjtcbiAgICAgICAgY29uc3RydWN0b3IoZGF0YSwgaXJ5cywgb3B0cykge1xuICAgICAgICAgICAgc3VwZXIob3B0cz8uZGF0YUlzUmF3VHJhbnNhY3Rpb24gPT09IHRydWVcbiAgICAgICAgICAgICAgICA/IEJ1ZmZlci5mcm9tKGRhdGEpXG4gICAgICAgICAgICAgICAgOiBpcnlzLmFyYnVuZGxlc1xuICAgICAgICAgICAgICAgICAgICAuY3JlYXRlRGF0YShkYXRhLCBpcnlzLnRva2VuQ29uZmlnLmdldFNpZ25lcigpLCB7XG4gICAgICAgICAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgICAgICAgICAgICAgIGFuY2hvcjogb3B0cz8uYW5jaG9yID8/IENyeXB0by5yYW5kb21CeXRlcygzMikudG9TdHJpbmcoXCJiYXNlNjRcIikuc2xpY2UoMCwgMzIpLFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5nZXRSYXcoKSk7XG4gICAgICAgICAgICB0aGlzLklyeXMgPSBpcnlzO1xuICAgICAgICAgICAgdGhpcy5zaWduZXIgPSBpcnlzLnRva2VuQ29uZmlnLmdldFNpZ25lcigpO1xuICAgICAgICB9XG4gICAgICAgIHNpZ24oKSB7XG4gICAgICAgICAgICByZXR1cm4gc3VwZXIuc2lnbih0aGlzLnNpZ25lcik7XG4gICAgICAgIH1cbiAgICAgICAgZ2V0IHNpemUoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRSYXcoKS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgYXN5bmMgdXBsb2FkV2l0aFJlY2VpcHQob3B0cykge1xuICAgICAgICAgICAgcmV0dXJuIChhd2FpdCB0aGlzLklyeXMudXBsb2FkZXIudXBsb2FkVHJhbnNhY3Rpb24odGhpcywgeyAuLi5vcHRzLCBnZXRSZWNlaXB0U2lnbmF0dXJlOiB0cnVlIH0pKS5kYXRhO1xuICAgICAgICB9XG4gICAgICAgIGFzeW5jIHVwbG9hZChvcHRzKSB7XG4gICAgICAgICAgICByZXR1cm4gKGF3YWl0IHRoaXMuSXJ5cy51cGxvYWRlci51cGxvYWRUcmFuc2FjdGlvbih0aGlzLCBvcHRzKSkuZGF0YTtcbiAgICAgICAgfVxuICAgICAgICAvLyBzdGF0aWMgZnJvbVJhdyhyYXdUcmFuc2FjdGlvbjogQnVmZmVyLCBJcnlzSW5zdGFuY2U6IElyeXMpOiBJcnlzVHJhbnNhY3Rpb24ge1xuICAgICAgICAvLyAgIHJldHVybiBuZXcgSXJ5c1RyYW5zYWN0aW9uKHJhd1RyYW5zYWN0aW9uLCBJcnlzSW5zdGFuY2UsIHsgZGF0YUlzUmF3VHJhbnNhY3Rpb246IHRydWUgfSk7XG4gICAgICAgIC8vIH1cbiAgICAgICAgYXN5bmMgZ2V0UHJpY2UoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5JcnlzLnV0aWxzLmdldFByaWNlKHRoaXMuSXJ5cy50b2tlbkNvbmZpZy5uYW1lLCB0aGlzLnNpemUpO1xuICAgICAgICB9XG4gICAgICAgIGFzeW5jIGlzVmFsaWQoKSB7XG4gICAgICAgICAgICByZXR1cm4gaXJ5cy5hcmJ1bmRsZXMuRGF0YUl0ZW0udmVyaWZ5KHRoaXMuZ2V0UmF3KCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBJcnlzVHJhbnNhY3Rpb247XG59XG4vLyBleHBvcnQgYWJzdHJhY3QgY2xhc3MgSXJ5c1RyYW5zYWN0aW9uIGV4dGVuZHMgRGF0YUl0ZW0ge31cbi8vIGV4cG9ydCBpbnRlcmZhY2UgSXJ5c1RyYW5zYWN0aW9uIGV4dGVuZHMgRGF0YUl0ZW0ge1xuLy8gICBzaXplOiBudW1iZXI7XG4vLyAgIHVwbG9hZFdpdGhSZWNlaXB0KG9wdHM/OiBVcGxvYWRPcHRpb25zKTogUHJvbWlzZTxVcGxvYWRSZWNlaXB0Pjtcbi8vICAgdXBsb2FkKG9wdHM6IFVwbG9hZE9wdGlvbnMgJiB7IGdldFJlY2VpcHRTaWduYXR1cmU6IHRydWUgfSk6IFByb21pc2U8VXBsb2FkUmVjZWlwdD47XG4vLyAgIHVwbG9hZChvcHRzPzogVXBsb2FkT3B0aW9ucyk6IFByb21pc2U8VXBsb2FkUmVzcG9uc2U+O1xuLy8gfVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/transactions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/transactions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\nclass Transaction {\n    irys;\n    constructor(irys) {\n        this.irys = irys;\n    }\n    async getById(id) {\n        const res = (await this.query({ ids: [id], limit: 1 })).at(0);\n        if (!res)\n            throw new Error(`Unable to locate tx with id ${id}`);\n        return res;\n    }\n    async getByOwner(owner) {\n        const res = (await this.query({ owners: [owner], limit: 1 })).at(0);\n        if (!res)\n            throw new Error(`Unable to locate tx with owner ${owner}`);\n        return res;\n    }\n    async getByTag(name, value) {\n        const res = (await this.query({ tags: [{ name, values: [value] }], limit: 1 })).at(0);\n        if (!res)\n            throw new Error(`Unable to locate tx with tag ${name}:${value}`);\n        return res;\n    }\n    async query(parameters) {\n        // full bundler node GQL query\n        const query = `\n    query ($ids: [String!], $after: String, $currency: String, $owners: [String!], $limit: Int, $order: SortOrder, $hasTags: Boolean, $tags: [TagFilter!]) {\n      transactions(ids: $ids, after: $after, currency: $currency, owners: $owners, limit: $limit, order: $order, hasTags: $hasTags, tags: $tags) {\n        edges {\n          cursor\n          node {\n            address\n            currency\n            id\n            receipt {\n              deadlineHeight\n              signature\n              timestamp\n              version\n            }\n            signature\n            tags {\n              name\n              value\n            }\n            timestamp\n          }\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n    `;\n        const txs = [];\n        let endCursor = null;\n        do {\n            const gqlRes = await this.irys.api.post(\"/graphql\", {\n                query,\n                variables: { ...parameters, after: endCursor ?? parameters.after },\n            }, undefined);\n            endCursor = gqlRes.data.data.transactions?.pageInfo?.hasNextPage ? gqlRes.data.data.transactions.pageInfo.endCursor : null;\n            txs.push(...gqlRes.data.data.transactions.edges.map((t) => t.node));\n        } while (endCursor);\n        return txs;\n    }\n}\n//# sourceMappingURL=transactions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vdHJhbnNhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MscUJBQXFCO0FBQzdEO0FBQ0EsMkRBQTJELEdBQUc7QUFDOUQ7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJCQUEyQjtBQUNuRTtBQUNBLDhEQUE4RCxNQUFNO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxTQUFTLHVCQUF1QixhQUFhO0FBQ3JGO0FBQ0EsNERBQTRELEtBQUssR0FBRyxNQUFNO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixxREFBcUQ7QUFDbEYsYUFBYTtBQUNiO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL2NvbW1vbi90cmFuc2FjdGlvbnMuanM/N2I0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVHJhbnNhY3Rpb24ge1xuICAgIGlyeXM7XG4gICAgY29uc3RydWN0b3IoaXJ5cykge1xuICAgICAgICB0aGlzLmlyeXMgPSBpcnlzO1xuICAgIH1cbiAgICBhc3luYyBnZXRCeUlkKGlkKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IChhd2FpdCB0aGlzLnF1ZXJ5KHsgaWRzOiBbaWRdLCBsaW1pdDogMSB9KSkuYXQoMCk7XG4gICAgICAgIGlmICghcmVzKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbG9jYXRlIHR4IHdpdGggaWQgJHtpZH1gKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgYXN5bmMgZ2V0QnlPd25lcihvd25lcikge1xuICAgICAgICBjb25zdCByZXMgPSAoYXdhaXQgdGhpcy5xdWVyeSh7IG93bmVyczogW293bmVyXSwgbGltaXQ6IDEgfSkpLmF0KDApO1xuICAgICAgICBpZiAoIXJlcylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGxvY2F0ZSB0eCB3aXRoIG93bmVyICR7b3duZXJ9YCk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgIGFzeW5jIGdldEJ5VGFnKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IChhd2FpdCB0aGlzLnF1ZXJ5KHsgdGFnczogW3sgbmFtZSwgdmFsdWVzOiBbdmFsdWVdIH1dLCBsaW1pdDogMSB9KSkuYXQoMCk7XG4gICAgICAgIGlmICghcmVzKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbG9jYXRlIHR4IHdpdGggdGFnICR7bmFtZX06JHt2YWx1ZX1gKTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgYXN5bmMgcXVlcnkocGFyYW1ldGVycykge1xuICAgICAgICAvLyBmdWxsIGJ1bmRsZXIgbm9kZSBHUUwgcXVlcnlcbiAgICAgICAgY29uc3QgcXVlcnkgPSBgXG4gICAgcXVlcnkgKCRpZHM6IFtTdHJpbmchXSwgJGFmdGVyOiBTdHJpbmcsICRjdXJyZW5jeTogU3RyaW5nLCAkb3duZXJzOiBbU3RyaW5nIV0sICRsaW1pdDogSW50LCAkb3JkZXI6IFNvcnRPcmRlciwgJGhhc1RhZ3M6IEJvb2xlYW4sICR0YWdzOiBbVGFnRmlsdGVyIV0pIHtcbiAgICAgIHRyYW5zYWN0aW9ucyhpZHM6ICRpZHMsIGFmdGVyOiAkYWZ0ZXIsIGN1cnJlbmN5OiAkY3VycmVuY3ksIG93bmVyczogJG93bmVycywgbGltaXQ6ICRsaW1pdCwgb3JkZXI6ICRvcmRlciwgaGFzVGFnczogJGhhc1RhZ3MsIHRhZ3M6ICR0YWdzKSB7XG4gICAgICAgIGVkZ2VzIHtcbiAgICAgICAgICBjdXJzb3JcbiAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgIGFkZHJlc3NcbiAgICAgICAgICAgIGN1cnJlbmN5XG4gICAgICAgICAgICBpZFxuICAgICAgICAgICAgcmVjZWlwdCB7XG4gICAgICAgICAgICAgIGRlYWRsaW5lSGVpZ2h0XG4gICAgICAgICAgICAgIHNpZ25hdHVyZVxuICAgICAgICAgICAgICB0aW1lc3RhbXBcbiAgICAgICAgICAgICAgdmVyc2lvblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2lnbmF0dXJlXG4gICAgICAgICAgICB0YWdzIHtcbiAgICAgICAgICAgICAgbmFtZVxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGltZXN0YW1wXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHBhZ2VJbmZvIHtcbiAgICAgICAgICBlbmRDdXJzb3JcbiAgICAgICAgICBoYXNOZXh0UGFnZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGA7XG4gICAgICAgIGNvbnN0IHR4cyA9IFtdO1xuICAgICAgICBsZXQgZW5kQ3Vyc29yID0gbnVsbDtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY29uc3QgZ3FsUmVzID0gYXdhaXQgdGhpcy5pcnlzLmFwaS5wb3N0KFwiL2dyYXBocWxcIiwge1xuICAgICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgICAgIHZhcmlhYmxlczogeyAuLi5wYXJhbWV0ZXJzLCBhZnRlcjogZW5kQ3Vyc29yID8/IHBhcmFtZXRlcnMuYWZ0ZXIgfSxcbiAgICAgICAgICAgIH0sIHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBlbmRDdXJzb3IgPSBncWxSZXMuZGF0YS5kYXRhLnRyYW5zYWN0aW9ucz8ucGFnZUluZm8/Lmhhc05leHRQYWdlID8gZ3FsUmVzLmRhdGEuZGF0YS50cmFuc2FjdGlvbnMucGFnZUluZm8uZW5kQ3Vyc29yIDogbnVsbDtcbiAgICAgICAgICAgIHR4cy5wdXNoKC4uLmdxbFJlcy5kYXRhLmRhdGEudHJhbnNhY3Rpb25zLmVkZ2VzLm1hcCgodCkgPT4gdC5ub2RlKSk7XG4gICAgICAgIH0gd2hpbGUgKGVuZEN1cnNvcik7XG4gICAgICAgIHJldHVybiB0eHM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNhY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/upload.js":
/*!***********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/upload.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHUNKING_THRESHOLD: () => (/* binding */ CHUNKING_THRESHOLD),\n/* harmony export */   \"default\": () => (/* binding */ Uploader),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n/* harmony import */ var _supercharge_promise_pool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supercharge/promise-pool */ \"(ssr)/./node_modules/@supercharge/promise-pool/dist/index.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var _chunkingUploader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunkingUploader.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/chunkingUploader.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n\n\n\n\n\n\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst CHUNKING_THRESHOLD = 50_000_000;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass Uploader {\n    api;\n    token;\n    tokenConfig;\n    utils;\n    contentTypeOverride;\n    forceUseChunking;\n    arbundles;\n    irysTransaction;\n    constructor(api, utils, token, tokenConfig, irysTransaction) {\n        this.api = api;\n        this.token = token;\n        this.tokenConfig = tokenConfig;\n        this.arbundles = this.tokenConfig.irys.arbundles;\n        this.utils = utils;\n        this.irysTransaction = irysTransaction;\n    }\n    async uploadTransaction(transaction, opts) {\n        let res;\n        const isDataItem = this.arbundles.DataItem.isDataItem(transaction);\n        if (this.forceUseChunking || (isDataItem && transaction.getRaw().length >= CHUNKING_THRESHOLD) || !isDataItem) {\n            res = await this.chunkedUploader.uploadTransaction(isDataItem ? transaction.getRaw() : transaction, opts);\n        }\n        else {\n            const { url, timeout, headers: confHeaders } = this.api.getConfig();\n            const headers = { \"Content-Type\": \"application/octet-stream\", ...confHeaders };\n            res = await this.api.post(new URL(`/tx/${this.token}`, url).toString(), transaction.getRaw(), {\n                headers: headers,\n                timeout,\n                maxBodyLength: Infinity,\n            });\n            if (res.status === 201) {\n                throw new Error(res.data);\n            }\n        }\n        switch (res.status) {\n            case 402:\n                throw new Error(\"Not enough funds to send data\");\n            default:\n                if (res.status >= 400) {\n                    throw new Error(`whilst uploading Irys transaction: ${res.status} ${res.statusText}`);\n                }\n        }\n        res.data.verify = async () => this.utils.verifyReceipt(res.data);\n        return res;\n    }\n    async uploadData(data, opts) {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data);\n        }\n        if (Buffer.isBuffer(data)) {\n            if (data.length <= CHUNKING_THRESHOLD) {\n                const dataItem = this.arbundles.createData(data, this.tokenConfig.getSigner(), {\n                    ...opts,\n                    anchor: opts?.anchor ?? (0,crypto__WEBPACK_IMPORTED_MODULE_3__.randomBytes)(32).toString(\"base64\").slice(0, 32),\n                });\n                await dataItem.sign(this.tokenConfig.getSigner());\n                return (await this.uploadTransaction(dataItem, { ...opts?.upload })).data;\n            }\n        }\n        return (await this.chunkedUploader.uploadData(data, opts)).data;\n    }\n    // concurrently uploads transactions\n    async concurrentUploader(data, opts) {\n        const errors = [];\n        const logFn = opts?.logFunction\n            ? opts?.logFunction\n            : async (_) => {\n                return;\n            };\n        const concurrency = opts?.concurrency ?? 5;\n        const results = (await _supercharge_promise_pool__WEBPACK_IMPORTED_MODULE_5__.PromisePool.for(data)\n            .withConcurrency(concurrency >= 1 ? concurrency : 5)\n            .handleError(async (error, _) => {\n            errors.push(error);\n            if (error.message === \"Not enough funds to send data\") {\n                throw error;\n            }\n        })\n            .process(async (item, i, _) => {\n            await async_retry__WEBPACK_IMPORTED_MODULE_4__(async (bail) => {\n                try {\n                    const res = await this.processItem(item, opts?.itemOptions);\n                    if (i % concurrency == 0) {\n                        await logFn(`Processed ${i} Items`);\n                    }\n                    if (opts?.resultProcessor) {\n                        return await opts.resultProcessor({ item, res, i });\n                    }\n                    else {\n                        return { item, res, i };\n                    }\n                }\n                catch (e) {\n                    if (e?.message === \"Not enough funds to send data\") {\n                        bail(e);\n                    }\n                    throw e;\n                }\n            }, { retries: 3, minTimeout: 1000, maxTimeout: 10_000 });\n        }));\n        return { errors, results: results.results };\n    }\n    async processItem(data, opts) {\n        if (this.arbundles.DataItem.isDataItem(data)) {\n            return this.uploadTransaction(data, { ...opts?.upload });\n        }\n        return this.uploadData(data, opts);\n    }\n    /**\n     * geneates a manifest JSON object\n     * @param config.items mapping of logical paths to item IDs\n     * @param config.indexFile optional logical path of the index file for the manifest\n     * @returns\n     */\n    async generateManifest(config) {\n        const { items, indexFile } = config;\n        const manifest = {\n            manifest: \"arweave/paths\",\n            version: \"0.1.0\",\n            paths: {},\n        };\n        if (indexFile) {\n            if (!items.has(indexFile)) {\n                throw new Error(`Unable to access item: ${indexFile}`);\n            }\n            manifest.index = { path: indexFile };\n        }\n        for (const [k, v] of items.entries()) {\n            // @ts-expect-error constant index type\n            manifest.paths[k] = { id: v };\n        }\n        return manifest;\n    }\n    get chunkedUploader() {\n        return new _chunkingUploader_js__WEBPACK_IMPORTED_MODULE_2__.ChunkingUploader(this.tokenConfig, this.api);\n    }\n    set useChunking(state) {\n        if (typeof state === \"boolean\") {\n            this.forceUseChunking = state;\n        }\n    }\n    set contentType(type) {\n        // const fullType = mime.contentType(type)\n        // if(!fullType){\n        //     throw new Error(\"Invali\")\n        // }\n        this.contentTypeOverride = type;\n    }\n    async uploadBundle(transactions, opts) {\n        const throwawayKey = opts?.throwawayKey ?? (await this.arbundles.getCryptoDriver().generateJWK());\n        const ephemeralSigner = new arbundles__WEBPACK_IMPORTED_MODULE_0__.ArweaveSigner(throwawayKey);\n        const txs = transactions.map((tx) => (this.arbundles.DataItem.isDataItem(tx) ? tx : this.arbundles.createData(tx, ephemeralSigner)));\n        const bundle = await this.arbundles.bundleAndSignData(txs, ephemeralSigner);\n        // upload bundle with bundle specific tags, use actual signer for this.\n        const tx = this.arbundles.createData(bundle.getRaw(), this.tokenConfig.getSigner(), {\n            tags: [\n                { name: \"Bundle-Format\", value: \"binary\" },\n                { name: \"Bundle-Version\", value: \"2.0.0\" },\n            ],\n        });\n        await tx.sign(this.tokenConfig.getSigner());\n        const res = await this.uploadTransaction(tx, opts);\n        const throwawayKeyAddress = base64url__WEBPACK_IMPORTED_MODULE_1__(Buffer.from(await this.arbundles.getCryptoDriver().hash(base64url__WEBPACK_IMPORTED_MODULE_1__.toBuffer(base64url__WEBPACK_IMPORTED_MODULE_1__(ephemeralSigner.publicKey)))));\n        return { ...res, txs, throwawayKey, throwawayKeyAddress };\n    }\n}\n//# sourceMappingURL=upload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Utils),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n\n\n\nbignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set({ DECIMAL_PLACES: 50 });\nconst sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nclass Utils {\n    api;\n    token;\n    tokenConfig;\n    arbundles;\n    constructor(api, token, tokenConfig) {\n        this.api = api;\n        this.token = token;\n        this.tokenConfig = tokenConfig;\n        this.arbundles = this.tokenConfig.irys.arbundles;\n    }\n    /**\n     * Throws an error if the provided axios reponse has a status code != 200\n     * @param res an axios response\n     * @returns nothing if the status code is 200\n     */\n    static checkAndThrow(res, context, exceptions) {\n        if (res?.status && !(exceptions ?? []).includes(res.status) && res.status != 200) {\n            throw new Error(`HTTP Error: ${context}: ${res.status} ${typeof res.data !== \"string\" ? res.statusText : res.data}`);\n        }\n        return;\n    }\n    /**\n     * Gets the nonce used for withdrawal request validation from the bundler\n     * @returns nonce for the current user\n     */\n    async getNonce() {\n        const res = await this.api.get(`/account/withdrawals/${this.tokenConfig.name}?address=${this.tokenConfig.address}`);\n        Utils.checkAndThrow(res, \"Getting withdrawal nonce\");\n        return res.data;\n    }\n    /**\n     * Gets the balance on the current bundler for the specified user\n     * @param address the user's address to query\n     * @returns the balance in winston\n     */\n    async getBalance(address) {\n        const res = await this.api.get(`/account/balance/${this.tokenConfig.name}?address=${address}`);\n        Utils.checkAndThrow(res, \"Getting balance\");\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](res.data.balance);\n    }\n    /**\n     * Queries the bundler to get it's address for a specific token\n     * @returns the bundler's address\n     */\n    async getBundlerAddress(token) {\n        const res = await this.api.get(\"/info\");\n        Utils.checkAndThrow(res, \"Getting Bundler address\");\n        const address = res.data.addresses[token];\n        if (!address) {\n            throw new Error(`Specified bundler does not support token ${token}`);\n        }\n        return address;\n    }\n    /**\n     * Calculates the price for [bytes] bytes paid for with [token] for the loaded Irys node.\n     * @param token\n     * @param bytes\n     * @returns\n     */\n    async getPrice(token, bytes) {\n        const res = await this.api.get(`/price/${token}/${bytes}`);\n        Utils.checkAndThrow(res, \"Getting storage cost\");\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](res.data);\n    }\n    /**\n     * This function *estimates* the cost in atomic units for uploading a given set of files\n     * note: this function becomes less accurate the smaller your transactions, unless you provide it with an accurate headerSizeAvg\n     * @param folderInfo either an array of file sizes in bytes, or an object containing the total number of files and the sum total size of the files in bytes\n     * note: for a more precise estimate, you can create an empty (dataless) transaction (make sure you still set tags and other metadata!) and then pass `tx.size` as `headerSizeAvg`\n     */\n    async estimateFolderPrice(folderInfo) {\n        if (Array.isArray(folderInfo)) {\n            folderInfo = {\n                fileCount: folderInfo.length,\n                totalBytes: folderInfo.reduce((acc, v) => acc + v, 0),\n            };\n        }\n        // create a 0 data byte tx to estimate the per tx header overhead\n        const headerSizeAvg = folderInfo.headerSizeAvg ?? this.arbundles.createData(\"\", this.tokenConfig.getSigner()).getRaw().length;\n        const pricePerTxBase = await this.getPrice(this.tokenConfig.name, headerSizeAvg);\n        const basePriceForTxs = pricePerTxBase.multipliedBy(folderInfo.fileCount);\n        const priceForData = (await this.getPrice(this.tokenConfig.name, folderInfo.totalBytes)).plus(basePriceForTxs).decimalPlaces(0);\n        return priceForData;\n    }\n    /**\n     * Returns the decimal values' equivalent in atomic units\n     * @example\n     * 0.1 ETH -> 100,000,000,000,000,000 wei\n     * ```\n     * toAtomic(100_000_000_000_000_000) -> 0.1\n     * ```\n     * @param decimalAmount - amount in decimal\n     * @returns amount in atomic units\n     */\n    toAtomic(decimalAmount) {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](decimalAmount).multipliedBy(this.tokenConfig.base[1]);\n    }\n    /**\n     * Returns the atomic amounts' equivalent in decimal units\n     * @example\n     * 100,000,000,000,000,000 wei -> 0.1 ETH\n     * ```\n     * fromAtomic(0.1) -> 100_000_000_000_000_000\n     * ```\n     * @param atomicAmount\n     * @returns\n     */\n    fromAtomic(atomicAmount) {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](atomicAmount).dividedBy(this.tokenConfig.base[1]);\n    }\n    /**\n     * Polls for transaction confirmation (or at least pending status) - used for fast currencies (i.e not arweave)\n     * before posting the fund request to the server (so the server doesn't have to poll)\n     * @param txid\n     * @returns\n     */\n    async confirmationPoll(txid, seconds = 30) {\n        if (this.tokenConfig.isSlow)\n            return;\n        if (seconds < 0)\n            seconds = 0;\n        let lastError;\n        let timedout;\n        const internalPoll = async () => {\n            while (!timedout) {\n                const getRes = await this.tokenConfig\n                    .getTx(txid)\n                    .then((v) => v?.confirmed)\n                    .catch((err) => {\n                    lastError = err;\n                    return false;\n                });\n                if (getRes)\n                    return true;\n                await sleep(1000);\n            }\n            return false;\n        };\n        const racer = async () => {\n            await sleep(seconds * 1_000);\n            timedout = true;\n            return \"RACE\";\n        };\n        const r = await Promise.race([racer(), internalPoll()]);\n        if (r === \"RACE\") {\n            console.warn(`Tx ${txid} didn't finalize after ${seconds} seconds ${lastError ? ` - ${lastError}` : \"\"}`);\n            return lastError;\n        }\n        return r;\n    }\n    /**\n     * @deprecated this method is deprecated in favour of fromAtomic - removal slated for 0.12.0\n     */\n    unitConverter(baseUnits) {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](baseUnits).dividedBy(this.tokenConfig.base[1]);\n    }\n    async verifyReceipt(receipt) {\n        return Utils.verifyReceipt(this.arbundles, receipt);\n    }\n    static async verifyReceipt(dependencies, receipt) {\n        const { id, deadlineHeight, timestamp, public: pubKey, signature, version } = receipt;\n        const dh = await dependencies.deepHash([\n            dependencies.stringToBuffer(\"Bundlr\"),\n            dependencies.stringToBuffer(version),\n            dependencies.stringToBuffer(id),\n            dependencies.stringToBuffer(deadlineHeight.toString()),\n            dependencies.stringToBuffer(timestamp.toString()),\n        ]);\n        return await dependencies.getCryptoDriver().verify(pubKey, dh, base64url__WEBPACK_IMPORTED_MODULE_0__.toBuffer(signature));\n    }\n    async getReceipt(txId) {\n        // get receipt information from GQL\n        const query = `query {\n      transactions(ids: [\"${txId}\"]) {\n        edges {\n          node {\n            receipt {\n              signature\n              timestamp\n              version\n              deadlineHeight\n            }\n          }\n        }\n      }\n    }`;\n        const queryRes = await async_retry__WEBPACK_IMPORTED_MODULE_2__(async () => {\n            return await this.api.post(\"/graphql\", { query }, {\n                headers: { \"content-type\": \"application/json\" },\n                validateStatus: (s) => s === 200,\n            });\n        });\n        const receiptData = queryRes?.data?.data?.transactions?.edges?.at(0)?.node?.receipt;\n        if (!receiptData)\n            throw new Error(`Missing required receipt data from node for tx: ${txId}`);\n        // get public key from node\n        const pubKey = (await this.api.get(\"/public\")).data;\n        const receipt = {\n            public: pubKey,\n            version: receiptData.version,\n            id: txId,\n            timestamp: receiptData.timestamp,\n            validatorSignatures: [],\n            signature: receiptData.signature,\n            deadlineHeight: receiptData.deadlineHeight,\n            // use stub to conform to type\n            verify: async () => {\n                return false;\n            },\n        };\n        // inject method\n        receipt.verify = async () => this.verifyReceipt(receipt);\n        return receipt;\n    }\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/common/withdrawal.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/common/withdrawal.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withdrawBalance: () => (/* binding */ withdrawBalance)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n\n\n\n/**\n * Create and send a withdrawal request\n * @param utils Instance of Utils\n * @param api Instance of API\n * @param wallet Wallet to use\n * @param amount amount to withdraw in winston\n * @returns the response from the bundler\n */\nasync function withdrawBalance(utils, api, amount) {\n    const c = utils.tokenConfig;\n    const { deepHash, stringToBuffer } = c.irys.arbundles;\n    const pkey = await c.getPublicKey();\n    const data = {\n        publicKey: pkey,\n        currency: utils.token,\n        amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toString(),\n        nonce: await utils.getNonce(),\n        signature: \"\",\n        sigType: c.getSigner().signatureType,\n    };\n    const deephash = await deepHash([stringToBuffer(data.currency), stringToBuffer(data.amount.toString()), stringToBuffer(data.nonce.toString())]);\n    if (!Buffer.isBuffer(data.publicKey)) {\n        data.publicKey = Buffer.from(data.publicKey);\n    }\n    const signature = await c.sign(deephash);\n    const isValid = await c.verify(data.publicKey, deephash, signature);\n    data.publicKey = base64url__WEBPACK_IMPORTED_MODULE_2__.encode(data.publicKey);\n    data.signature = base64url__WEBPACK_IMPORTED_MODULE_2__.encode(Buffer.from(signature));\n    const cpk = base64url__WEBPACK_IMPORTED_MODULE_2__.toBuffer(data.publicKey);\n    const csig = base64url__WEBPACK_IMPORTED_MODULE_2__.toBuffer(data.signature);\n    // should match opk and csig\n    const dh2 = await deepHash([stringToBuffer(data.currency), stringToBuffer(data.amount.toString()), stringToBuffer(data.nonce.toString())]);\n    const isValid2 = await c.verify(cpk, dh2, csig);\n    const isValid3 = c.ownerToAddress(c.name == \"arweave\" ? base64url__WEBPACK_IMPORTED_MODULE_2__.decode(data.publicKey) : base64url__WEBPACK_IMPORTED_MODULE_2__.toBuffer(data.publicKey)) === c.address;\n    if (!(isValid || isValid2 || isValid3)) {\n        throw new Error(`Internal withdrawal validation failed - please report this!\\nDebug Info:${JSON.stringify(data)}`);\n    }\n    const res = await api.post(\"/account/withdraw\", data);\n    if (res.status === 202) {\n        // node has timed/erroed out confirming the withdrawal\n        const txId = res.data.tx_id;\n        const withdrawalConfirmed = await utils.confirmationPoll(txId);\n        if (!(withdrawalConfirmed === true))\n            throw new Error(`Unable to confirm withdrawal tx ${txId} ${withdrawalConfirmed ? withdrawalConfirmed?.toString() : \"\"}`);\n    }\n    else {\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].checkAndThrow(res, \"Withdrawing balance\");\n    }\n    return res.data;\n}\n//# sourceMappingURL=withdrawal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9jb21tb24vd2l0aGRyYXdhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ007QUFDSDtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFlBQVksMkJBQTJCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9EQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZDQUFnQjtBQUNyQyxxQkFBcUIsNkNBQWdCO0FBQ3JDLGdCQUFnQiwrQ0FBa0I7QUFDbEMsaUJBQWlCLCtDQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSw0REFBNEQsNkNBQWdCLG1CQUFtQiwrQ0FBa0I7QUFDakg7QUFDQSxtR0FBbUcscUJBQXFCO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELE1BQU0sRUFBRSwyREFBMkQ7QUFDbEk7QUFDQTtBQUNBLFFBQVEsaURBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vY29tbW9uL3dpdGhkcmF3YWwuanM/YzVhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXRpbHMgZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSBcImJpZ251bWJlci5qc1wiO1xuaW1wb3J0IGJhc2U2NHVybCBmcm9tIFwiYmFzZTY0dXJsXCI7XG4vKipcbiAqIENyZWF0ZSBhbmQgc2VuZCBhIHdpdGhkcmF3YWwgcmVxdWVzdFxuICogQHBhcmFtIHV0aWxzIEluc3RhbmNlIG9mIFV0aWxzXG4gKiBAcGFyYW0gYXBpIEluc3RhbmNlIG9mIEFQSVxuICogQHBhcmFtIHdhbGxldCBXYWxsZXQgdG8gdXNlXG4gKiBAcGFyYW0gYW1vdW50IGFtb3VudCB0byB3aXRoZHJhdyBpbiB3aW5zdG9uXG4gKiBAcmV0dXJucyB0aGUgcmVzcG9uc2UgZnJvbSB0aGUgYnVuZGxlclxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aGRyYXdCYWxhbmNlKHV0aWxzLCBhcGksIGFtb3VudCkge1xuICAgIGNvbnN0IGMgPSB1dGlscy50b2tlbkNvbmZpZztcbiAgICBjb25zdCB7IGRlZXBIYXNoLCBzdHJpbmdUb0J1ZmZlciB9ID0gYy5pcnlzLmFyYnVuZGxlcztcbiAgICBjb25zdCBwa2V5ID0gYXdhaXQgYy5nZXRQdWJsaWNLZXkoKTtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBwdWJsaWNLZXk6IHBrZXksXG4gICAgICAgIGN1cnJlbmN5OiB1dGlscy50b2tlbixcbiAgICAgICAgYW1vdW50OiBuZXcgQmlnTnVtYmVyKGFtb3VudCkudG9TdHJpbmcoKSxcbiAgICAgICAgbm9uY2U6IGF3YWl0IHV0aWxzLmdldE5vbmNlKCksXG4gICAgICAgIHNpZ25hdHVyZTogXCJcIixcbiAgICAgICAgc2lnVHlwZTogYy5nZXRTaWduZXIoKS5zaWduYXR1cmVUeXBlLFxuICAgIH07XG4gICAgY29uc3QgZGVlcGhhc2ggPSBhd2FpdCBkZWVwSGFzaChbc3RyaW5nVG9CdWZmZXIoZGF0YS5jdXJyZW5jeSksIHN0cmluZ1RvQnVmZmVyKGRhdGEuYW1vdW50LnRvU3RyaW5nKCkpLCBzdHJpbmdUb0J1ZmZlcihkYXRhLm5vbmNlLnRvU3RyaW5nKCkpXSk7XG4gICAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoZGF0YS5wdWJsaWNLZXkpKSB7XG4gICAgICAgIGRhdGEucHVibGljS2V5ID0gQnVmZmVyLmZyb20oZGF0YS5wdWJsaWNLZXkpO1xuICAgIH1cbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBjLnNpZ24oZGVlcGhhc2gpO1xuICAgIGNvbnN0IGlzVmFsaWQgPSBhd2FpdCBjLnZlcmlmeShkYXRhLnB1YmxpY0tleSwgZGVlcGhhc2gsIHNpZ25hdHVyZSk7XG4gICAgZGF0YS5wdWJsaWNLZXkgPSBiYXNlNjR1cmwuZW5jb2RlKGRhdGEucHVibGljS2V5KTtcbiAgICBkYXRhLnNpZ25hdHVyZSA9IGJhc2U2NHVybC5lbmNvZGUoQnVmZmVyLmZyb20oc2lnbmF0dXJlKSk7XG4gICAgY29uc3QgY3BrID0gYmFzZTY0dXJsLnRvQnVmZmVyKGRhdGEucHVibGljS2V5KTtcbiAgICBjb25zdCBjc2lnID0gYmFzZTY0dXJsLnRvQnVmZmVyKGRhdGEuc2lnbmF0dXJlKTtcbiAgICAvLyBzaG91bGQgbWF0Y2ggb3BrIGFuZCBjc2lnXG4gICAgY29uc3QgZGgyID0gYXdhaXQgZGVlcEhhc2goW3N0cmluZ1RvQnVmZmVyKGRhdGEuY3VycmVuY3kpLCBzdHJpbmdUb0J1ZmZlcihkYXRhLmFtb3VudC50b1N0cmluZygpKSwgc3RyaW5nVG9CdWZmZXIoZGF0YS5ub25jZS50b1N0cmluZygpKV0pO1xuICAgIGNvbnN0IGlzVmFsaWQyID0gYXdhaXQgYy52ZXJpZnkoY3BrLCBkaDIsIGNzaWcpO1xuICAgIGNvbnN0IGlzVmFsaWQzID0gYy5vd25lclRvQWRkcmVzcyhjLm5hbWUgPT0gXCJhcndlYXZlXCIgPyBiYXNlNjR1cmwuZGVjb2RlKGRhdGEucHVibGljS2V5KSA6IGJhc2U2NHVybC50b0J1ZmZlcihkYXRhLnB1YmxpY0tleSkpID09PSBjLmFkZHJlc3M7XG4gICAgaWYgKCEoaXNWYWxpZCB8fCBpc1ZhbGlkMiB8fCBpc1ZhbGlkMykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnRlcm5hbCB3aXRoZHJhd2FsIHZhbGlkYXRpb24gZmFpbGVkIC0gcGxlYXNlIHJlcG9ydCB0aGlzIVxcbkRlYnVnIEluZm86JHtKU09OLnN0cmluZ2lmeShkYXRhKX1gKTtcbiAgICB9XG4gICAgY29uc3QgcmVzID0gYXdhaXQgYXBpLnBvc3QoXCIvYWNjb3VudC93aXRoZHJhd1wiLCBkYXRhKTtcbiAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAyKSB7XG4gICAgICAgIC8vIG5vZGUgaGFzIHRpbWVkL2Vycm9lZCBvdXQgY29uZmlybWluZyB0aGUgd2l0aGRyYXdhbFxuICAgICAgICBjb25zdCB0eElkID0gcmVzLmRhdGEudHhfaWQ7XG4gICAgICAgIGNvbnN0IHdpdGhkcmF3YWxDb25maXJtZWQgPSBhd2FpdCB1dGlscy5jb25maXJtYXRpb25Qb2xsKHR4SWQpO1xuICAgICAgICBpZiAoISh3aXRoZHJhd2FsQ29uZmlybWVkID09PSB0cnVlKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGNvbmZpcm0gd2l0aGRyYXdhbCB0eCAke3R4SWR9ICR7d2l0aGRyYXdhbENvbmZpcm1lZCA/IHdpdGhkcmF3YWxDb25maXJtZWQ/LnRvU3RyaW5nKCkgOiBcIlwifWApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgVXRpbHMuY2hlY2tBbmRUaHJvdyhyZXMsIFwiV2l0aGRyYXdpbmcgYmFsYW5jZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcy5kYXRhO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aGRyYXdhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/common/withdrawal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/esmIndex.js":
/*!******************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/esmIndex.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeIrys: () => (/* reexport safe */ _node_irys_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   WebIrys: () => (/* reexport safe */ _web_irys_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"default\": () => (/* reexport safe */ _node_irys_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _common_hack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/hack.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/hack.js\");\n/* harmony import */ var _web_irys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web/irys.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/irys.js\");\n/* harmony import */ var _node_irys_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node/irys.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/irys.js\");\n\n\n\n\n//# sourceMappingURL=esmIndex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9lc21JbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEI7QUFDeUI7QUFDRTtBQUNaO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9lc21JbmRleC5qcz81MWE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vY29tbW9uL2hhY2suanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgV2ViSXJ5cyB9IGZyb20gXCIuL3dlYi9pcnlzLmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE5vZGVJcnlzIH0gZnJvbSBcIi4vbm9kZS9pcnlzLmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4vbm9kZS9pcnlzLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lc21JbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/esmIndex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/irys.js":
/*!*******************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/irys.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeIrys: () => (/* binding */ NodeIrys),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_hack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/hack.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/hack.js\");\n/* harmony import */ var _common_transactions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/transactions.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/transactions.js\");\n/* harmony import */ var _common_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/api.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/api.js\");\n/* harmony import */ var _common_fund_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/fund.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/fund.js\");\n/* harmony import */ var _common_irys_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/irys.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/irys.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var _tokens_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tokens/index.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/index.js\");\n/* harmony import */ var _upload_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./upload.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/upload.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/utils.js\");\n/* harmony import */ var _provenance_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./provenance.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/provenance.js\");\n\n\n\n\n\n\n\n\n\n\nclass NodeIrys extends _common_irys_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n    uploader; // re-define type\n    tokenConfig;\n    /**\n     * Constructs a new Irys instance, as well as supporting subclasses\n     * @param url - URL to the bundler\n     * @param key - private key (in whatever form required)\n     */\n    constructor({ url, token, key, config }) {\n        switch (url) {\n            case undefined:\n            case \"node1\":\n                url = \"https://node1.irys.xyz\";\n                break;\n            case \"node2\":\n                url = \"https://node2.irys.xyz\";\n                break;\n            case \"devnet\":\n                url = \"https://devnet.irys.xyz\";\n                break;\n        }\n        const parsed = new URL(url);\n        super({ url: parsed, arbundles: _utils_js__WEBPACK_IMPORTED_MODULE_8__ });\n        if (parsed.host === \"devnet.irys.xyz\" && !config?.providerUrl)\n            throw new Error(`Using ${parsed.host} requires a dev/testnet RPC to be configured! see https://docs.irys.xyz/developer-docs/using-devnet`);\n        this.api = new _common_api_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            url: parsed,\n            timeout: config?.timeout ?? 100000,\n            headers: config?.headers,\n        });\n        this.tokenConfig = (0,_tokens_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, token.toLowerCase(), key, parsed.toString(), config?.providerUrl, config?.contractAddress, config?.tokenOpts);\n        this.token = this.tokenConfig.name;\n        this.address = this.tokenConfig.address;\n        this.utils = new _common_utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.api, this.token, this.tokenConfig);\n        this.funder = new _common_fund_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.utils);\n        this.uploader = new _upload_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.api, this.utils, this.token, this.tokenConfig, this.IrysTransaction);\n        this.provenance = new _provenance_js__WEBPACK_IMPORTED_MODULE_9__.NodeProvenance(this);\n        this.transactions = new _common_transactions_js__WEBPACK_IMPORTED_MODULE_1__.Transaction(this);\n        this._readyPromise = this.tokenConfig.ready ? this.tokenConfig.ready() : new Promise((r) => r());\n    }\n    /**\n     * Upload a file at the specified path to the bundler\n     * @param path path to the file to upload\n     * @returns bundler response\n     */\n    async uploadFile(path, opts) {\n        return this.uploader.uploadFile(path, opts);\n    }\n    /**\n     * @param path - path to the folder to be uploaded\n     * @param indexFile - path to the index file (i.e index.html)\n     * @param batchSize - number of items to upload concurrently\n     * @param interactivePreflight - whether to interactively prompt the user for confirmation of upload (CLI ONLY)\n     * @param keepDeleted - Whether to keep previously uploaded (but now deleted) files in the manifest\n     * @param logFunction - for handling logging from the uploader for UX\n     * @param manifestTags - For allowing the caller to pass tags that will be added to the manifest transaction.\n     * @returns\n     */\n    async uploadFolder(path, { batchSize = 10, keepDeleted = true, indexFile, interactivePreflight, logFunction, manifestTags, itemOptions, } = {}) {\n        return this.uploader.uploadFolder(path, { indexFile, batchSize, interactivePreflight, keepDeleted, logFunction, manifestTags, itemOptions });\n    }\n    static async init(opts) {\n        const { url, token, privateKey, publicKey, signingFunction, collectSignatures, providerUrl, timeout, contractAddress } = opts;\n        const Irys = new NodeIrys({\n            url,\n            token,\n            key: signingFunction ? publicKey : privateKey,\n            config: {\n                providerUrl,\n                timeout,\n                contractAddress,\n                tokenOpts: { signingFunction, collectSignatures },\n            },\n        });\n        await Irys.ready();\n        return Irys;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeIrys);\n//# sourceMappingURL=irys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL2lyeXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQTJCO0FBQzZCO0FBQ3JCO0FBQ0U7QUFDQTtBQUNFO0FBQ1E7QUFDUjtBQUNDO0FBQ1M7QUFDMUMsdUJBQXVCLHVEQUFJO0FBQ2xDLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNCQUFzQiwwQ0FBRTtBQUN4QztBQUNBLHFDQUFxQyxhQUFhO0FBQ2xELHVCQUF1QixzREFBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsMkJBQTJCLDREQUFjO0FBQ3pDO0FBQ0E7QUFDQSx5QkFBeUIsd0RBQUs7QUFDOUIsMEJBQTBCLHVEQUFJO0FBQzlCLDRCQUE0QixrREFBWTtBQUN4Qyw4QkFBOEIsMERBQWM7QUFDNUMsZ0NBQWdDLGdFQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsK0dBQStHLElBQUk7QUFDbEosa0RBQWtELGlHQUFpRztBQUNuSjtBQUNBO0FBQ0EsZ0JBQWdCLCtHQUErRztBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG9DQUFvQztBQUNqRSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsUUFBUSxFQUFDO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL2lyeXMuanM/NGQ5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9jb21tb24vaGFjay5qc1wiO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tIFwiLi4vY29tbW9uL3RyYW5zYWN0aW9ucy5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tbW9uL2FwaS5qc1wiO1xuaW1wb3J0IEZ1bmQgZnJvbSBcIi4uL2NvbW1vbi9mdW5kLmpzXCI7XG5pbXBvcnQgSXJ5cyBmcm9tIFwiLi4vY29tbW9uL2lyeXMuanNcIjtcbmltcG9ydCBVdGlscyBmcm9tIFwiLi4vY29tbW9uL3V0aWxzLmpzXCI7XG5pbXBvcnQgZ2V0VG9rZW5Db25maWcgZnJvbSBcIi4vdG9rZW5zL2luZGV4LmpzXCI7XG5pbXBvcnQgTm9kZVVwbG9hZGVyIGZyb20gXCIuL3VwbG9hZC5qc1wiO1xuaW1wb3J0ICogYXMgYXJidW5kbGVzIGZyb20gXCIuL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBOb2RlUHJvdmVuYW5jZSB9IGZyb20gXCIuL3Byb3ZlbmFuY2UuanNcIjtcbmV4cG9ydCBjbGFzcyBOb2RlSXJ5cyBleHRlbmRzIElyeXMge1xuICAgIHVwbG9hZGVyOyAvLyByZS1kZWZpbmUgdHlwZVxuICAgIHRva2VuQ29uZmlnO1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBuZXcgSXJ5cyBpbnN0YW5jZSwgYXMgd2VsbCBhcyBzdXBwb3J0aW5nIHN1YmNsYXNzZXNcbiAgICAgKiBAcGFyYW0gdXJsIC0gVVJMIHRvIHRoZSBidW5kbGVyXG4gICAgICogQHBhcmFtIGtleSAtIHByaXZhdGUga2V5IChpbiB3aGF0ZXZlciBmb3JtIHJlcXVpcmVkKVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHsgdXJsLCB0b2tlbiwga2V5LCBjb25maWcgfSkge1xuICAgICAgICBzd2l0Y2ggKHVybCkge1xuICAgICAgICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICBjYXNlIFwibm9kZTFcIjpcbiAgICAgICAgICAgICAgICB1cmwgPSBcImh0dHBzOi8vbm9kZTEuaXJ5cy54eXpcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJub2RlMlwiOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiaHR0cHM6Ly9ub2RlMi5pcnlzLnh5elwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImRldm5ldFwiOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiaHR0cHM6Ly9kZXZuZXQuaXJ5cy54eXpcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXJzZWQgPSBuZXcgVVJMKHVybCk7XG4gICAgICAgIHN1cGVyKHsgdXJsOiBwYXJzZWQsIGFyYnVuZGxlcyB9KTtcbiAgICAgICAgaWYgKHBhcnNlZC5ob3N0ID09PSBcImRldm5ldC5pcnlzLnh5elwiICYmICFjb25maWc/LnByb3ZpZGVyVXJsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVc2luZyAke3BhcnNlZC5ob3N0fSByZXF1aXJlcyBhIGRldi90ZXN0bmV0IFJQQyB0byBiZSBjb25maWd1cmVkISBzZWUgaHR0cHM6Ly9kb2NzLmlyeXMueHl6L2RldmVsb3Blci1kb2NzL3VzaW5nLWRldm5ldGApO1xuICAgICAgICB0aGlzLmFwaSA9IG5ldyBBcGkoe1xuICAgICAgICAgICAgdXJsOiBwYXJzZWQsXG4gICAgICAgICAgICB0aW1lb3V0OiBjb25maWc/LnRpbWVvdXQgPz8gMTAwMDAwLFxuICAgICAgICAgICAgaGVhZGVyczogY29uZmlnPy5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b2tlbkNvbmZpZyA9IGdldFRva2VuQ29uZmlnKHRoaXMsIHRva2VuLnRvTG93ZXJDYXNlKCksIGtleSwgcGFyc2VkLnRvU3RyaW5nKCksIGNvbmZpZz8ucHJvdmlkZXJVcmwsIGNvbmZpZz8uY29udHJhY3RBZGRyZXNzLCBjb25maWc/LnRva2VuT3B0cyk7XG4gICAgICAgIHRoaXMudG9rZW4gPSB0aGlzLnRva2VuQ29uZmlnLm5hbWU7XG4gICAgICAgIHRoaXMuYWRkcmVzcyA9IHRoaXMudG9rZW5Db25maWcuYWRkcmVzcztcbiAgICAgICAgdGhpcy51dGlscyA9IG5ldyBVdGlscyh0aGlzLmFwaSwgdGhpcy50b2tlbiwgdGhpcy50b2tlbkNvbmZpZyk7XG4gICAgICAgIHRoaXMuZnVuZGVyID0gbmV3IEZ1bmQodGhpcy51dGlscyk7XG4gICAgICAgIHRoaXMudXBsb2FkZXIgPSBuZXcgTm9kZVVwbG9hZGVyKHRoaXMuYXBpLCB0aGlzLnV0aWxzLCB0aGlzLnRva2VuLCB0aGlzLnRva2VuQ29uZmlnLCB0aGlzLklyeXNUcmFuc2FjdGlvbik7XG4gICAgICAgIHRoaXMucHJvdmVuYW5jZSA9IG5ldyBOb2RlUHJvdmVuYW5jZSh0aGlzKTtcbiAgICAgICAgdGhpcy50cmFuc2FjdGlvbnMgPSBuZXcgVHJhbnNhY3Rpb24odGhpcyk7XG4gICAgICAgIHRoaXMuX3JlYWR5UHJvbWlzZSA9IHRoaXMudG9rZW5Db25maWcucmVhZHkgPyB0aGlzLnRva2VuQ29uZmlnLnJlYWR5KCkgOiBuZXcgUHJvbWlzZSgocikgPT4gcigpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBsb2FkIGEgZmlsZSBhdCB0aGUgc3BlY2lmaWVkIHBhdGggdG8gdGhlIGJ1bmRsZXJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoIHRvIHRoZSBmaWxlIHRvIHVwbG9hZFxuICAgICAqIEByZXR1cm5zIGJ1bmRsZXIgcmVzcG9uc2VcbiAgICAgKi9cbiAgICBhc3luYyB1cGxvYWRGaWxlKHBhdGgsIG9wdHMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkZXIudXBsb2FkRmlsZShwYXRoLCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHBhdGggLSBwYXRoIHRvIHRoZSBmb2xkZXIgdG8gYmUgdXBsb2FkZWRcbiAgICAgKiBAcGFyYW0gaW5kZXhGaWxlIC0gcGF0aCB0byB0aGUgaW5kZXggZmlsZSAoaS5lIGluZGV4Lmh0bWwpXG4gICAgICogQHBhcmFtIGJhdGNoU2l6ZSAtIG51bWJlciBvZiBpdGVtcyB0byB1cGxvYWQgY29uY3VycmVudGx5XG4gICAgICogQHBhcmFtIGludGVyYWN0aXZlUHJlZmxpZ2h0IC0gd2hldGhlciB0byBpbnRlcmFjdGl2ZWx5IHByb21wdCB0aGUgdXNlciBmb3IgY29uZmlybWF0aW9uIG9mIHVwbG9hZCAoQ0xJIE9OTFkpXG4gICAgICogQHBhcmFtIGtlZXBEZWxldGVkIC0gV2hldGhlciB0byBrZWVwIHByZXZpb3VzbHkgdXBsb2FkZWQgKGJ1dCBub3cgZGVsZXRlZCkgZmlsZXMgaW4gdGhlIG1hbmlmZXN0XG4gICAgICogQHBhcmFtIGxvZ0Z1bmN0aW9uIC0gZm9yIGhhbmRsaW5nIGxvZ2dpbmcgZnJvbSB0aGUgdXBsb2FkZXIgZm9yIFVYXG4gICAgICogQHBhcmFtIG1hbmlmZXN0VGFncyAtIEZvciBhbGxvd2luZyB0aGUgY2FsbGVyIHRvIHBhc3MgdGFncyB0aGF0IHdpbGwgYmUgYWRkZWQgdG8gdGhlIG1hbmlmZXN0IHRyYW5zYWN0aW9uLlxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgdXBsb2FkRm9sZGVyKHBhdGgsIHsgYmF0Y2hTaXplID0gMTAsIGtlZXBEZWxldGVkID0gdHJ1ZSwgaW5kZXhGaWxlLCBpbnRlcmFjdGl2ZVByZWZsaWdodCwgbG9nRnVuY3Rpb24sIG1hbmlmZXN0VGFncywgaXRlbU9wdGlvbnMsIH0gPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy51cGxvYWRlci51cGxvYWRGb2xkZXIocGF0aCwgeyBpbmRleEZpbGUsIGJhdGNoU2l6ZSwgaW50ZXJhY3RpdmVQcmVmbGlnaHQsIGtlZXBEZWxldGVkLCBsb2dGdW5jdGlvbiwgbWFuaWZlc3RUYWdzLCBpdGVtT3B0aW9ucyB9KTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIGluaXQob3B0cykge1xuICAgICAgICBjb25zdCB7IHVybCwgdG9rZW4sIHByaXZhdGVLZXksIHB1YmxpY0tleSwgc2lnbmluZ0Z1bmN0aW9uLCBjb2xsZWN0U2lnbmF0dXJlcywgcHJvdmlkZXJVcmwsIHRpbWVvdXQsIGNvbnRyYWN0QWRkcmVzcyB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgSXJ5cyA9IG5ldyBOb2RlSXJ5cyh7XG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIGtleTogc2lnbmluZ0Z1bmN0aW9uID8gcHVibGljS2V5IDogcHJpdmF0ZUtleSxcbiAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyVXJsLFxuICAgICAgICAgICAgICAgIHRpbWVvdXQsXG4gICAgICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzLFxuICAgICAgICAgICAgICAgIHRva2VuT3B0czogeyBzaWduaW5nRnVuY3Rpb24sIGNvbGxlY3RTaWduYXR1cmVzIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgYXdhaXQgSXJ5cy5yZWFkeSgpO1xuICAgICAgICByZXR1cm4gSXJ5cztcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBOb2RlSXJ5cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlyeXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/irys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/provenance.js":
/*!*************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/provenance.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeProvenance: () => (/* binding */ NodeProvenance)\n/* harmony export */ });\n/* harmony import */ var _common_provenance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/provenance.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/provenance.js\");\n\nclass NodeProvenance extends _common_provenance_js__WEBPACK_IMPORTED_MODULE_0__.Provenance {\n    constructor(irys) {\n        super(irys);\n    }\n    async uploadFile(path, opts) {\n        return this.irys.uploadFile(path, { ...opts, upload: { ...opts?.upload, getReceiptSignature: true } });\n    }\n    async uploadFolder(path, { batchSize = 10, keepDeleted = true, indexFile, interactivePreflight, logFunction, manifestTags, itemOptions, } = { batchSize: 10, keepDeleted: true }) {\n        return this.irys.uploadFolder(path, {\n            batchSize,\n            keepDeleted,\n            indexFile,\n            interactivePreflight,\n            logFunction,\n            manifestTags,\n            itemOptions: { ...itemOptions, upload: { ...itemOptions?.upload, getReceiptSignature: true } },\n        });\n    }\n}\n//# sourceMappingURL=provenance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Byb3ZlbmFuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDOUMsNkJBQTZCLDZEQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLG1CQUFtQiw4Q0FBOEM7QUFDN0c7QUFDQSwrQkFBK0IsK0dBQStHLElBQUksa0NBQWtDO0FBQ3BMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBCQUEwQixxREFBcUQ7QUFDMUcsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vbm9kZS9wcm92ZW5hbmNlLmpzP2U4YTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmVuYW5jZSB9IGZyb20gXCIuLi9jb21tb24vcHJvdmVuYW5jZS5qc1wiO1xuZXhwb3J0IGNsYXNzIE5vZGVQcm92ZW5hbmNlIGV4dGVuZHMgUHJvdmVuYW5jZSB7XG4gICAgY29uc3RydWN0b3IoaXJ5cykge1xuICAgICAgICBzdXBlcihpcnlzKTtcbiAgICB9XG4gICAgYXN5bmMgdXBsb2FkRmlsZShwYXRoLCBvcHRzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlyeXMudXBsb2FkRmlsZShwYXRoLCB7IC4uLm9wdHMsIHVwbG9hZDogeyAuLi5vcHRzPy51cGxvYWQsIGdldFJlY2VpcHRTaWduYXR1cmU6IHRydWUgfSB9KTtcbiAgICB9XG4gICAgYXN5bmMgdXBsb2FkRm9sZGVyKHBhdGgsIHsgYmF0Y2hTaXplID0gMTAsIGtlZXBEZWxldGVkID0gdHJ1ZSwgaW5kZXhGaWxlLCBpbnRlcmFjdGl2ZVByZWZsaWdodCwgbG9nRnVuY3Rpb24sIG1hbmlmZXN0VGFncywgaXRlbU9wdGlvbnMsIH0gPSB7IGJhdGNoU2l6ZTogMTAsIGtlZXBEZWxldGVkOiB0cnVlIH0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXJ5cy51cGxvYWRGb2xkZXIocGF0aCwge1xuICAgICAgICAgICAgYmF0Y2hTaXplLFxuICAgICAgICAgICAga2VlcERlbGV0ZWQsXG4gICAgICAgICAgICBpbmRleEZpbGUsXG4gICAgICAgICAgICBpbnRlcmFjdGl2ZVByZWZsaWdodCxcbiAgICAgICAgICAgIGxvZ0Z1bmN0aW9uLFxuICAgICAgICAgICAgbWFuaWZlc3RUYWdzLFxuICAgICAgICAgICAgaXRlbU9wdGlvbnM6IHsgLi4uaXRlbU9wdGlvbnMsIHVwbG9hZDogeyAuLi5pdGVtT3B0aW9ucz8udXBsb2FkLCBnZXRSZWNlaXB0U2lnbmF0dXJlOiB0cnVlIH0gfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdmVuYW5jZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/provenance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js":
/*!********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/token.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseNodeToken: () => (/* binding */ BaseNodeToken),\n/* harmony export */   getRedstonePrice: () => (/* binding */ getRedstonePrice)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/utils.js\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n\n\n\n\nclass BaseNodeToken {\n    base;\n    wallet;\n    _address;\n    providerUrl;\n    providerInstance;\n    ticker;\n    name;\n    minConfirm = 5;\n    isSlow = false;\n    needsFee = true;\n    opts;\n    utils;\n    irys;\n    constructor(config) {\n        Object.assign(this, config);\n        this._address = this.wallet ? this.ownerToAddress(this.getPublicKey()) : undefined;\n    }\n    // common methods\n    get address() {\n        return this._address;\n    }\n    async getId(item) {\n        return base64url__WEBPACK_IMPORTED_MODULE_1__.encode(Buffer.from(await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCryptoDriver)().hash(await item.rawSignature())));\n    }\n    async price() {\n        return getRedstonePrice(this.ticker);\n    }\n}\nasync function getRedstonePrice(token) {\n    const res = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(`https://api.redstone.finance/prices?symbol=${token}&provider=redstone&limit=1`);\n    await _common_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(res, \"Getting price data\");\n    return res.data[0].value;\n}\n//# sourceMappingURL=token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2QztBQUNYO0FBQ1I7QUFDYTtBQUNoQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2Q0FBZ0IsbUJBQW1CLDBEQUFlO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHNCQUFzQiw2Q0FBSyxtREFBbUQsTUFBTTtBQUNwRixVQUFVLHdEQUFLO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2VuLmpzPzc3OTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q3J5cHRvRHJpdmVyIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCBiYXNlNjR1cmwgZnJvbSBcImJhc2U2NHVybFwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IHV0aWxzIGZyb20gXCIuLi9jb21tb24vdXRpbHMuanNcIjtcbmV4cG9ydCBjbGFzcyBCYXNlTm9kZVRva2VuIHtcbiAgICBiYXNlO1xuICAgIHdhbGxldDtcbiAgICBfYWRkcmVzcztcbiAgICBwcm92aWRlclVybDtcbiAgICBwcm92aWRlckluc3RhbmNlO1xuICAgIHRpY2tlcjtcbiAgICBuYW1lO1xuICAgIG1pbkNvbmZpcm0gPSA1O1xuICAgIGlzU2xvdyA9IGZhbHNlO1xuICAgIG5lZWRzRmVlID0gdHJ1ZTtcbiAgICBvcHRzO1xuICAgIHV0aWxzO1xuICAgIGlyeXM7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgY29uZmlnKTtcbiAgICAgICAgdGhpcy5fYWRkcmVzcyA9IHRoaXMud2FsbGV0ID8gdGhpcy5vd25lclRvQWRkcmVzcyh0aGlzLmdldFB1YmxpY0tleSgpKSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gY29tbW9uIG1ldGhvZHNcbiAgICBnZXQgYWRkcmVzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FkZHJlc3M7XG4gICAgfVxuICAgIGFzeW5jIGdldElkKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGJhc2U2NHVybC5lbmNvZGUoQnVmZmVyLmZyb20oYXdhaXQgZ2V0Q3J5cHRvRHJpdmVyKCkuaGFzaChhd2FpdCBpdGVtLnJhd1NpZ25hdHVyZSgpKSkpO1xuICAgIH1cbiAgICBhc3luYyBwcmljZSgpIHtcbiAgICAgICAgcmV0dXJuIGdldFJlZHN0b25lUHJpY2UodGhpcy50aWNrZXIpO1xuICAgIH1cbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSZWRzdG9uZVByaWNlKHRva2VuKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL2FwaS5yZWRzdG9uZS5maW5hbmNlL3ByaWNlcz9zeW1ib2w9JHt0b2tlbn0mcHJvdmlkZXI9cmVkc3RvbmUmbGltaXQ9MWApO1xuICAgIGF3YWl0IHV0aWxzLmNoZWNrQW5kVGhyb3cocmVzLCBcIkdldHRpbmcgcHJpY2UgZGF0YVwiKTtcbiAgICByZXR1cm4gcmVzLmRhdGFbMF0udmFsdWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/algorand.js":
/*!******************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/algorand.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AlgorandConfig)\n/* harmony export */ });\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var algosdk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! algosdk */ \"(ssr)/./node_modules/algosdk/dist/esm/index.js\");\n\n\n\n\n\nclass AlgorandConfig extends _token_js__WEBPACK_IMPORTED_MODULE_2__.BaseNodeToken {\n    keyPair;\n    apiURL;\n    indexerURL;\n    constructor(config) {\n        super(config);\n        this.base = [\"microAlgos\", 1e6];\n        this.keyPair = (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.mnemonicToSecretKey)(this.wallet);\n        this.apiURL = config.providerUrl;\n        if (!config.opts.indexerUrl)\n            throw new Error(`Algorand: required client constructor option 'opts.indexerUrl' is undefined`);\n        this.indexerURL = config.opts.indexerUrl;\n    }\n    async getTx(txId) {\n        const endpoint = `${this.indexerURL}/v2/transactions/${txId}`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(endpoint);\n        const latestBlockHeight = new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](await this.getCurrentHeight()).toNumber();\n        const txBlockHeight = new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](response.data.transaction[\"confirmed-round\"]);\n        const tx = {\n            from: response.data.transaction.sender,\n            to: response.data.transaction[\"payment-transaction\"].receiver,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](response.data.transaction[\"payment-transaction\"].amount),\n            blockHeight: txBlockHeight,\n            pending: false,\n            confirmed: latestBlockHeight - txBlockHeight.toNumber() >= this.minConfirm,\n        };\n        return tx;\n    }\n    ownerToAddress(owner) {\n        return (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.encodeAddress)(owner);\n    }\n    async sign(data) {\n        return this.getSigner().sign(data);\n    }\n    getSigner() {\n        return new arbundles__WEBPACK_IMPORTED_MODULE_0__.AlgorandSigner(this.keyPair.sk, this.getPublicKey());\n    }\n    async verify(pub, data, signature) {\n        return arbundles__WEBPACK_IMPORTED_MODULE_0__.AlgorandSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        //  \"last-round\" = blockheight\n        const endpoint = `${this.apiURL}/v2/transactions/params`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(endpoint);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](await response.data[\"last-round\"]);\n    }\n    async getFee() {\n        const endpoint = `${this.apiURL}/v2/transactions/params`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(endpoint);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](response.data[\"min-fee\"]);\n    }\n    async sendTx(data) {\n        const endpoint = `${this.apiURL}/v2/transactions`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].post(endpoint, data);\n        return response.data.txId;\n    }\n    async createTx(amount, to) {\n        const endpoint = `${this.apiURL}/v2/transactions/params`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(endpoint);\n        const params = await response.data;\n        const unsigned = (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.makePaymentTxnWithSuggestedParamsFromObject)({\n            from: this.keyPair.addr,\n            to: to,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toNumber(),\n            note: undefined,\n            suggestedParams: {\n                fee: params.fee,\n                firstRound: params[\"last-round\"],\n                flatFee: false,\n                genesisHash: params[\"genesis-hash\"],\n                genesisID: params[\"genesis-id\"],\n                lastRound: params[\"last-round\"] + 1000,\n            },\n        });\n        const signed = (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.signTransaction)(unsigned, this.keyPair.sk);\n        return { tx: signed.blob, txId: signed.txID };\n    }\n    getPublicKey() {\n        this.keyPair = (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.mnemonicToSecretKey)(this.wallet);\n        const pub = (0,algosdk__WEBPACK_IMPORTED_MODULE_3__.decodeAddress)(this.keyPair.addr).publicKey;\n        return Buffer.from(pub);\n    }\n}\n//# sourceMappingURL=algorand.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2Vucy9hbGdvcmFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkM7QUFDTjtBQUNPO0FBQ2xCO0FBQ2dIO0FBQzNILDZCQUE2QixvREFBYTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNERBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixnQkFBZ0IsbUJBQW1CLEtBQUs7QUFDcEUsK0JBQStCLDZDQUFLO0FBQ3BDLHNDQUFzQyxvREFBUztBQUMvQyxrQ0FBa0Msb0RBQVM7QUFDM0M7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBYTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFjO0FBQ2pDO0FBQ0E7QUFDQSxlQUFlLHFEQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixZQUFZO0FBQ3hDLCtCQUErQiw2Q0FBSztBQUNwQyxtQkFBbUIsb0RBQVM7QUFDNUI7QUFDQTtBQUNBLDRCQUE0QixZQUFZO0FBQ3hDLCtCQUErQiw2Q0FBSztBQUNwQyxtQkFBbUIsb0RBQVM7QUFDNUI7QUFDQTtBQUNBLDRCQUE0QixZQUFZO0FBQ3hDLCtCQUErQiw2Q0FBSztBQUNwQztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsWUFBWTtBQUN4QywrQkFBK0IsNkNBQUs7QUFDcEM7QUFDQSx5QkFBeUIsb0ZBQTJDO0FBQ3BFO0FBQ0E7QUFDQSx3QkFBd0Isb0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsdUJBQXVCLHdEQUFlO0FBQ3RDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsdUJBQXVCLDREQUFtQjtBQUMxQyxvQkFBb0Isc0RBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL25vZGUvdG9rZW5zL2FsZ29yYW5kLmpzPzhkMGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWxnb3JhbmRTaWduZXIgfSBmcm9tIFwiYXJidW5kbGVzXCI7XG5pbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIjtcbmltcG9ydCB7IEJhc2VOb2RlVG9rZW4gfSBmcm9tIFwiLi4vdG9rZW4uanNcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IGRlY29kZUFkZHJlc3MsIGVuY29kZUFkZHJlc3MsIG1ha2VQYXltZW50VHhuV2l0aFN1Z2dlc3RlZFBhcmFtc0Zyb21PYmplY3QsIHNpZ25UcmFuc2FjdGlvbiwgbW5lbW9uaWNUb1NlY3JldEtleSB9IGZyb20gXCJhbGdvc2RrXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbGdvcmFuZENvbmZpZyBleHRlbmRzIEJhc2VOb2RlVG9rZW4ge1xuICAgIGtleVBhaXI7XG4gICAgYXBpVVJMO1xuICAgIGluZGV4ZXJVUkw7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuYmFzZSA9IFtcIm1pY3JvQWxnb3NcIiwgMWU2XTtcbiAgICAgICAgdGhpcy5rZXlQYWlyID0gbW5lbW9uaWNUb1NlY3JldEtleSh0aGlzLndhbGxldCk7XG4gICAgICAgIHRoaXMuYXBpVVJMID0gY29uZmlnLnByb3ZpZGVyVXJsO1xuICAgICAgICBpZiAoIWNvbmZpZy5vcHRzLmluZGV4ZXJVcmwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFsZ29yYW5kOiByZXF1aXJlZCBjbGllbnQgY29uc3RydWN0b3Igb3B0aW9uICdvcHRzLmluZGV4ZXJVcmwnIGlzIHVuZGVmaW5lZGApO1xuICAgICAgICB0aGlzLmluZGV4ZXJVUkwgPSBjb25maWcub3B0cy5pbmRleGVyVXJsO1xuICAgIH1cbiAgICBhc3luYyBnZXRUeCh0eElkKSB7XG4gICAgICAgIGNvbnN0IGVuZHBvaW50ID0gYCR7dGhpcy5pbmRleGVyVVJMfS92Mi90cmFuc2FjdGlvbnMvJHt0eElkfWA7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGVuZHBvaW50KTtcbiAgICAgICAgY29uc3QgbGF0ZXN0QmxvY2tIZWlnaHQgPSBuZXcgQmlnTnVtYmVyKGF3YWl0IHRoaXMuZ2V0Q3VycmVudEhlaWdodCgpKS50b051bWJlcigpO1xuICAgICAgICBjb25zdCB0eEJsb2NrSGVpZ2h0ID0gbmV3IEJpZ051bWJlcihyZXNwb25zZS5kYXRhLnRyYW5zYWN0aW9uW1wiY29uZmlybWVkLXJvdW5kXCJdKTtcbiAgICAgICAgY29uc3QgdHggPSB7XG4gICAgICAgICAgICBmcm9tOiByZXNwb25zZS5kYXRhLnRyYW5zYWN0aW9uLnNlbmRlcixcbiAgICAgICAgICAgIHRvOiByZXNwb25zZS5kYXRhLnRyYW5zYWN0aW9uW1wicGF5bWVudC10cmFuc2FjdGlvblwiXS5yZWNlaXZlcixcbiAgICAgICAgICAgIGFtb3VudDogbmV3IEJpZ051bWJlcihyZXNwb25zZS5kYXRhLnRyYW5zYWN0aW9uW1wicGF5bWVudC10cmFuc2FjdGlvblwiXS5hbW91bnQpLFxuICAgICAgICAgICAgYmxvY2tIZWlnaHQ6IHR4QmxvY2tIZWlnaHQsXG4gICAgICAgICAgICBwZW5kaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbmZpcm1lZDogbGF0ZXN0QmxvY2tIZWlnaHQgLSB0eEJsb2NrSGVpZ2h0LnRvTnVtYmVyKCkgPj0gdGhpcy5taW5Db25maXJtLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdHg7XG4gICAgfVxuICAgIG93bmVyVG9BZGRyZXNzKG93bmVyKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVBZGRyZXNzKG93bmVyKTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbihkYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFNpZ25lcigpLnNpZ24oZGF0YSk7XG4gICAgfVxuICAgIGdldFNpZ25lcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBbGdvcmFuZFNpZ25lcih0aGlzLmtleVBhaXIuc2ssIHRoaXMuZ2V0UHVibGljS2V5KCkpO1xuICAgIH1cbiAgICBhc3luYyB2ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpIHtcbiAgICAgICAgcmV0dXJuIEFsZ29yYW5kU2lnbmVyLnZlcmlmeShwdWIsIGRhdGEsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEN1cnJlbnRIZWlnaHQoKSB7XG4gICAgICAgIC8vICBcImxhc3Qtcm91bmRcIiA9IGJsb2NraGVpZ2h0XG4gICAgICAgIGNvbnN0IGVuZHBvaW50ID0gYCR7dGhpcy5hcGlVUkx9L3YyL3RyYW5zYWN0aW9ucy9wYXJhbXNgO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChlbmRwb2ludCk7XG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKGF3YWl0IHJlc3BvbnNlLmRhdGFbXCJsYXN0LXJvdW5kXCJdKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0RmVlKCkge1xuICAgICAgICBjb25zdCBlbmRwb2ludCA9IGAke3RoaXMuYXBpVVJMfS92Mi90cmFuc2FjdGlvbnMvcGFyYW1zYDtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoZW5kcG9pbnQpO1xuICAgICAgICByZXR1cm4gbmV3IEJpZ051bWJlcihyZXNwb25zZS5kYXRhW1wibWluLWZlZVwiXSk7XG4gICAgfVxuICAgIGFzeW5jIHNlbmRUeChkYXRhKSB7XG4gICAgICAgIGNvbnN0IGVuZHBvaW50ID0gYCR7dGhpcy5hcGlVUkx9L3YyL3RyYW5zYWN0aW9uc2A7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChlbmRwb2ludCwgZGF0YSk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhLnR4SWQ7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZVR4KGFtb3VudCwgdG8pIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBgJHt0aGlzLmFwaVVSTH0vdjIvdHJhbnNhY3Rpb25zL3BhcmFtc2A7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGVuZHBvaW50KTtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gYXdhaXQgcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgY29uc3QgdW5zaWduZWQgPSBtYWtlUGF5bWVudFR4bldpdGhTdWdnZXN0ZWRQYXJhbXNGcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIGZyb206IHRoaXMua2V5UGFpci5hZGRyLFxuICAgICAgICAgICAgdG86IHRvLFxuICAgICAgICAgICAgYW1vdW50OiBuZXcgQmlnTnVtYmVyKGFtb3VudCkudG9OdW1iZXIoKSxcbiAgICAgICAgICAgIG5vdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHN1Z2dlc3RlZFBhcmFtczoge1xuICAgICAgICAgICAgICAgIGZlZTogcGFyYW1zLmZlZSxcbiAgICAgICAgICAgICAgICBmaXJzdFJvdW5kOiBwYXJhbXNbXCJsYXN0LXJvdW5kXCJdLFxuICAgICAgICAgICAgICAgIGZsYXRGZWU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGdlbmVzaXNIYXNoOiBwYXJhbXNbXCJnZW5lc2lzLWhhc2hcIl0sXG4gICAgICAgICAgICAgICAgZ2VuZXNpc0lEOiBwYXJhbXNbXCJnZW5lc2lzLWlkXCJdLFxuICAgICAgICAgICAgICAgIGxhc3RSb3VuZDogcGFyYW1zW1wibGFzdC1yb3VuZFwiXSArIDEwMDAsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgc2lnbmVkID0gc2lnblRyYW5zYWN0aW9uKHVuc2lnbmVkLCB0aGlzLmtleVBhaXIuc2spO1xuICAgICAgICByZXR1cm4geyB0eDogc2lnbmVkLmJsb2IsIHR4SWQ6IHNpZ25lZC50eElEIH07XG4gICAgfVxuICAgIGdldFB1YmxpY0tleSgpIHtcbiAgICAgICAgdGhpcy5rZXlQYWlyID0gbW5lbW9uaWNUb1NlY3JldEtleSh0aGlzLndhbGxldCk7XG4gICAgICAgIGNvbnN0IHB1YiA9IGRlY29kZUFkZHJlc3ModGhpcy5rZXlQYWlyLmFkZHIpLnB1YmxpY0tleTtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHB1Yik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWxnb3JhbmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/algorand.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/aptos.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/aptos.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AptosConfig)\n/* harmony export */ });\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aptos */ \"(ssr)/./node_modules/aptos/dist/index.mjs\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! js-sha3 */ \"(ssr)/./node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n\n\n\n\n\n\n// import { Transaction_UserTransaction, TransactionPayload_EntryFunctionPayload, UserTransaction, } from \"aptos/src/generated\";\nclass AptosConfig extends _token_js__WEBPACK_IMPORTED_MODULE_3__.BaseNodeToken {\n    accountInstance;\n    signerInstance;\n    txLock = Promise.resolve();\n    locked = false;\n    constructor(config) {\n        if (typeof config.wallet === \"string\" && config.wallet.length === 66)\n            config.wallet = Buffer.from(config.wallet.slice(2), \"hex\");\n        if (!config?.opts?.signingFunction && Buffer.isBuffer(config?.wallet)) {\n            // @ts-expect-error custom prop\n            config.accountInstance = new aptos__WEBPACK_IMPORTED_MODULE_0__.AptosAccount(config.wallet);\n        }\n        super(config);\n        // @ts-expect-error assignment doesn't carry through for some reason\n        this.accountInstance = config.accountInstance;\n        this.signingFn = config?.opts?.signingFunction;\n        this.needsFee = true;\n        this.base = [\"aptom\", 1e8];\n    }\n    async getProvider() {\n        return (this.providerInstance ??= new aptos__WEBPACK_IMPORTED_MODULE_0__.AptosClient(this.providerUrl));\n    }\n    async getTx(txId) {\n        const client = await this.getProvider();\n        const tx = (await client.waitForTransactionWithResult(txId /* , { checkSuccess: true } */));\n        const payload = tx?.payload;\n        if (!tx.success) {\n            throw new Error(tx?.vm_status ?? \"Unknown Aptos error\");\n        }\n        if (!(payload?.function === \"0x1::coin::transfer\" &&\n            payload?.type_arguments[0] === \"0x1::aptos_coin::AptosCoin\" &&\n            tx?.vm_status === \"Executed successfully\")) {\n            throw new Error(`Aptos tx ${txId} failed validation`);\n        }\n        const isPending = tx.type === \"pending_transaction\";\n        return {\n            to: payload.arguments[0],\n            from: tx.sender,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](payload.arguments[1]),\n            pending: isPending,\n            confirmed: !isPending,\n        };\n    }\n    ownerToAddress(owner) {\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_4__.sha3_256.create();\n        hash.update(Buffer.from(owner));\n        hash.update(\"\\x00\");\n        return `0x${hash.hex()}`;\n    }\n    async sign(data) {\n        return await this.getSigner().sign(data);\n    }\n    getSigner() {\n        if (this.signerInstance)\n            return this.signerInstance;\n        if (this.signingFn) {\n            const signer = new arbundles__WEBPACK_IMPORTED_MODULE_1__.AptosSigner(\"\", \"0x\" + this.getPublicKey().toString(\"hex\"));\n            signer.sign = this.signingFn; // override signer fn\n            return (this.signerInstance = signer);\n        }\n        else {\n            return (this.signerInstance = new arbundles__WEBPACK_IMPORTED_MODULE_1__.AptosSigner(this.accountInstance.toPrivateKeyObject().privateKeyHex, this.accountInstance.toPrivateKeyObject().publicKeyHex));\n        }\n    }\n    async verify(pub, data, signature) {\n        return await arbundles__WEBPACK_IMPORTED_MODULE_1__.AptosSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]((await (await this.getProvider()).client.blocks.httpRequest.request({ method: \"GET\", url: \"/\" })).block_height);\n    }\n    async getFee(amount, to) {\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        const client = await this.getProvider();\n        const builder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderRemoteABI(client, { sender: this.address });\n        const rawTransaction = await builder.build(\"0x1::coin::transfer\", [\"0x1::aptos_coin::AptosCoin\"], [to ?? \"0x149f7dc9c8e43c14ab46d3a6b62cfe84d67668f764277411f98732bf6718acf9\", new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toNumber()]);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const txnBuilder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderEd25519((_signingMessage) => {\n            const invalidSigBytes = new Uint8Array(64);\n            return new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n        }, this.getPublicKey());\n        const signedSimulation = txnBuilder.sign(rawTransaction);\n        const queryParams = {\n            estimate_gas_unit_price: true,\n            estimate_max_gas_amount: true,\n        };\n        const simulationResult = await async_retry__WEBPACK_IMPORTED_MODULE_5__(async (_) => {\n            const simulationResult = await client.client.request.request({\n                url: \"/transactions/simulate\",\n                query: queryParams,\n                method: \"POST\",\n                body: signedSimulation,\n                mediaType: \"application/x.aptos.signed_transaction+bcs\",\n            });\n            if (!simulationResult[0].success || simulationResult[0].gas_used === \"0\")\n                throw new Error(`Tx simulation failed`);\n            return simulationResult;\n        }, { retries: 10 }).catch((_) => [{ gas_unit_price: \"100\", gas_used: \"10\" }]);\n        return { gasUnitPrice: +simulationResult[0].gas_unit_price, maxGasAmount: Math.ceil(+simulationResult[0].gas_used * 2) };\n        // const simulationResult = await client.simulateTransaction(this.accountInstance, rawTransaction, { estimateGasUnitPrice: true, estimateMaxGasAmount: true });\n        // return new BigNumber(simulationResult?.[0].gas_unit_price).multipliedBy(simulationResult?.[0].gas_used);\n        // const est = await provider.client.transactions.estimateGasPrice();\n        // return new BigNumber(est.gas_estimate/* (await (await this.getProvider()).client.transactions.estimateGasPrice()).gas_estimate */); // * by gas limit (for upper limit)\n    }\n    async sendTx(data) {\n        const provider = await this.getProvider();\n        const s = await provider.submitSignedBCSTransaction(data.tx);\n        await provider.waitForTransactionWithResult(s.hash);\n        data.unlock?.();\n        return s.hash;\n    }\n    async createTx(amount, to, fee) {\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run irys.ready()\");\n        // mutex so multiple aptos txs aren't in flight with the same sequence number\n        const unlock = await this.lock();\n        const client = await this.getProvider();\n        const builder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderRemoteABI(client, {\n            sender: this.address,\n            gasUnitPrice: BigInt(fee?.gasUnitPrice ?? 100),\n            maxGasAmount: BigInt(fee?.maxGasAmount ?? 10),\n        });\n        const rawTransaction = await builder.build(\"0x1::coin::transfer\", [\"0x1::aptos_coin::AptosCoin\"], [to, new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toNumber()]);\n        // const bcsTxn = AptosClient.generateBCSTransaction(this.accountInstance, rawTransaction);\n        const signingMessage = aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilder.getSigningMessage(rawTransaction);\n        const sig = await this.sign(signingMessage);\n        const txnBuilder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderEd25519((_) => {\n            return new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519Signature(sig);\n        }, this.getPublicKey());\n        const bcsTxn = txnBuilder.sign(rawTransaction);\n        return { txId: undefined, tx: { tx: bcsTxn, unlock } };\n    }\n    getPublicKey() {\n        if (this.opts?.signingFunction)\n            return this.wallet;\n        return Buffer.from(this.accountInstance.pubKey().toString().slice(2), \"hex\");\n    }\n    async ready() {\n        const client = await this.getProvider();\n        this._address = await client\n            .lookupOriginalAddress(this.address ?? \"\")\n            .then((hs) => hs.toString())\n            .catch((_) => this._address); // fallback to original\n        if (this._address?.length == 66 && this._address.charAt(2) === \"0\") {\n            this._address = this._address.slice(0, 2) + this._address.slice(3);\n        }\n    }\n    // basic async mutex for transaction creation - done so sequenceNumbers don't overlap\n    async lock() {\n        this.locked = true;\n        let unlockNext;\n        const willLock = new Promise((r) => (unlockNext = r));\n        willLock.then(() => (this.locked = false));\n        const willUnlock = this.txLock.then(() => unlockNext);\n        this.txLock = this.txLock.then(() => willLock);\n        return willUnlock;\n    }\n}\n//# sourceMappingURL=aptos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/aptos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/arweave.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/arweave.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArweaveConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/utils.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n\n\n\n\n\n\nclass ArweaveConfig extends _token_js__WEBPACK_IMPORTED_MODULE_5__.BaseNodeToken {\n    constructor(config) {\n        super(config);\n        this.base = [\"winston\", 1e12];\n        this.needsFee = true;\n    }\n    async getProvider() {\n        if (!this.providerInstance) {\n            const purl = new URL(this.providerUrl ?? \"https://arweave.net\");\n            // this.providerInstance = Arweave.init({\n            //   host: purl.hostname,\n            //   protocol: purl.protocol.replaceAll(\":\", \"\").replaceAll(\"/\", \"\"),\n            //   port: purl.port,\n            //   network: this?.opts?.network,\n            // });\n            this.providerInstance = new _utils_js__WEBPACK_IMPORTED_MODULE_0__.Arweave({ url: purl, network: this?.opts?.network });\n        }\n        return this.providerInstance;\n    }\n    async getTx(txId) {\n        const arweave = await this.getProvider();\n        const txs = await arweave.transactions.getStatus(txId);\n        let tx;\n        if (txs.status === 200) {\n            tx = await arweave.transactions.get(txId);\n        }\n        const confirmed = txs.status !== 202 && (txs.confirmed?.number_of_confirmations ?? 0) >= this.minConfirm;\n        let owner;\n        if (tx?.owner) {\n            owner = this.ownerToAddress(tx.owner);\n        }\n        return {\n            from: owner ?? undefined,\n            to: tx?.target ?? undefined,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](tx?.quantity ?? 0),\n            pending: txs.status === 202,\n            confirmed,\n        };\n    }\n    ownerToAddress(owner) {\n        return _utils_js__WEBPACK_IMPORTED_MODULE_0__.Arweave.utils.bufferTob64Url(crypto__WEBPACK_IMPORTED_MODULE_3__.createHash(\"sha256\")\n            .update(_utils_js__WEBPACK_IMPORTED_MODULE_0__.Arweave.utils.b64UrlToBuffer(Buffer.isBuffer(owner) ? base64url__WEBPACK_IMPORTED_MODULE_4__(owner) : owner))\n            .digest());\n    }\n    async sign(data) {\n        return this.providerInstance.crypto.sign(this.wallet, data);\n    }\n    getSigner() {\n        return new arbundles__WEBPACK_IMPORTED_MODULE_1__.ArweaveSigner(this.wallet);\n    }\n    async verify(pub, data, signature) {\n        if (Buffer.isBuffer(pub)) {\n            pub = pub.toString();\n        }\n        return this.providerInstance.crypto.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        return (await this.getProvider()).network.getInfo().then((r) => new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](r.height));\n    }\n    async getFee(amount, to) {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](await (await this.getProvider()).transactions.getPrice(new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toNumber(), to)).integerValue(bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ROUND_CEIL);\n    }\n    async sendTx(data) {\n        const provider = await this.getProvider();\n        const res = await provider.transactions.post(data);\n        if (res.statusText.includes(\"Nodes rejected the TX headers\")) {\n            // check user balance\n            const balance = new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](await provider.wallets.getBalance(this.address));\n            if (balance.isLessThanOrEqualTo(data.quantity))\n                throw new Error(`${this.address} has a balance of ${balance.toString()} winston, less than the required ${new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](data.reward).plus(data.quantity)}.`);\n        }\n        return res;\n    }\n    async createTx(amount, to, fee) {\n        const arweave = await this.getProvider();\n        const tx = await arweave.createTransaction({ quantity: new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toString(), reward: fee, target: to }, this.wallet);\n        await arweave.transactions.sign(tx, this.wallet);\n        return { txId: tx.id, tx };\n    }\n    getPublicKey() {\n        return this.wallet.n;\n    }\n}\n//# sourceMappingURL=arweave.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2Vucy9hcndlYXZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBc0M7QUFDSTtBQUNMO0FBQ1Q7QUFDTTtBQUNVO0FBQzdCLDRCQUE0QixvREFBYTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQix3Q0FBd0MsOENBQU8sR0FBRyx5Q0FBeUM7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUFPLHNCQUFzQiw4Q0FDckI7QUFDdkIsb0JBQW9CLDhDQUFPLCtDQUErQyxzQ0FBUztBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxvREFBUztBQUNyRjtBQUNBO0FBQ0EsbUJBQW1CLG9EQUFTLDREQUE0RCxvREFBUyx1Q0FBdUMsb0RBQVM7QUFDako7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG9EQUFTO0FBQ3pDO0FBQ0EsbUNBQW1DLGNBQWMsbUJBQW1CLG9CQUFvQixrQ0FBa0MsSUFBSSxvREFBUyxrQ0FBa0M7QUFDeks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxjQUFjLG9EQUFTLDhDQUE4QztBQUMxSDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL25vZGUvdG9rZW5zL2Fyd2VhdmUuanM/YTU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcndlYXZlIH0gZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBBcndlYXZlU2lnbmVyIH0gZnJvbSBcImFyYnVuZGxlc1wiO1xuaW1wb3J0IEJpZ051bWJlciBmcm9tIFwiYmlnbnVtYmVyLmpzXCI7XG5pbXBvcnQgY3J5cHRvIGZyb20gXCJjcnlwdG9cIjtcbmltcG9ydCBiYXNlNjR1cmwgZnJvbSBcImJhc2U2NHVybFwiO1xuaW1wb3J0IHsgQmFzZU5vZGVUb2tlbiB9IGZyb20gXCIuLi90b2tlbi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ3ZWF2ZUNvbmZpZyBleHRlbmRzIEJhc2VOb2RlVG9rZW4ge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICB0aGlzLmJhc2UgPSBbXCJ3aW5zdG9uXCIsIDFlMTJdO1xuICAgICAgICB0aGlzLm5lZWRzRmVlID0gdHJ1ZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0UHJvdmlkZXIoKSB7XG4gICAgICAgIGlmICghdGhpcy5wcm92aWRlckluc3RhbmNlKSB7XG4gICAgICAgICAgICBjb25zdCBwdXJsID0gbmV3IFVSTCh0aGlzLnByb3ZpZGVyVXJsID8/IFwiaHR0cHM6Ly9hcndlYXZlLm5ldFwiKTtcbiAgICAgICAgICAgIC8vIHRoaXMucHJvdmlkZXJJbnN0YW5jZSA9IEFyd2VhdmUuaW5pdCh7XG4gICAgICAgICAgICAvLyAgIGhvc3Q6IHB1cmwuaG9zdG5hbWUsXG4gICAgICAgICAgICAvLyAgIHByb3RvY29sOiBwdXJsLnByb3RvY29sLnJlcGxhY2VBbGwoXCI6XCIsIFwiXCIpLnJlcGxhY2VBbGwoXCIvXCIsIFwiXCIpLFxuICAgICAgICAgICAgLy8gICBwb3J0OiBwdXJsLnBvcnQsXG4gICAgICAgICAgICAvLyAgIG5ldHdvcms6IHRoaXM/Lm9wdHM/Lm5ldHdvcmssXG4gICAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAgIHRoaXMucHJvdmlkZXJJbnN0YW5jZSA9IG5ldyBBcndlYXZlKHsgdXJsOiBwdXJsLCBuZXR3b3JrOiB0aGlzPy5vcHRzPy5uZXR3b3JrIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVySW5zdGFuY2U7XG4gICAgfVxuICAgIGFzeW5jIGdldFR4KHR4SWQpIHtcbiAgICAgICAgY29uc3QgYXJ3ZWF2ZSA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgICAgY29uc3QgdHhzID0gYXdhaXQgYXJ3ZWF2ZS50cmFuc2FjdGlvbnMuZ2V0U3RhdHVzKHR4SWQpO1xuICAgICAgICBsZXQgdHg7XG4gICAgICAgIGlmICh0eHMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIHR4ID0gYXdhaXQgYXJ3ZWF2ZS50cmFuc2FjdGlvbnMuZ2V0KHR4SWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbmZpcm1lZCA9IHR4cy5zdGF0dXMgIT09IDIwMiAmJiAodHhzLmNvbmZpcm1lZD8ubnVtYmVyX29mX2NvbmZpcm1hdGlvbnMgPz8gMCkgPj0gdGhpcy5taW5Db25maXJtO1xuICAgICAgICBsZXQgb3duZXI7XG4gICAgICAgIGlmICh0eD8ub3duZXIpIHtcbiAgICAgICAgICAgIG93bmVyID0gdGhpcy5vd25lclRvQWRkcmVzcyh0eC5vd25lcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZyb206IG93bmVyID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHRvOiB0eD8udGFyZ2V0ID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGFtb3VudDogbmV3IEJpZ051bWJlcih0eD8ucXVhbnRpdHkgPz8gMCksXG4gICAgICAgICAgICBwZW5kaW5nOiB0eHMuc3RhdHVzID09PSAyMDIsXG4gICAgICAgICAgICBjb25maXJtZWQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIG93bmVyVG9BZGRyZXNzKG93bmVyKSB7XG4gICAgICAgIHJldHVybiBBcndlYXZlLnV0aWxzLmJ1ZmZlclRvYjY0VXJsKGNyeXB0b1xuICAgICAgICAgICAgLmNyZWF0ZUhhc2goXCJzaGEyNTZcIilcbiAgICAgICAgICAgIC51cGRhdGUoQXJ3ZWF2ZS51dGlscy5iNjRVcmxUb0J1ZmZlcihCdWZmZXIuaXNCdWZmZXIob3duZXIpID8gYmFzZTY0dXJsKG93bmVyKSA6IG93bmVyKSlcbiAgICAgICAgICAgIC5kaWdlc3QoKSk7XG4gICAgfVxuICAgIGFzeW5jIHNpZ24oZGF0YSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm92aWRlckluc3RhbmNlLmNyeXB0by5zaWduKHRoaXMud2FsbGV0LCBkYXRhKTtcbiAgICB9XG4gICAgZ2V0U2lnbmVyKCkge1xuICAgICAgICByZXR1cm4gbmV3IEFyd2VhdmVTaWduZXIodGhpcy53YWxsZXQpO1xuICAgIH1cbiAgICBhc3luYyB2ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpIHtcbiAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihwdWIpKSB7XG4gICAgICAgICAgICBwdWIgPSBwdWIudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcm92aWRlckluc3RhbmNlLmNyeXB0by52ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpO1xuICAgIH1cbiAgICBhc3luYyBnZXRDdXJyZW50SGVpZ2h0KCkge1xuICAgICAgICByZXR1cm4gKGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKSkubmV0d29yay5nZXRJbmZvKCkudGhlbigocikgPT4gbmV3IEJpZ051bWJlcihyLmhlaWdodCkpO1xuICAgIH1cbiAgICBhc3luYyBnZXRGZWUoYW1vdW50LCB0bykge1xuICAgICAgICByZXR1cm4gbmV3IEJpZ051bWJlcihhd2FpdCAoYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpKS50cmFuc2FjdGlvbnMuZ2V0UHJpY2UobmV3IEJpZ051bWJlcihhbW91bnQpLnRvTnVtYmVyKCksIHRvKSkuaW50ZWdlclZhbHVlKEJpZ051bWJlci5ST1VORF9DRUlMKTtcbiAgICB9XG4gICAgYXN5bmMgc2VuZFR4KGRhdGEpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHByb3ZpZGVyLnRyYW5zYWN0aW9ucy5wb3N0KGRhdGEpO1xuICAgICAgICBpZiAocmVzLnN0YXR1c1RleHQuaW5jbHVkZXMoXCJOb2RlcyByZWplY3RlZCB0aGUgVFggaGVhZGVyc1wiKSkge1xuICAgICAgICAgICAgLy8gY2hlY2sgdXNlciBiYWxhbmNlXG4gICAgICAgICAgICBjb25zdCBiYWxhbmNlID0gbmV3IEJpZ051bWJlcihhd2FpdCBwcm92aWRlci53YWxsZXRzLmdldEJhbGFuY2UodGhpcy5hZGRyZXNzKSk7XG4gICAgICAgICAgICBpZiAoYmFsYW5jZS5pc0xlc3NUaGFuT3JFcXVhbFRvKGRhdGEucXVhbnRpdHkpKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHt0aGlzLmFkZHJlc3N9IGhhcyBhIGJhbGFuY2Ugb2YgJHtiYWxhbmNlLnRvU3RyaW5nKCl9IHdpbnN0b24sIGxlc3MgdGhhbiB0aGUgcmVxdWlyZWQgJHtuZXcgQmlnTnVtYmVyKGRhdGEucmV3YXJkKS5wbHVzKGRhdGEucXVhbnRpdHkpfS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBhc3luYyBjcmVhdGVUeChhbW91bnQsIHRvLCBmZWUpIHtcbiAgICAgICAgY29uc3QgYXJ3ZWF2ZSA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgICAgY29uc3QgdHggPSBhd2FpdCBhcndlYXZlLmNyZWF0ZVRyYW5zYWN0aW9uKHsgcXVhbnRpdHk6IG5ldyBCaWdOdW1iZXIoYW1vdW50KS50b1N0cmluZygpLCByZXdhcmQ6IGZlZSwgdGFyZ2V0OiB0byB9LCB0aGlzLndhbGxldCk7XG4gICAgICAgIGF3YWl0IGFyd2VhdmUudHJhbnNhY3Rpb25zLnNpZ24odHgsIHRoaXMud2FsbGV0KTtcbiAgICAgICAgcmV0dXJuIHsgdHhJZDogdHguaWQsIHR4IH07XG4gICAgfVxuICAgIGdldFB1YmxpY0tleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2FsbGV0Lm47XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJ3ZWF2ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/arweave.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/erc20.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/erc20.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ERC20Config),\n/* harmony export */   erc20abi: () => (/* binding */ erc20abi)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/contracts */ \"(ssr)/./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/wallet */ \"(ssr)/./node_modules/@ethersproject/wallet/lib.esm/index.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n/* harmony import */ var _ethereum_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/ethereum.js\");\n\n\n\n\n\n\nclass ERC20Config extends _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n    contractInstance;\n    contractAddress;\n    constructor(config) {\n        super(config);\n        this.contractAddress = config.contractAddress;\n    }\n    async getContract() {\n        if (!this.contractInstance) {\n            this.contractInstance = new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_4__.Contract(this.contractAddress, erc20abi, new _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_5__.Wallet(this.wallet, await this.getProvider()));\n            this.base = [\"wei\", Math.pow(10, await this.contractInstance.decimals())];\n        }\n        return this.contractInstance;\n    }\n    async getTx(txId) {\n        const response = await (await super.getProvider()).getTransaction(txId);\n        if (!response)\n            throw new Error(\"Tx doesn't exist\");\n        if (response.data.length !== 138 ||\n            response.data.slice(2, 10) !== \"a9059cbb\" // standard ERC20-ABI method ID for transfers\n        ) {\n            throw new Error(\"Tx isn't a ERC20 transfer\");\n        }\n        const to = `0x${response.data.slice(34, 74)}`;\n        const amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.data.slice(74), 16);\n        return {\n            from: response.from,\n            to,\n            blockHeight: response.blockNumber ? new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.blockNumber) : undefined,\n            amount,\n            pending: response.blockNumber ? false : true,\n            confirmed: response.confirmations >= this.minConfirm,\n        };\n    }\n    /**\n     * Returns the fee in CONTRACT TOKEN UNITS equivalent to the fee derived via gas token units, i.e Wei\n     * @param amount\n     * @param to\n     * @returns\n     */\n    async getFee(amount, to) {\n        const _amount = \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16);\n        const contract = await this.getContract();\n        const provider = await this.getProvider();\n        const gasPrice = await provider.getGasPrice();\n        const gasLimit = await contract.estimateGas.transfer(to, _amount);\n        const units = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gasPrice.mul(gasLimit).toString()); // price in WEI\n        const [fiatGasPrice] = await this.getGas(); // get price of gas units\n        const value = fiatGasPrice.multipliedBy(units); // value of the fee\n        // convert value\n        const ctPrice = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](await this.price()); // price for this token\n        const ctAmount = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value).dividedToIntegerBy(ctPrice);\n        // const b = ctAmount.multipliedBy(ctPrice)\n        // const c = value.dividedBy(this.base[1])\n        // console.log(b);\n        // console.log(c)\n        return ctAmount;\n    }\n    async createTx(amount, to, _fee) {\n        const provider = await this.getProvider();\n        const wallet = new _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_5__.Wallet(this.wallet, provider);\n        const contract = await this.getContract();\n        const _amount = \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16);\n        const tx = await contract.populateTransaction.transfer(to, _amount);\n        // Needed *specifically* for ERC20\n        tx.gasPrice = await provider.getGasPrice();\n        tx.gasLimit = await contract.estimateGas.transfer(to, _amount);\n        tx.chainId = (await provider.getNetwork()).chainId;\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        tx.nonce = await provider.getTransactionCount(this.address);\n        const signedTx = await wallet.signTransaction(tx);\n        const txId = \"0x\" + (0,arbundles__WEBPACK_IMPORTED_MODULE_1__.keccak256)(Buffer.from(signedTx.slice(2), \"hex\")).toString(\"hex\");\n        return { txId, tx: signedTx };\n    }\n    // TODO: create a nicer solution than just overrides (larger issue: some currencies aren't on redstone)\n    async getGas() {\n        return [new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](await (0,_token_js__WEBPACK_IMPORTED_MODULE_2__.getRedstonePrice)(\"ETH\")), 1e18];\n    }\n}\nconst erc20abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n];\n//# sourceMappingURL=erc20.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/erc20.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/ethereum.js":
/*!******************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/ethereum.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EthereumConfig)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/bignumber */ \"(ssr)/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/providers */ \"(ssr)/./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js\");\n/* harmony import */ var _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/wallet */ \"(ssr)/./node_modules/@ethersproject/wallet/lib.esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n\n\n\n\n\n\nconst ethereumSigner = arbundles__WEBPACK_IMPORTED_MODULE_1__.EthereumSigner;\nclass EthereumConfig extends _token_js__WEBPACK_IMPORTED_MODULE_2__.BaseNodeToken {\n    constructor(config) {\n        super(config);\n        this.base = [\"wei\", 1e18];\n    }\n    async getProvider() {\n        if (!this.providerInstance) {\n            this.providerInstance = new _ethersproject_providers__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(this.providerUrl);\n            await this.providerInstance.ready;\n        }\n        return this.providerInstance;\n    }\n    async getTx(txId) {\n        const provider = await this.getProvider();\n        const response = await provider.getTransaction(txId);\n        if (!response)\n            throw new Error(\"Tx doesn't exist\");\n        if (!response.to)\n            throw new Error(`Unable to determine transaction ${txId} recepient`);\n        // console.log(response.confirmations);\n        return {\n            from: response.from,\n            to: response.to,\n            blockHeight: response.blockNumber ? new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.blockNumber) : undefined,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.value.toHexString(), 16),\n            pending: response.blockNumber ? false : true,\n            confirmed: response.confirmations >= this.minConfirm,\n        };\n    }\n    ownerToAddress(owner) {\n        return \"0x\" + (0,arbundles__WEBPACK_IMPORTED_MODULE_1__.keccak256)(owner.slice(1)).slice(-20).toString(\"hex\");\n    }\n    async sign(data) {\n        const signer = this.getSigner();\n        return signer.sign(data);\n    }\n    getSigner() {\n        return new ethereumSigner(this.wallet);\n    }\n    verify(pub, data, signature) {\n        return ethereumSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        const response = await (await this.getProvider()).send(\"eth_blockNumber\", []);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response, 16);\n    }\n    async getFee(amount, to) {\n        const provider = await this.getProvider();\n        const _amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount);\n        const tx = {\n            from: this.address,\n            to,\n            value: \"0x\" + _amount.toString(16),\n        };\n        const estimatedGas = await provider.estimateGas(tx);\n        const gasPrice = await provider.getGasPrice();\n        // const b = await provider.send(\"eth_maxPriorityFeePerGas\", [])\n        // console.log(b)\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](estimatedGas.mul(gasPrice).toString());\n    }\n    async sendTx(data) {\n        return await (await this.getProvider()).sendTransaction(data).catch((e) => {\n            console.error(`Error occurred while sending a tx - ${e}`);\n            throw e;\n        });\n    }\n    async createTx(amount, to, fee) {\n        const provider = await this.getProvider();\n        const wallet = new _ethersproject_wallet__WEBPACK_IMPORTED_MODULE_4__.Wallet(this.wallet, provider);\n        const _amount = \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16);\n        let gasPrice = await provider.getGasPrice();\n        const gasEstimate = fee ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](fee).dividedToIntegerBy(gasPrice.toString()).toFixed()) : undefined;\n        // const estimatedGas = await provider.estimateGas({ from: this.address, to, value: _amount });\n        // console.log({ gasPrice, estimatedGas })\n        // if (fee) {\n        //     gasPrice = ethers.BigNumber.from(Math.ceil(+fee / estimatedGas.toNumber()))\n        // }\n        if (this.name === \"matic\") {\n            gasPrice = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_5__.BigNumber.from(new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gasPrice.toString()).multipliedBy(10).decimalPlaces(0).toString());\n        }\n        const tx = await wallet.populateTransaction({\n            to,\n            value: _amount,\n            from: this.address,\n            gasPrice,\n            // gasLimit: estimatedGas,\n            gasLimit: gasEstimate,\n            // nonce: b // await provider.getTransactionCount(this.address),\n            // chainId: await (await provider.getNetwork()).chainId\n        });\n        // tx.gasLimit = ethers.BigNumber.from(+(tx.gasLimit.toString()) * 4)\n        const signedTx = await wallet.signTransaction(tx);\n        const txId = \"0x\" + (0,arbundles__WEBPACK_IMPORTED_MODULE_1__.keccak256)(Buffer.from(signedTx.slice(2), \"hex\")).toString(\"hex\");\n        // const c = await provider.call(tx);\n        // console.log(c)\n        return { txId, tx: signedTx };\n    }\n    getPublicKey() {\n        return this.getSigner().publicKey;\n    }\n}\n//# sourceMappingURL=ethereum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2Vucy9ldGhlcmV1bS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFFO0FBQ1Y7QUFDWjtBQUNWO0FBQ2lCO0FBQ1Y7QUFDNUMsdUJBQXVCLHFEQUFjO0FBQ3RCLDZCQUE2QixvREFBYTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MscUVBQWU7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsTUFBTTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxvREFBUztBQUM3RCx3QkFBd0Isb0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0RBQVM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9EQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxFQUFFO0FBQ25FO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5REFBTTtBQUNqQyxtQ0FBbUMsb0RBQVM7QUFDNUM7QUFDQSxrQ0FBa0MsK0RBQVksVUFBVSxvREFBUztBQUNqRSw2REFBNkQsd0NBQXdDO0FBQ3JHLHlCQUF5Qix3QkFBd0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQVksVUFBVSxvREFBUztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsNEJBQTRCLG9EQUFTO0FBQ3JDO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3Rva2Vucy9ldGhlcmV1bS5qcz8xZDk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpZ051bWJlciBhcyBFdGhCaWdOdW1iZXIgfSBmcm9tIFwiQGV0aGVyc3Byb2plY3QvYmlnbnVtYmVyXCI7XG5pbXBvcnQgeyBKc29uUnBjUHJvdmlkZXIgfSBmcm9tIFwiQGV0aGVyc3Byb2plY3QvcHJvdmlkZXJzXCI7XG5pbXBvcnQgeyBXYWxsZXQgfSBmcm9tIFwiQGV0aGVyc3Byb2plY3Qvd2FsbGV0XCI7XG5pbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIjtcbmltcG9ydCB7IEV0aGVyZXVtU2lnbmVyLCBrZWNjYWsyNTYgfSBmcm9tIFwiYXJidW5kbGVzXCI7XG5pbXBvcnQgeyBCYXNlTm9kZVRva2VuIH0gZnJvbSBcIi4uL3Rva2VuLmpzXCI7XG5jb25zdCBldGhlcmV1bVNpZ25lciA9IEV0aGVyZXVtU2lnbmVyO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXRoZXJldW1Db25maWcgZXh0ZW5kcyBCYXNlTm9kZVRva2VuIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgdGhpcy5iYXNlID0gW1wid2VpXCIsIDFlMThdO1xuICAgIH1cbiAgICBhc3luYyBnZXRQcm92aWRlcigpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3ZpZGVySW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJvdmlkZXJJbnN0YW5jZSA9IG5ldyBKc29uUnBjUHJvdmlkZXIodGhpcy5wcm92aWRlclVybCk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnByb3ZpZGVySW5zdGFuY2UucmVhZHk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXJJbnN0YW5jZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0VHgodHhJZCkge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwcm92aWRlci5nZXRUcmFuc2FjdGlvbih0eElkKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR4IGRvZXNuJ3QgZXhpc3RcIik7XG4gICAgICAgIGlmICghcmVzcG9uc2UudG8pXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBkZXRlcm1pbmUgdHJhbnNhY3Rpb24gJHt0eElkfSByZWNlcGllbnRgKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuY29uZmlybWF0aW9ucyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmcm9tOiByZXNwb25zZS5mcm9tLFxuICAgICAgICAgICAgdG86IHJlc3BvbnNlLnRvLFxuICAgICAgICAgICAgYmxvY2tIZWlnaHQ6IHJlc3BvbnNlLmJsb2NrTnVtYmVyID8gbmV3IEJpZ051bWJlcihyZXNwb25zZS5ibG9ja051bWJlcikgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBhbW91bnQ6IG5ldyBCaWdOdW1iZXIocmVzcG9uc2UudmFsdWUudG9IZXhTdHJpbmcoKSwgMTYpLFxuICAgICAgICAgICAgcGVuZGluZzogcmVzcG9uc2UuYmxvY2tOdW1iZXIgPyBmYWxzZSA6IHRydWUsXG4gICAgICAgICAgICBjb25maXJtZWQ6IHJlc3BvbnNlLmNvbmZpcm1hdGlvbnMgPj0gdGhpcy5taW5Db25maXJtLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBvd25lclRvQWRkcmVzcyhvd25lcikge1xuICAgICAgICByZXR1cm4gXCIweFwiICsga2VjY2FrMjU2KG93bmVyLnNsaWNlKDEpKS5zbGljZSgtMjApLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgIH1cbiAgICBhc3luYyBzaWduKGRhdGEpIHtcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gdGhpcy5nZXRTaWduZXIoKTtcbiAgICAgICAgcmV0dXJuIHNpZ25lci5zaWduKGRhdGEpO1xuICAgIH1cbiAgICBnZXRTaWduZXIoKSB7XG4gICAgICAgIHJldHVybiBuZXcgZXRoZXJldW1TaWduZXIodGhpcy53YWxsZXQpO1xuICAgIH1cbiAgICB2ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpIHtcbiAgICAgICAgcmV0dXJuIGV0aGVyZXVtU2lnbmVyLnZlcmlmeShwdWIsIGRhdGEsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEN1cnJlbnRIZWlnaHQoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgKGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKSkuc2VuZChcImV0aF9ibG9ja051bWJlclwiLCBbXSk7XG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKHJlc3BvbnNlLCAxNik7XG4gICAgfVxuICAgIGFzeW5jIGdldEZlZShhbW91bnQsIHRvKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICAgICAgICBjb25zdCBfYW1vdW50ID0gbmV3IEJpZ051bWJlcihhbW91bnQpO1xuICAgICAgICBjb25zdCB0eCA9IHtcbiAgICAgICAgICAgIGZyb206IHRoaXMuYWRkcmVzcyxcbiAgICAgICAgICAgIHRvLFxuICAgICAgICAgICAgdmFsdWU6IFwiMHhcIiArIF9hbW91bnQudG9TdHJpbmcoMTYpLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlc3RpbWF0ZWRHYXMgPSBhd2FpdCBwcm92aWRlci5lc3RpbWF0ZUdhcyh0eCk7XG4gICAgICAgIGNvbnN0IGdhc1ByaWNlID0gYXdhaXQgcHJvdmlkZXIuZ2V0R2FzUHJpY2UoKTtcbiAgICAgICAgLy8gY29uc3QgYiA9IGF3YWl0IHByb3ZpZGVyLnNlbmQoXCJldGhfbWF4UHJpb3JpdHlGZWVQZXJHYXNcIiwgW10pXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGIpXG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKGVzdGltYXRlZEdhcy5tdWwoZ2FzUHJpY2UpLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICBhc3luYyBzZW5kVHgoZGF0YSkge1xuICAgICAgICByZXR1cm4gYXdhaXQgKGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKSkuc2VuZFRyYW5zYWN0aW9uKGRhdGEpLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBvY2N1cnJlZCB3aGlsZSBzZW5kaW5nIGEgdHggLSAke2V9YCk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXN5bmMgY3JlYXRlVHgoYW1vdW50LCB0bywgZmVlKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpO1xuICAgICAgICBjb25zdCB3YWxsZXQgPSBuZXcgV2FsbGV0KHRoaXMud2FsbGV0LCBwcm92aWRlcik7XG4gICAgICAgIGNvbnN0IF9hbW91bnQgPSBcIjB4XCIgKyBuZXcgQmlnTnVtYmVyKGFtb3VudCkudG9TdHJpbmcoMTYpO1xuICAgICAgICBsZXQgZ2FzUHJpY2UgPSBhd2FpdCBwcm92aWRlci5nZXRHYXNQcmljZSgpO1xuICAgICAgICBjb25zdCBnYXNFc3RpbWF0ZSA9IGZlZSA/IEV0aEJpZ051bWJlci5mcm9tKG5ldyBCaWdOdW1iZXIoZmVlKS5kaXZpZGVkVG9JbnRlZ2VyQnkoZ2FzUHJpY2UudG9TdHJpbmcoKSkudG9GaXhlZCgpKSA6IHVuZGVmaW5lZDtcbiAgICAgICAgLy8gY29uc3QgZXN0aW1hdGVkR2FzID0gYXdhaXQgcHJvdmlkZXIuZXN0aW1hdGVHYXMoeyBmcm9tOiB0aGlzLmFkZHJlc3MsIHRvLCB2YWx1ZTogX2Ftb3VudCB9KTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coeyBnYXNQcmljZSwgZXN0aW1hdGVkR2FzIH0pXG4gICAgICAgIC8vIGlmIChmZWUpIHtcbiAgICAgICAgLy8gICAgIGdhc1ByaWNlID0gZXRoZXJzLkJpZ051bWJlci5mcm9tKE1hdGguY2VpbCgrZmVlIC8gZXN0aW1hdGVkR2FzLnRvTnVtYmVyKCkpKVxuICAgICAgICAvLyB9XG4gICAgICAgIGlmICh0aGlzLm5hbWUgPT09IFwibWF0aWNcIikge1xuICAgICAgICAgICAgZ2FzUHJpY2UgPSBFdGhCaWdOdW1iZXIuZnJvbShuZXcgQmlnTnVtYmVyKGdhc1ByaWNlLnRvU3RyaW5nKCkpLm11bHRpcGxpZWRCeSgxMCkuZGVjaW1hbFBsYWNlcygwKS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0eCA9IGF3YWl0IHdhbGxldC5wb3B1bGF0ZVRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHRvLFxuICAgICAgICAgICAgdmFsdWU6IF9hbW91bnQsXG4gICAgICAgICAgICBmcm9tOiB0aGlzLmFkZHJlc3MsXG4gICAgICAgICAgICBnYXNQcmljZSxcbiAgICAgICAgICAgIC8vIGdhc0xpbWl0OiBlc3RpbWF0ZWRHYXMsXG4gICAgICAgICAgICBnYXNMaW1pdDogZ2FzRXN0aW1hdGUsXG4gICAgICAgICAgICAvLyBub25jZTogYiAvLyBhd2FpdCBwcm92aWRlci5nZXRUcmFuc2FjdGlvbkNvdW50KHRoaXMuYWRkcmVzcyksXG4gICAgICAgICAgICAvLyBjaGFpbklkOiBhd2FpdCAoYXdhaXQgcHJvdmlkZXIuZ2V0TmV0d29yaygpKS5jaGFpbklkXG4gICAgICAgIH0pO1xuICAgICAgICAvLyB0eC5nYXNMaW1pdCA9IGV0aGVycy5CaWdOdW1iZXIuZnJvbSgrKHR4Lmdhc0xpbWl0LnRvU3RyaW5nKCkpICogNClcbiAgICAgICAgY29uc3Qgc2lnbmVkVHggPSBhd2FpdCB3YWxsZXQuc2lnblRyYW5zYWN0aW9uKHR4KTtcbiAgICAgICAgY29uc3QgdHhJZCA9IFwiMHhcIiArIGtlY2NhazI1NihCdWZmZXIuZnJvbShzaWduZWRUeC5zbGljZSgyKSwgXCJoZXhcIikpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgICAgICAvLyBjb25zdCBjID0gYXdhaXQgcHJvdmlkZXIuY2FsbCh0eCk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGMpXG4gICAgICAgIHJldHVybiB7IHR4SWQsIHR4OiBzaWduZWRUeCB9O1xuICAgIH1cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFNpZ25lcigpLnB1YmxpY0tleTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhlcmV1bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/ethereum.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getTokenConfig)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _arweave_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arweave.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/arweave.js\");\n/* harmony import */ var _erc20_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./erc20.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/erc20.js\");\n/* harmony import */ var _ethereum_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/ethereum.js\");\n/* harmony import */ var _near_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./near.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/near.js\");\n/* harmony import */ var _solana_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./solana.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/solana.js\");\n/* harmony import */ var _algorand_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./algorand.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/algorand.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var _aptos_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./aptos.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/aptos.js\");\n/* harmony import */ var _multiAptos_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./multiAptos.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/multiAptos.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction getTokenConfig(Irys, token, wallet, url, providerUrl, contractAddress, opts) {\n    switch (token) {\n        case \"arweave\":\n            return new _arweave_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n                irys: Irys,\n                name: \"arweave\",\n                ticker: \"AR\",\n                minConfirm: 10,\n                providerUrl: providerUrl ?? \"https://arweave.net\",\n                wallet,\n                isSlow: true,\n                opts,\n            });\n        case \"ethereum\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"ethereum\",\n                ticker: \"ETH\",\n                providerUrl: providerUrl ?? \"https://cloudflare-eth.com/\",\n                wallet,\n                opts,\n            });\n        case \"matic\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"matic\",\n                ticker: \"MATIC\",\n                minConfirm: 1,\n                providerUrl: providerUrl ?? \"https://polygon-rpc.com/\",\n                wallet,\n                opts,\n            });\n        case \"bnb\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"bnb\",\n                ticker: \"BNB\",\n                providerUrl: providerUrl ?? \"https://bsc-dataseed.binance.org/\",\n                wallet,\n                opts,\n            });\n        case \"fantom\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({ irys: Irys, name: \"fantom\", ticker: \"FTM\", providerUrl: providerUrl ?? \"https://rpc.ftm.tools/\", wallet, opts });\n        case \"solana\":\n            return new _solana_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n                irys: Irys,\n                name: \"solana\",\n                ticker: \"SOL\",\n                providerUrl: providerUrl ?? \"https://api.mainnet-beta.solana.com/\",\n                wallet,\n                opts,\n            });\n        case \"avalanche\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"avalanche\",\n                ticker: \"AVAX\",\n                providerUrl: providerUrl ?? \"https://api.avax-test.network/ext/bc/C/rpc/\",\n                wallet,\n                opts,\n            });\n        case \"boba-eth\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"boba-eth\",\n                ticker: \"ETH\",\n                providerUrl: providerUrl ?? \"https://mainnet.boba.network/\",\n                minConfirm: 1,\n                wallet,\n                opts,\n            });\n        case \"boba\": {\n            const k = new _erc20_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                irys: Irys,\n                name: \"boba\",\n                ticker: \"BOBA\",\n                providerUrl: providerUrl ?? \"https://mainnet.boba.network/\",\n                contractAddress: contractAddress ?? \"0xa18bF3994C0Cc6E3b63ac420308E5383f53120D7\",\n                minConfirm: 1,\n                wallet,\n                opts,\n            });\n            // for L1 mainnet: \"https://main-light.eth.linkpool.io/\" and \"0x42bbfa2e77757c645eeaad1655e0911a7553efbc\"\n            k.price = async () => {\n                const res = await axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"].post(\"https://api.livecoinwatch.com/coins/single\", JSON.stringify({ currency: \"USD\", code: `${k.ticker}` }), {\n                    headers: { \"x-api-key\": \"75a7a824-6577-45e6-ad86-511d590c7cc8\", \"content-type\": \"application/json\" },\n                });\n                await _common_utils_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].checkAndThrow(res, \"Getting price data\");\n                if (!res?.data?.rate) {\n                    throw new Error(`unable to get price for ${k.name}`);\n                }\n                return +res.data.rate;\n            };\n            return k;\n        }\n        case \"arbitrum\":\n            return new _ethereum_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: Irys,\n                name: \"arbitrum\",\n                ticker: \"ETH\",\n                providerUrl: providerUrl ?? \"https://arb1.arbitrum.io/rpc/\",\n                wallet,\n                opts,\n            });\n        case \"chainlink\":\n            return new _erc20_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                irys: Irys,\n                name: \"chainlink\",\n                ticker: \"LINK\",\n                providerUrl: providerUrl ?? \"https://main-light.eth.linkpool.io/\",\n                contractAddress: contractAddress ?? \"0x514910771AF9Ca656af840dff83E8264EcF986CA\",\n                wallet,\n                opts,\n            });\n        case \"kyve\": {\n            const k = new _erc20_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                irys: Irys,\n                name: \"kyve\",\n                ticker: \"KYVE\",\n                minConfirm: 0,\n                providerUrl: providerUrl ?? \"https://moonbeam-alpha.api.onfinality.io/public\",\n                contractAddress: contractAddress ?? \"0x3cf97096ccdb7c3a1d741973e351cb97a2ede2c1\",\n                isSlow: true,\n                wallet,\n                opts,\n            });\n            k.price = async () => {\n                return 100;\n            }; // TODO: replace for mainnet\n            k.getGas = async () => {\n                return [new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](100), 1e18];\n            };\n            return k; // TODO: ensure units above are right\n        }\n        case \"near\": {\n            return new _near_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n                irys: Irys,\n                name: \"near\",\n                ticker: \"NEAR\",\n                providerUrl: providerUrl ?? \"https://rpc.mainnet.near.org\",\n                wallet,\n                IrysUrl: url,\n                opts,\n            });\n        }\n        case \"algorand\": {\n            return new _algorand_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                irys: Irys,\n                name: \"algorand\",\n                ticker: \"ALGO\",\n                providerUrl: providerUrl ?? \"https://mainnet-api.algonode.cloud\",\n                wallet,\n                opts: { indexerUrl: \"https://mainnet-idx.algonode.cloud\", ...opts },\n            });\n        }\n        case \"aptos\": {\n            return new _aptos_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n                irys: Irys,\n                name: \"aptos\",\n                ticker: \"APTOS\",\n                providerUrl: providerUrl ?? \"https://fullnode.mainnet.aptoslabs.com\",\n                wallet,\n                opts,\n            });\n        }\n        case \"multiaptos\": {\n            return new _multiAptos_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                irys: Irys,\n                name: \"aptos\",\n                ticker: \"APTOS\",\n                providerUrl: providerUrl ?? \"https://fullnode.mainnet.aptoslabs.com/v1\",\n                wallet,\n                opts,\n            });\n        }\n        default:\n            throw new Error(`Unknown/Unsupported token ${token}`);\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/multiAptos.js":
/*!********************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/multiAptos.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MultiSignatureAptos)\n/* harmony export */ });\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aptos */ \"(ssr)/./node_modules/aptos/dist/index.mjs\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _aptos_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aptos.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/aptos.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n\n\n\n\nclass MultiSignatureAptos extends _aptos_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    collectSignatures;\n    constructor(config) {\n        super(config);\n        this.collectSignatures = this?.opts?.collectSignatures;\n        this.needsFee = true;\n    }\n    /**\n     * @param owner compound MultiEd25519PublicKey .toBytes()\n     */\n    ownerToAddress(pubKey) {\n        // deserialise key\n        const multiSigPublicKey = this.deserialisePubKey(pubKey);\n        // derive address\n        const authKey2 = aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.AuthenticationKey.fromMultiEd25519PublicKey(multiSigPublicKey);\n        return authKey2.derivedAddress().toString();\n    }\n    deserialisePubKey(pubKey) {\n        const threshold = +pubKey.slice(32 * 32).toString();\n        const keys = [];\n        const nullBuf = Buffer.alloc(32, 0);\n        for (let i = 0; i < 32; i++) {\n            const key = pubKey.subarray(i * 32, (i + 1) * 32);\n            if (!key.equals(nullBuf))\n                keys.push(new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519PublicKey(key));\n        }\n        // reconstruct key\n        return new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.MultiEd25519PublicKey(keys, threshold);\n    }\n    getPublicKey() {\n        const { participants, threshold } = this.wallet;\n        const pkey = Buffer.alloc(32 * 32 + 1);\n        participants.forEach((k, i) => {\n            pkey.set(k, i * 32);\n        });\n        pkey.set(Buffer.from(threshold.toString()), 1024);\n        return pkey;\n    }\n    async getFee(amount, to) {\n        const client = await this.getProvider();\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        const builder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderRemoteABI(client, { sender: this.address });\n        const rawTransaction = await builder.build(\"0x1::coin::transfer\", [\"0x1::aptos_coin::AptosCoin\"], [to ?? \"0x149f7dc9c8e43c14ab46d3a6b62cfe84d67668f764277411f98732bf6718acf9\", new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toNumber()]);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const txnBuilder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderEd25519((_signingMessage) => {\n            const invalidSigBytes = new Uint8Array(64);\n            return new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n        }, new Uint8Array(32));\n        const signedSimulation = txnBuilder.sign(rawTransaction);\n        const queryParams = {\n            estimate_gas_unit_price: true,\n            estimate_max_gas_amount: true,\n        };\n        const simulationResult = await client.client.request.request({\n            url: \"/transactions/simulate\",\n            query: queryParams,\n            method: \"POST\",\n            body: signedSimulation,\n            mediaType: \"application/x.aptos.signed_transaction+bcs\",\n        });\n        return { gasUnitPrice: +simulationResult[0].gas_unit_price, maxGasAmount: +simulationResult[0].max_gas_amount };\n    }\n    async createTx(amount, to, fee) {\n        const client = await this.getProvider();\n        const { participants, threshold } = this.wallet;\n        const multiSigPublicKey = new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.MultiEd25519PublicKey(participants.map((v) => new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519PublicKey(v)), threshold);\n        const authKey = aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.AuthenticationKey.fromMultiEd25519PublicKey(multiSigPublicKey);\n        const mutisigAccountAddress = authKey.derivedAddress();\n        const token = new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.TypeTagStruct(aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.StructTag.fromString(\"0x1::aptos_coin::AptosCoin\"));\n        const entryFunctionPayload = new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.TransactionPayloadEntryFunction(aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.EntryFunction.natural(\n        // Fully qualified module name, `AccountAddress::ModuleName`\n        \"0x1::coin\", \n        // Module function\n        \"transfer\", \n        // The coin type to transfer\n        [token], \n        // Arguments for function `transfer`: receiver account address and amount to transfer\n        [aptos__WEBPACK_IMPORTED_MODULE_0__.BCS.bcsToBytes(aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.AccountAddress.fromHex(to)), aptos__WEBPACK_IMPORTED_MODULE_0__.BCS.bcsSerializeUint64(new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toNumber())]));\n        const [{ sequence_number: sequenceNumber }, chainId] = await Promise.all([client.getAccount(mutisigAccountAddress), client.getChainId()]);\n        const rawTx = new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.RawTransaction(\n        // Transaction sender account address\n        aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.AccountAddress.fromHex(mutisigAccountAddress), BigInt(sequenceNumber), entryFunctionPayload, \n        // Max gas unit to spend\n        BigInt(fee?.maxGasAmount ?? 100_00), \n        // Gas price per unit\n        BigInt(fee?.gasUnitPrice ?? 100), \n        // Expiration timestamp. Transaction is discarded if it is not executed within 1000 seconds (16.6 minutes) from now.\n        BigInt(Math.floor(Date.now() / 1000) + 1000), new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.ChainId(chainId));\n        return { tx: rawTx, txId: undefined };\n    }\n    async sendTx(data) {\n        const client = await this.getProvider();\n        const signingMessage = aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilder.getSigningMessage(data);\n        const { signatures, bitmap } = await this.collectSignatures(signingMessage);\n        const txnBuilder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderMultiEd25519((_) => {\n            // Bitmap masks which public key has signed transaction.\n            // See https://aptos-labs.github.io/ts-sdk-doc/classes/TxnBuilderTypes.MultiEd25519Signature.html#createBitmap\n            const encodedBitmap = aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.MultiEd25519Signature.createBitmap(bitmap);\n            // See https://aptos-labs.github.io/ts-sdk-doc/classes/TxnBuilderTypes.MultiEd25519Signature.html#constructor\n            const muliEd25519Sig = new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.MultiEd25519Signature(signatures.map((s) => new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519Signature(s)), encodedBitmap);\n            return muliEd25519Sig;\n        }, this.deserialisePubKey(this.getPublicKey()));\n        const bcsTxn = txnBuilder.sign(data);\n        const txRes = await client.submitSignedBCSTransaction(bcsTxn);\n        return txRes.hash;\n    }\n    getSigner() {\n        if (this.signerInstance)\n            return this.signerInstance;\n        const pkey = Buffer.alloc(1025);\n        const deserKey = this.deserialisePubKey(this.getPublicKey());\n        deserKey.public_keys.forEach((k, i) => {\n            pkey.set(k.value, i * 32);\n        });\n        pkey.set(Buffer.from(deserKey.threshold.toString()), 1024);\n        return (this.signerInstance ??= new arbundles__WEBPACK_IMPORTED_MODULE_3__.MultiSignatureAptosSigner(pkey, this.collectSignatures));\n    }\n    async ready() {\n        await super.ready();\n        this.accountInstance = new aptos__WEBPACK_IMPORTED_MODULE_0__.AptosAccount(undefined, this.address);\n    }\n    async verify(pub, data, signature) {\n        return await arbundles__WEBPACK_IMPORTED_MODULE_3__.MultiSignatureAptosSigner.verify(pub, data, signature);\n    }\n}\n//# sourceMappingURL=multiAptos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/multiAptos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/near.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/near.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NearConfig)\n/* harmony export */ });\n/* harmony import */ var _near_js_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/index.js\");\n/* harmony import */ var _near_js_providers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-js/providers */ \"(ssr)/./node_modules/@near-js/providers/lib/index.js\");\n/* harmony import */ var borsh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/index.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var _near_js_transactions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/index.js\");\n/* harmony import */ var near_seed_phrase__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! near-seed-phrase */ \"(ssr)/./node_modules/near-seed-phrase/index.js\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NearConfig extends _token_js__WEBPACK_IMPORTED_MODULE_5__.BaseNodeToken {\n    keyPair;\n    constructor(config) {\n        let wallet = config.wallet;\n        if (typeof wallet === \"string\" && wallet?.split(\":\")?.[0] !== \"ed25519\") {\n            wallet = (0,near_seed_phrase__WEBPACK_IMPORTED_MODULE_10__.parseSeedPhrase)(wallet, near_seed_phrase__WEBPACK_IMPORTED_MODULE_10__.KEY_DERIVATION_PATH).secretKey;\n        }\n        config.wallet = wallet;\n        super(config);\n        this.base = [\"yoctoNEAR\", 1e24];\n        this.keyPair = _near_js_crypto__WEBPACK_IMPORTED_MODULE_0__.KeyPair.fromString(this.wallet);\n    }\n    async getProvider() {\n        if (!this.providerInstance) {\n            this.providerInstance = new _near_js_providers__WEBPACK_IMPORTED_MODULE_1__.JsonRpcProvider({ url: this.providerUrl });\n        }\n        return this.providerInstance;\n    }\n    /**\n     * NEAR wants both the sender ID and tx Hash, so we have to concatenate to keep with the interface.\n     * @param txId assumes format senderID:txHash\n     */\n    async getTx(txId) {\n        // NOTE: their type defs are out of date with their actual API (23-01-2022)... beware the expect-error when debugging!\n        const provider = await this.getProvider();\n        const [id, hash] = txId.split(\":\");\n        const status = await provider.txStatusReceipts(bs58__WEBPACK_IMPORTED_MODULE_6__.decode(hash), id);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const blockHeight = await provider.block(status.transaction_outcome.block_hash);\n        const latestBlockHeight = (await provider.block({ finality: \"final\" })).header.height;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        if (status.receipts_outcome[0].outcome.status.SuccessValue !== \"\") {\n            throw new Error(\"Transaction failed!\");\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const deposit = status.receipts[0].receipt.Action.actions[0].Transfer.deposit ?? 0;\n        return {\n            from: id,\n            to: status.transaction.receiver_id,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](deposit),\n            blockHeight: new bignumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](blockHeight.header.height),\n            pending: false,\n            confirmed: latestBlockHeight - blockHeight.header.height >= this.minConfirm,\n        };\n    }\n    /**\n     * address = accountID\n     * @param owner // assumed to be the \"ed25519:\" header + b58 encoded key\n     */\n    ownerToAddress(owner) {\n        return Buffer.from(typeof owner === \"string\" ? bs58__WEBPACK_IMPORTED_MODULE_6__.decode(owner.replace(\"ed25519:\", \"\")) : bs58__WEBPACK_IMPORTED_MODULE_6__.decode(bs58__WEBPACK_IMPORTED_MODULE_6__.encode(owner))).toString(\"hex\");\n    }\n    async sign(data) {\n        return this.getSigner().sign(data);\n    }\n    getSigner() {\n        return new arbundles__WEBPACK_IMPORTED_MODULE_3__.NearSigner(this.wallet);\n    }\n    async verify(pub, data, signature) {\n        return arbundles__WEBPACK_IMPORTED_MODULE_3__.NearSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        const provider = await this.getProvider();\n        const res = await provider.status();\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](res.sync_info.latest_block_height);\n    }\n    /**\n     * NOTE: assumes only operation is transfer\n     * @param _amount\n     * @param _to\n     * @returns\n     */\n    async getFee(_amount, _to) {\n        // TODO: use https://docs.near.org/docs/concepts/gas and https://docs.near.org/docs/api/rpc/protocol#genesis-config\n        // to derive cost from genesis config to generalise support.\n        const provider = await this.getProvider();\n        const res = await provider.gasPrice(null); // null == gas price as of latest block\n        // multiply by action cost in gas units (assume only action is transfer)\n        // 4.5x10^11 gas units for fund transfers\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](res.gas_price).multipliedBy(450_000_000_000);\n    }\n    async sendTx(data) {\n        const provider = await this.getProvider();\n        // // hack to fix near SDK issue\n        // we manually encode as due to a lack of node_module flattening, two classes (who are otherwise identical)\n        // are imported from two different locations, meaning JS's equivalency is broken (not the same internal object)\n        // this bypasses this issue by ensuring the class is imported from the \"flat\" version\n        // const res = await provider.sendTransaction(data);\n        const expectedSignedTransactionClass = [..._near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.SCHEMA.keys()].find((c) => c.name === \"SignedTransaction\");\n        data.constructor = expectedSignedTransactionClass;\n        const encodedTransaction = (0,_near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.encodeTransaction)(data);\n        const res = (await provider.sendJsonRpc(\"broadcast_tx_commit\", [Buffer.from(encodedTransaction).toString(\"base64\")]));\n        return `${this.address}:${res.transaction.hash}`; // encode into compound format\n    }\n    async createTx(amount, to, _fee) {\n        const provider = await this.getProvider();\n        const accessKey = await provider.query({\n            request_type: \"view_access_key\",\n            finality: \"final\",\n            account_id: this.address,\n            public_key: this.keyPair.getPublicKey().toString(),\n        });\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const nonce = ++accessKey.nonce;\n        const recentBlockHash = Buffer.from(bs58__WEBPACK_IMPORTED_MODULE_6__.decode(accessKey.block_hash));\n        const actions = [_near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.actionCreators.transfer(new bn_js__WEBPACK_IMPORTED_MODULE_7__(new bignumber_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](amount).toFixed().toString()))];\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        const tx = (0,_near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.createTransaction)(this.address, this.keyPair.getPublicKey(), to, nonce, actions, recentBlockHash);\n        // hack to fix near SDK issue\n        const expectedPublicKeyClass = [..._near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.SCHEMA.keys()].find((c) => c.name === \"PublicKey\");\n        tx.publicKey.constructor = expectedPublicKeyClass;\n        const serialTx = (0,borsh__WEBPACK_IMPORTED_MODULE_2__.serialize)(_near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.SCHEMA, tx);\n        const serialTxHash = new Uint8Array(js_sha256__WEBPACK_IMPORTED_MODULE_8__.sha256.array(serialTx));\n        const signature = this.keyPair.sign(serialTxHash);\n        const signedTx = new _near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.SignedTransaction({\n            transaction: tx,\n            signature: new _near_js_transactions__WEBPACK_IMPORTED_MODULE_9__.Signature({\n                keyType: tx.publicKey.keyType,\n                data: signature.signature,\n            }),\n        });\n        return { tx: signedTx, txId: undefined };\n    }\n    getPublicKey() {\n        this.keyPair = _near_js_crypto__WEBPACK_IMPORTED_MODULE_0__.KeyPair.fromString(this.wallet);\n        return Buffer.from(this.keyPair.getPublicKey().data);\n    }\n    async ready() {\n        try {\n            // resolve loaded pubkey to parent address\n            const pubkey = this.keyPair.getPublicKey().toString();\n            const resolved = (await axios__WEBPACK_IMPORTED_MODULE_12__[\"default\"].get(`${this.IrysUrl}account/near/lookup?address=${base64url__WEBPACK_IMPORTED_MODULE_11__.encode(pubkey.split(\":\")[1])}`).catch((e) => {\n                return e;\n            }));\n            this._address = resolved?.data?.address ?? this._address;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n//# sourceMappingURL=near.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/near.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/solana.js":
/*!****************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/tokens/solana.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SolanaConfig)\n/* harmony export */ });\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/node/token.js\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n\n\n\n\n\nclass SolanaConfig extends _token_js__WEBPACK_IMPORTED_MODULE_4__.BaseNodeToken {\n    minConfirm = 1;\n    constructor(config) {\n        super(config);\n        this.base = [\"lamports\", 1e9];\n    }\n    async getProvider() {\n        if (!this.providerInstance) {\n            this.providerInstance = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.Connection(this.providerUrl, {\n                confirmTransactionInitialTimeout: 60_000,\n                commitment: \"confirmed\",\n            });\n        }\n        return this.providerInstance;\n    }\n    getKeyPair() {\n        let key = this.wallet;\n        if (typeof key !== \"string\") {\n            key = bs58__WEBPACK_IMPORTED_MODULE_2__.encode(Buffer.from(key));\n        }\n        return _solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.Keypair.fromSecretKey(bs58__WEBPACK_IMPORTED_MODULE_2__.decode(key));\n    }\n    async getTx(txId) {\n        const connection = await this.getProvider();\n        const stx = await connection.getTransaction(txId, { commitment: \"confirmed\" });\n        if (!stx)\n            throw new Error(\"Confirmed tx not found\");\n        const currentSlot = await connection.getSlot(\"confirmed\");\n        if (!stx.meta)\n            throw new Error(`Unable to resolve transaction ${txId}`);\n        const amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.meta.postBalances[1]).minus(new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.meta.preBalances[1]));\n        const tx = {\n            from: stx.transaction.message.accountKeys[0].toBase58(),\n            to: stx.transaction.message.accountKeys[1].toBase58(),\n            amount: amount,\n            blockHeight: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.slot),\n            pending: false,\n            confirmed: currentSlot - stx.slot >= 1,\n        };\n        return tx;\n    }\n    ownerToAddress(owner) {\n        return bs58__WEBPACK_IMPORTED_MODULE_2__.encode(owner);\n    }\n    async sign(data) {\n        return await (await this.getSigner()).sign(data);\n    }\n    getSigner() {\n        const keyp = this.getKeyPair();\n        const keypb = bs58__WEBPACK_IMPORTED_MODULE_2__.encode(Buffer.concat([Buffer.from(keyp.secretKey), keyp.publicKey.toBuffer()]));\n        return new arbundles__WEBPACK_IMPORTED_MODULE_0__.SolanaSigner(keypb);\n    }\n    verify(pub, data, signature) {\n        return arbundles__WEBPACK_IMPORTED_MODULE_0__.SolanaSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]((await (await this.getProvider()).getEpochInfo()).blockHeight ?? 0);\n    }\n    async getFee(_amount, _to) {\n        // const connection = await this.getProvider()\n        // const block = await connection.getRecentBlockhash();\n        // const feeCalc = await connection.getFeeCalculatorForBlockhash(\n        //     block.blockhash,\n        // );\n        // return new BigNumber(feeCalc.value.lamportsPerSignature);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](5000); // hardcode it for now\n    }\n    async sendTx(data) {\n        const connection = await this.getProvider();\n        try {\n            return await (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.sendAndConfirmTransaction)(connection, data, [this.getKeyPair()], { commitment: \"confirmed\" });\n        }\n        catch (e) {\n            if (e.message.includes(\"30.\")) {\n                const txId = e.message.match(/[A-Za-z0-9]{87,88}/g);\n                if (!txId)\n                    throw e;\n                try {\n                    const conf = await connection.confirmTransaction(txId[0], \"confirmed\");\n                    if (conf)\n                        return undefined;\n                    throw {\n                        message: e.message,\n                        txId: txId[0],\n                    };\n                }\n                catch (e) {\n                    throw {\n                        message: e.message,\n                        txId: txId[0],\n                    };\n                }\n            }\n            throw e;\n        }\n    }\n    async createTx(amount, to, _fee) {\n        // TODO: figure out how to manually set fees\n        const keys = this.getKeyPair();\n        const blockHashInfo = await async_retry__WEBPACK_IMPORTED_MODULE_5__(async (bail) => {\n            try {\n                return await (await this.getProvider()).getRecentBlockhash();\n            }\n            catch (e) {\n                if (e.message?.includes(\"blockhash\"))\n                    throw e;\n                else\n                    bail(e);\n                throw new Error(\"Unreachable\");\n            }\n        }, { retries: 3, minTimeout: 1000 });\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.Transaction({ recentBlockhash: blockHashInfo.blockhash, feePayer: keys.publicKey });\n        transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.SystemProgram.transfer({\n            fromPubkey: keys.publicKey,\n            toPubkey: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_6__.PublicKey(to),\n            lamports: +new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toNumber(),\n        }));\n        const transactionBuffer = transaction.serializeMessage();\n        const signature = tweetnacl__WEBPACK_IMPORTED_MODULE_3__.sign.detached(transactionBuffer, keys.secretKey);\n        transaction.addSignature(keys.publicKey, Buffer.from(signature));\n        return { tx: transaction, txId: undefined };\n    }\n    getPublicKey() {\n        const key = this.getKeyPair();\n        return key.publicKey.toBuffer();\n    }\n}\n//# sourceMappingURL=solana.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/tokens/solana.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/upload.js":
/*!*********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/upload.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkPath: () => (/* binding */ checkPath),\n/* harmony export */   \"default\": () => (/* binding */ NodeUploader)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var _common_upload_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/upload.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/upload.js\");\n/* harmony import */ var mime_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mime-types */ \"(ssr)/./node_modules/mime-types/index.js\");\n/* harmony import */ var inquirer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! inquirer */ \"(ssr)/./node_modules/inquirer/lib/inquirer.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var csv_parse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! csv-parse */ \"(ssr)/./node_modules/csv-parse/lib/index.js\");\n/* harmony import */ var csv_stringify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! csv-stringify */ \"(ssr)/./node_modules/csv-stringify/lib/index.js\");\n\n\n\n\n\n\n\n\nconst checkPath = async (path) => {\n    return fs__WEBPACK_IMPORTED_MODULE_0__.promises\n        .stat(path)\n        .then((_) => true)\n        .catch((_) => false);\n};\nclass NodeUploader extends _common_upload_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(api, utils, token, tokenConfig, irysTx) {\n        super(api, utils, token, tokenConfig, irysTx);\n    }\n    /**\n     * Uploads a file to the bundler\n     * @param path to the file to be uploaded\n     * @returns the response from the bundler\n     */\n    async uploadFile(path, opts) {\n        if (!(await fs__WEBPACK_IMPORTED_MODULE_0__.promises\n            .stat(path)\n            .then((_) => true)\n            .catch((_) => false))) {\n            throw new Error(`Unable to access path: ${path}`);\n        }\n        // don't add Content-type tag if it already exists\n        const hasContentTypeTag = opts?.tags && opts.tags.some((t) => t.name.toLowerCase() === \"content-type\");\n        const mimeType = mime_types__WEBPACK_IMPORTED_MODULE_2__.contentType(mime_types__WEBPACK_IMPORTED_MODULE_2__.lookup(path) || \"application/octet-stream\");\n        (opts ??= {}).tags = hasContentTypeTag\n            ? opts.tags\n            : [{ name: \"Content-Type\", value: this.contentTypeOverride ?? mimeType }, ...(opts?.tags ?? [])];\n        const data = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(path);\n        return await this.uploadData(data, opts);\n    }\n    async *walk(dir) {\n        for await (const d of await fs__WEBPACK_IMPORTED_MODULE_0__.promises.opendir(dir)) {\n            const entry = (0,path__WEBPACK_IMPORTED_MODULE_5__.join)(dir, d.name);\n            if (d.isDirectory())\n                yield* await this.walk(entry);\n            else if (d.isFile())\n                yield entry;\n        }\n    }\n    /**\n     * Preprocessor for folder uploads, ensures the rest of the system has a correct operating environment.\n     * @param path - path to the folder to be uploaded\n     * @param indexFile - path to the index file (i.e index.html)\n     * @param batchSize - number of items to upload concurrently\n     * @param interactivePreflight - whether to interactively prompt the user for confirmation of upload (CLI ONLY)\n     * @param keepDeleted - Whether to keep previously uploaded (but now deleted) files in the manifest\n     * @param logFunction - for handling logging from the uploader for UX\n     * @returns\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async uploadFolder(path, { batchSize = 10, keepDeleted = true, indexFile, interactivePreflight, logFunction, manifestTags, itemOptions, } = { batchSize: 10, keepDeleted: true }) {\n        path = (0,path__WEBPACK_IMPORTED_MODULE_5__.resolve)(path);\n        const alreadyProcessed = new Map();\n        const receiptTxs = new Map();\n        if (!(await checkPath(path))) {\n            throw new Error(`Unable to access path: ${path}`);\n        }\n        // fallback to console.log if no logging function is given and interactive preflight is on.\n        if (!logFunction && interactivePreflight) {\n            logFunction = async (log) => {\n                console.log(log);\n            };\n        }\n        else if (!logFunction) {\n            // blackhole logs\n            logFunction = async (_) => {\n                return;\n            };\n        }\n        // manifest with folder name placed in parent directory of said folder - keeps contamination down.\n        const manifestPath = (0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-manifest.csv`);\n        const csvHeader = \"path,id,receipt\\n\";\n        if (await checkPath(manifestPath)) {\n            const rstrm = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(manifestPath);\n            // check if empty\n            if ((await fs__WEBPACK_IMPORTED_MODULE_0__.promises.stat(manifestPath)).size === 0) {\n                await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(manifestPath, csvHeader);\n            }\n            // validate header\n            await new Promise((res) => {\n                (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(manifestPath).once(\"data\", async (d) => {\n                    const fl = d.toString().split(\"\\n\")[0];\n                    if (`${fl}\\n` !== csvHeader) {\n                        await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(manifestPath, csvHeader);\n                    }\n                    res(d);\n                });\n            });\n            const csvStream = stream__WEBPACK_IMPORTED_MODULE_4__.Readable.from(rstrm.pipe(csv_parse__WEBPACK_IMPORTED_MODULE_6__({ delimiter: \",\", columns: true })));\n            for await (const record of csvStream) {\n                record;\n                if (record.path && record.id) {\n                    alreadyProcessed.set(record.path, record.id);\n                    receiptTxs.set(record.path, JSON.parse(record.receipt));\n                }\n            }\n        }\n        else {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(manifestPath, csvHeader);\n        }\n        const files = [];\n        let total = 0;\n        let i = 0;\n        for await (const f of this.walk(path)) {\n            const relPath = (0,path__WEBPACK_IMPORTED_MODULE_5__.relative)(path, f);\n            if (!alreadyProcessed.has(relPath)) {\n                files.push(f);\n                total += (await fs__WEBPACK_IMPORTED_MODULE_0__.promises.stat(f)).size;\n            }\n            else {\n                alreadyProcessed.delete(relPath);\n            }\n            if (++i % batchSize == 0) {\n                logFunction(`Checked ${i} files...`);\n            }\n        }\n        if (!keepDeleted) {\n            alreadyProcessed.clear();\n        }\n        // pass as param otherwise it thinks logFunction can be undef\n        const uploadManifest = async (logFunction) => {\n            // generate JSON\n            await logFunction(\"Generating JSON manifest...\");\n            const jsonManifestPath = await this.generateManifestFromCsv(path, alreadyProcessed, indexFile);\n            // upload the manifest\n            await logFunction(\"Uploading JSON manifest...\");\n            const tags = [\n                { name: \"Type\", value: \"manifest\" },\n                { name: \"Content-Type\", value: \"application/x.arweave-manifest+json\" },\n                ...(manifestTags ?? []),\n            ];\n            const mres = await this.uploadData((0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(jsonManifestPath), { tags }).catch((e) => {\n                throw new Error(`Failed to upload manifest: ${e.message}`);\n            });\n            await logFunction(\"Done!\");\n            if (mres?.id) {\n                await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile((0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-id.txt`), JSON.stringify(mres));\n            }\n            else {\n                throw new Error(`Unable to get upload ID! ${JSON.stringify(mres)}`);\n            }\n            return mres;\n        };\n        // TODO: add logic to detect changes (MD5/other hash)\n        if (files.length == 0 && alreadyProcessed.size === 0) {\n            logFunction(\"No items to process\");\n            // return the txID of the upload\n            const idpath = (0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-id.txt`);\n            if (await checkPath(idpath)) {\n                return JSON.parse(await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(idpath, \"utf-8\"));\n            }\n            // assume manifest wasn't uploaded\n            return await uploadManifest(logFunction);\n        }\n        // const zprice = (await this.utils.getPrice(this.currency, 0)).multipliedBy(files.length);\n        // const price = (await this.utils.getPrice(this.currency, total)).plus(zprice).toFixed(0);\n        const price = await this.utils.estimateFolderPrice({ fileCount: files.length, totalBytes: total });\n        if (interactivePreflight) {\n            if (!(await confirmation(`Authorize upload?\\nTotal amount of data: ${total} bytes over ${files.length} files - cost: ${price} ${this.tokenConfig.base[0]} (${this.utils.fromAtomic(price).toFixed()} ${this.token})\\n Y / N`))) {\n                throw new Error(\"Confirmation failed\");\n            }\n        }\n        const stringifier = csv_stringify__WEBPACK_IMPORTED_MODULE_7__({\n            header: false,\n            columns: {\n                path: \"path\",\n                id: \"id\",\n                receipt: \"receipt\",\n            },\n        });\n        const wstrm = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createWriteStream)(manifestPath, { flags: \"a+\" });\n        stringifier.pipe(wstrm);\n        const processor = async (data) => {\n            if (data?.res?.id) {\n                const receipt = data.res.signature\n                    ? {\n                        id: data.res.id,\n                        block: data.res.block,\n                        deadlineHeight: data.res.deadlineHeight,\n                        public: data.res.public,\n                        signature: data.res.signature,\n                        timestamp: data.res.timestamp,\n                        validatorSignatures: data.res.validatorSignatures,\n                        version: data.res.version,\n                    }\n                    : {};\n                receiptTxs.set((0,path__WEBPACK_IMPORTED_MODULE_5__.relative)(path, data.item), receipt);\n                stringifier.write([(0,path__WEBPACK_IMPORTED_MODULE_5__.relative)(path, data.item), data.res.id, JSON.stringify(receipt)]);\n            }\n        };\n        const processingResults = await this.concurrentUploader(files, {\n            concurrency: batchSize,\n            resultProcessor: processor,\n            logFunction,\n            itemOptions,\n        });\n        if (processingResults.errors.length > 0) {\n            await logFunction(`${processingResults.errors.length} Errors detected, skipping manifest upload...`);\n            const ewstrm = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createWriteStream)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-errors.txt`), { flags: \"a+\" });\n            ewstrm.write(`Errors from upload at ${new Date().toString()}:\\n`);\n            processingResults.errors.forEach((e) => ewstrm.write(`${e?.stack ?? JSON.stringify(e)}\\n`));\n            await new Promise((res) => ewstrm.close(res));\n            throw new Error(`${processingResults.errors.length} Errors detected - check ${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-errors.txt for more information.`);\n        }\n        await logFunction(`Finished processing ${files.length} Items`);\n        await new Promise((r) => wstrm.close(r));\n        return await uploadManifest(logFunction);\n    }\n    /**\n     * processes an item to convert it into a DataItem, and then uploads it.\n     * @param item can be a string value, a path to a file, a Buffer of data or a DataItem\n     * @returns A dataItem\n     */\n    async processItem(item, opts) {\n        if (this.arbundles.DataItem.isDataItem(item)) {\n            return this.uploadTransaction(item, { ...opts?.upload });\n        }\n        let tags;\n        if (typeof item === \"string\") {\n            if (await checkPath(item)) {\n                const mimeType = mime_types__WEBPACK_IMPORTED_MODULE_2__.contentType(mime_types__WEBPACK_IMPORTED_MODULE_2__.lookup(item) || \"application/octet-stream\");\n                tags = [{ name: \"Content-Type\", value: this.contentTypeOverride ?? mimeType }];\n                // returnVal = item;\n                item = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(item);\n            }\n            else {\n                item = Buffer.from(item);\n                if (this.contentTypeOverride) {\n                    tags = [{ name: \"Content-Type\", value: this.contentTypeOverride }];\n                }\n            }\n        }\n        return this.uploadData(item, { ...opts, tags: [...tags, ...(opts?.tags ?? [])] });\n    }\n    /**\n     * Stream-based CSV parser and JSON assembler\n     * @param path base path of the upload\n     * @param indexFile optional path to an index file\n     * @returns the path to the generated manifest\n     */\n    async generateManifestFromCsv(path, nowRemoved, indexFile) {\n        const csvstrm = csv_parse__WEBPACK_IMPORTED_MODULE_6__({ delimiter: \",\", columns: true });\n        const csvPath = (0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-manifest.csv`);\n        const manifestPath = (0,path__WEBPACK_IMPORTED_MODULE_5__.join)((0,path__WEBPACK_IMPORTED_MODULE_5__.join)(path, `${path__WEBPACK_IMPORTED_MODULE_5__.sep}..`), `${(0,path__WEBPACK_IMPORTED_MODULE_5__.basename)(path)}-manifest.json`);\n        const wstrm = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createWriteStream)(manifestPath, { flags: \"w+\" });\n        (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(csvPath).pipe(csvstrm); // pipe csv\n        /* eslint-disable quotes */\n        // \"header\"\n        wstrm.write(`{\\n\"manifest\": \"arweave/paths\",\\n\"version\": \"0.1.0\",\\n\"paths\": {\\n`);\n        const csvs = stream__WEBPACK_IMPORTED_MODULE_4__.Readable.from(csvstrm);\n        let firstValue = true;\n        for await (const d of csvs) {\n            if (nowRemoved?.has(d.path)) {\n                nowRemoved.delete(d.path);\n                continue;\n            }\n            const prefix = firstValue ? \"\" : \",\\n\";\n            wstrm.write(`${prefix}\"${d.path.replaceAll(\"\\\\\", \"/\")}\":{\"id\":\"${d.id}\"}`);\n            firstValue = false;\n        }\n        // \"trailer\"\n        wstrm.write(`\\n}`);\n        // add index\n        if (indexFile) {\n            wstrm.write(`,\\n\"index\":{\"path\":\"${indexFile.replaceAll(\"\\\\\", \"/\")}\"}`);\n        }\n        wstrm.write(`\\n}`);\n        await new Promise((r) => wstrm.close(r));\n        return manifestPath;\n    }\n}\nasync function confirmation(message) {\n    const answers = await inquirer__WEBPACK_IMPORTED_MODULE_3__.prompt([{ type: \"input\", name: \"confirmation\", message }]);\n    return answers.confirmation.toLowerCase() == \"y\";\n}\n//# sourceMappingURL=upload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/node/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/node/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arweave: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.Arweave),\n/* harmony export */   DataItem: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.DataItem),\n/* harmony export */   bundleAndSignData: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.bundleAndSignData),\n/* harmony export */   createData: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.createData),\n/* harmony export */   deepHash: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.deepHash),\n/* harmony export */   getCryptoDriver: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.getCryptoDriver),\n/* harmony export */   stringToBuffer: () => (/* reexport safe */ arbundles_node__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)\n/* harmony export */ });\n/* harmony import */ var arbundles_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles/node */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n\n\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTZIO0FBQ3RCO0FBQ3ZHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS9ub2RlL3V0aWxzLmpzPzhkMDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRGF0YSwgRGF0YUl0ZW0sIGRlZXBIYXNoLCBzdHJpbmdUb0J1ZmZlciwgZ2V0Q3J5cHRvRHJpdmVyLCBidW5kbGVBbmRTaWduRGF0YSwgQXJ3ZWF2ZSB9IGZyb20gXCJhcmJ1bmRsZXMvbm9kZVwiO1xuZXhwb3J0IHsgY3JlYXRlRGF0YSwgRGF0YUl0ZW0sIGRlZXBIYXNoLCBzdHJpbmdUb0J1ZmZlciwgZ2V0Q3J5cHRvRHJpdmVyLCBidW5kbGVBbmRTaWduRGF0YSwgQXJ3ZWF2ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/node/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/irys.js":
/*!******************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/irys.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebIrys: () => (/* binding */ WebIrys),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_hack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/hack.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/hack.js\");\n/* harmony import */ var _common_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/api.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/api.js\");\n/* harmony import */ var _common_fund_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/fund.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/fund.js\");\n/* harmony import */ var _common_irys_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/irys.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/irys.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var _tokens_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tokens/index.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/index.js\");\n/* harmony import */ var _common_provenance_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/provenance.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/provenance.js\");\n/* harmony import */ var _common_transactions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/transactions.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/transactions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/utils.js\");\n/* harmony import */ var _upload_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./upload.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/upload.js\");\n\n\n\n\n\n\n\n\n\n\nclass WebIrys extends _common_irys_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n    tokenConfig;\n    uploader;\n    uploadFolder;\n    uploadFile;\n    constructor({ url, token, wallet, config, }) {\n        switch (url) {\n            case undefined:\n            case \"node1\":\n                url = \"https://node1.irys.xyz\";\n                break;\n            case \"node2\":\n                url = \"https://node2.irys.xyz\";\n                break;\n            case \"devnet\":\n                url = \"https://devnet.irys.xyz\";\n                break;\n        }\n        const parsed = new URL(url);\n        // @ts-expect-error types\n        super({ url: parsed, arbundles: _utils_js__WEBPACK_IMPORTED_MODULE_8__ });\n        this.api = new _common_api_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            url: parsed,\n            timeout: config?.timeout ?? 100000,\n            headers: config?.headers,\n        });\n        this.tokenConfig = (0,_tokens_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n            irys: this,\n            token: token.toLowerCase(),\n            wallet: wallet?.provider,\n            providerUrl: config?.providerUrl ?? wallet?.rpcUrl,\n            contractAddress: config?.contractAddress,\n            providerName: wallet?.name,\n        });\n        this.token = this.tokenConfig.name;\n        if (parsed.host === \"devnet.irys.network\" && !(config?.providerUrl ?? (wallet?.rpcUrl || this.tokenConfig.inheritsRPC)))\n            throw new Error(`Using ${parsed.host} requires a dev/testnet RPC to be configured! see https://docs.irys.network/sdk/using-devnet`);\n        this.utils = new _common_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.api, this.token, this.tokenConfig);\n        this.uploader = new _upload_js__WEBPACK_IMPORTED_MODULE_9__.WebUploader(this);\n        this.funder = new _common_fund_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.utils);\n        this.uploader = new _upload_js__WEBPACK_IMPORTED_MODULE_9__.WebUploader(this);\n        this.provenance = new _common_provenance_js__WEBPACK_IMPORTED_MODULE_6__.Provenance(this);\n        this.transactions = new _common_transactions_js__WEBPACK_IMPORTED_MODULE_7__.Transaction(this);\n        this.address = \"Please run `await Irys.ready()`\";\n        this.uploadFolder = this.uploader.uploadFolder.bind(this.uploader);\n        this.uploadFile = this.uploader.uploadFile.bind(this.uploader);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebIrys);\n//# sourceMappingURL=irys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvaXJ5cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBMkI7QUFDUTtBQUNFO0FBQ0E7QUFDRTtBQUNRO0FBQ007QUFDRztBQUNoQjtBQUNFO0FBQ25DLHNCQUFzQix1REFBSTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0IsMENBQUU7QUFDeEMsdUJBQXVCLHNEQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwyQkFBMkIsNERBQWM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUMsYUFBYTtBQUNsRCx5QkFBeUIsd0RBQUs7QUFDOUIsNEJBQTRCLG1EQUFXO0FBQ3ZDLDBCQUEwQix1REFBSTtBQUM5Qiw0QkFBNEIsbURBQVc7QUFDdkMsOEJBQThCLDZEQUFVO0FBQ3hDLGdDQUFnQyxnRUFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsT0FBTyxFQUFDO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvaXJ5cy5qcz82ZmFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NvbW1vbi9oYWNrLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21tb24vYXBpLmpzXCI7XG5pbXBvcnQgRnVuZCBmcm9tIFwiLi4vY29tbW9uL2Z1bmQuanNcIjtcbmltcG9ydCBJcnlzIGZyb20gXCIuLi9jb21tb24vaXJ5cy5qc1wiO1xuaW1wb3J0IFV0aWxzIGZyb20gXCIuLi9jb21tb24vdXRpbHMuanNcIjtcbmltcG9ydCBnZXRUb2tlbkNvbmZpZyBmcm9tIFwiLi90b2tlbnMvaW5kZXguanNcIjtcbmltcG9ydCB7IFByb3ZlbmFuY2UgfSBmcm9tIFwiLi4vY29tbW9uL3Byb3ZlbmFuY2UuanNcIjtcbmltcG9ydCB7IFRyYW5zYWN0aW9uIH0gZnJvbSBcIi4uL2NvbW1vbi90cmFuc2FjdGlvbnMuanNcIjtcbmltcG9ydCAqIGFzIGFyYnVuZGxlcyBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgV2ViVXBsb2FkZXIgfSBmcm9tIFwiLi91cGxvYWQuanNcIjtcbmV4cG9ydCBjbGFzcyBXZWJJcnlzIGV4dGVuZHMgSXJ5cyB7XG4gICAgdG9rZW5Db25maWc7XG4gICAgdXBsb2FkZXI7XG4gICAgdXBsb2FkRm9sZGVyO1xuICAgIHVwbG9hZEZpbGU7XG4gICAgY29uc3RydWN0b3IoeyB1cmwsIHRva2VuLCB3YWxsZXQsIGNvbmZpZywgfSkge1xuICAgICAgICBzd2l0Y2ggKHVybCkge1xuICAgICAgICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICBjYXNlIFwibm9kZTFcIjpcbiAgICAgICAgICAgICAgICB1cmwgPSBcImh0dHBzOi8vbm9kZTEuaXJ5cy54eXpcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJub2RlMlwiOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiaHR0cHM6Ly9ub2RlMi5pcnlzLnh5elwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImRldm5ldFwiOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiaHR0cHM6Ly9kZXZuZXQuaXJ5cy54eXpcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXJzZWQgPSBuZXcgVVJMKHVybCk7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZXNcbiAgICAgICAgc3VwZXIoeyB1cmw6IHBhcnNlZCwgYXJidW5kbGVzIH0pO1xuICAgICAgICB0aGlzLmFwaSA9IG5ldyBBcGkoe1xuICAgICAgICAgICAgdXJsOiBwYXJzZWQsXG4gICAgICAgICAgICB0aW1lb3V0OiBjb25maWc/LnRpbWVvdXQgPz8gMTAwMDAwLFxuICAgICAgICAgICAgaGVhZGVyczogY29uZmlnPy5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b2tlbkNvbmZpZyA9IGdldFRva2VuQ29uZmlnKHtcbiAgICAgICAgICAgIGlyeXM6IHRoaXMsXG4gICAgICAgICAgICB0b2tlbjogdG9rZW4udG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgIHdhbGxldDogd2FsbGV0Py5wcm92aWRlcixcbiAgICAgICAgICAgIHByb3ZpZGVyVXJsOiBjb25maWc/LnByb3ZpZGVyVXJsID8/IHdhbGxldD8ucnBjVXJsLFxuICAgICAgICAgICAgY29udHJhY3RBZGRyZXNzOiBjb25maWc/LmNvbnRyYWN0QWRkcmVzcyxcbiAgICAgICAgICAgIHByb3ZpZGVyTmFtZTogd2FsbGV0Py5uYW1lLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b2tlbiA9IHRoaXMudG9rZW5Db25maWcubmFtZTtcbiAgICAgICAgaWYgKHBhcnNlZC5ob3N0ID09PSBcImRldm5ldC5pcnlzLm5ldHdvcmtcIiAmJiAhKGNvbmZpZz8ucHJvdmlkZXJVcmwgPz8gKHdhbGxldD8ucnBjVXJsIHx8IHRoaXMudG9rZW5Db25maWcuaW5oZXJpdHNSUEMpKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVXNpbmcgJHtwYXJzZWQuaG9zdH0gcmVxdWlyZXMgYSBkZXYvdGVzdG5ldCBSUEMgdG8gYmUgY29uZmlndXJlZCEgc2VlIGh0dHBzOi8vZG9jcy5pcnlzLm5ldHdvcmsvc2RrL3VzaW5nLWRldm5ldGApO1xuICAgICAgICB0aGlzLnV0aWxzID0gbmV3IFV0aWxzKHRoaXMuYXBpLCB0aGlzLnRva2VuLCB0aGlzLnRva2VuQ29uZmlnKTtcbiAgICAgICAgdGhpcy51cGxvYWRlciA9IG5ldyBXZWJVcGxvYWRlcih0aGlzKTtcbiAgICAgICAgdGhpcy5mdW5kZXIgPSBuZXcgRnVuZCh0aGlzLnV0aWxzKTtcbiAgICAgICAgdGhpcy51cGxvYWRlciA9IG5ldyBXZWJVcGxvYWRlcih0aGlzKTtcbiAgICAgICAgdGhpcy5wcm92ZW5hbmNlID0gbmV3IFByb3ZlbmFuY2UodGhpcyk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25zID0gbmV3IFRyYW5zYWN0aW9uKHRoaXMpO1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSBcIlBsZWFzZSBydW4gYGF3YWl0IElyeXMucmVhZHkoKWBcIjtcbiAgICAgICAgdGhpcy51cGxvYWRGb2xkZXIgPSB0aGlzLnVwbG9hZGVyLnVwbG9hZEZvbGRlci5iaW5kKHRoaXMudXBsb2FkZXIpO1xuICAgICAgICB0aGlzLnVwbG9hZEZpbGUgPSB0aGlzLnVwbG9hZGVyLnVwbG9hZEZpbGUuYmluZCh0aGlzLnVwbG9hZGVyKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBXZWJJcnlzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXJ5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/irys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv5.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv5.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumEthersV5: () => (/* binding */ EthereumEthersV5)\n/* harmony export */ });\n/* harmony import */ var _tokens_ethereum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tokens/ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js\");\n\nclass EthereumEthersV5 extends _tokens_ethereum_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n}\n//# sourceMappingURL=ethersv5.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvcHJvdmlkZXJzL2V0aGVyZXVtL2V0aGVyc3Y1LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBQy9DLCtCQUErQiwyREFBYztBQUNwRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvcHJvdmlkZXJzL2V0aGVyZXVtL2V0aGVyc3Y1LmpzPzM4MjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV0aGVyZXVtQ29uZmlnIGZyb20gXCIuLi8uLi90b2tlbnMvZXRoZXJldW0uanNcIjtcbmV4cG9ydCBjbGFzcyBFdGhlcmV1bUV0aGVyc1Y1IGV4dGVuZHMgRXRoZXJldW1Db25maWcge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXRoZXJzdjUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv5.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv6.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv6.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumEthersV6: () => (/* binding */ EthereumEthersV6)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _tokens_ethereum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tokens/ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js\");\n\n\nclass EthereumEthersV6 extends _tokens_ethereum_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    async createTx(amount, to, _fee) {\n        const signer = this.w3signer;\n        const tx = { to, from: this.address, value: amount.toString(), gasLimit: BigInt(0) };\n        const estimatedGas = await this.provider.estimateGas(tx);\n        tx.gasLimit = estimatedGas;\n        const txr = await signer.populateTransaction(tx);\n        return { tx: txr, txId: undefined };\n    }\n    async getTx(txId) {\n        const provider = this.provider;\n        const response = await provider.getTransaction(txId);\n        if (!response)\n            throw new Error(\"Tx doesn't exist\");\n        if (!response.to)\n            throw new Error(`Unable to resolve transactions ${txId} receiver`);\n        return {\n            from: response.from,\n            to: response.to,\n            blockHeight: response.blockNumber ? new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.blockNumber) : undefined,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.value.toString()),\n            pending: response.blockNumber ? false : true,\n            confirmed: (await response.confirmations()) >= this.minConfirm,\n        };\n    }\n    async ready() {\n        const provider = this.wallet;\n        this.provider = provider;\n        const signer = await provider.getSigner();\n        signer._signTypedData = async (domain, types, value) => signer.signTypedData(domain, types, value);\n        // @ts-expect-error fix\n        provider.getSigner = () => signer;\n        // @ts-expect-error fix\n        this.wallet = provider;\n        await super.ready();\n    }\n}\n//# sourceMappingURL=ethersv6.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvcHJvdmlkZXJzL2V0aGVyZXVtL2V0aGVyc3Y2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNpQjtBQUMvQywrQkFBK0IsMkRBQWM7QUFDcEQ7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsTUFBTTtBQUNwRTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsb0RBQVM7QUFDN0Qsd0JBQXdCLG9EQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL3dlYi9wcm92aWRlcnMvZXRoZXJldW0vZXRoZXJzdjYuanM/NDVkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIjtcbmltcG9ydCBFdGhlcmV1bUNvbmZpZyBmcm9tIFwiLi4vLi4vdG9rZW5zL2V0aGVyZXVtLmpzXCI7XG5leHBvcnQgY2xhc3MgRXRoZXJldW1FdGhlcnNWNiBleHRlbmRzIEV0aGVyZXVtQ29uZmlnIHtcbiAgICBhc3luYyBjcmVhdGVUeChhbW91bnQsIHRvLCBfZmVlKSB7XG4gICAgICAgIGNvbnN0IHNpZ25lciA9IHRoaXMudzNzaWduZXI7XG4gICAgICAgIGNvbnN0IHR4ID0geyB0bywgZnJvbTogdGhpcy5hZGRyZXNzLCB2YWx1ZTogYW1vdW50LnRvU3RyaW5nKCksIGdhc0xpbWl0OiBCaWdJbnQoMCkgfTtcbiAgICAgICAgY29uc3QgZXN0aW1hdGVkR2FzID0gYXdhaXQgdGhpcy5wcm92aWRlci5lc3RpbWF0ZUdhcyh0eCk7XG4gICAgICAgIHR4Lmdhc0xpbWl0ID0gZXN0aW1hdGVkR2FzO1xuICAgICAgICBjb25zdCB0eHIgPSBhd2FpdCBzaWduZXIucG9wdWxhdGVUcmFuc2FjdGlvbih0eCk7XG4gICAgICAgIHJldHVybiB7IHR4OiB0eHIsIHR4SWQ6IHVuZGVmaW5lZCB9O1xuICAgIH1cbiAgICBhc3luYyBnZXRUeCh0eElkKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gdGhpcy5wcm92aWRlcjtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwcm92aWRlci5nZXRUcmFuc2FjdGlvbih0eElkKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR4IGRvZXNuJ3QgZXhpc3RcIik7XG4gICAgICAgIGlmICghcmVzcG9uc2UudG8pXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byByZXNvbHZlIHRyYW5zYWN0aW9ucyAke3R4SWR9IHJlY2VpdmVyYCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmcm9tOiByZXNwb25zZS5mcm9tLFxuICAgICAgICAgICAgdG86IHJlc3BvbnNlLnRvLFxuICAgICAgICAgICAgYmxvY2tIZWlnaHQ6IHJlc3BvbnNlLmJsb2NrTnVtYmVyID8gbmV3IEJpZ051bWJlcihyZXNwb25zZS5ibG9ja051bWJlcikgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBhbW91bnQ6IG5ldyBCaWdOdW1iZXIocmVzcG9uc2UudmFsdWUudG9TdHJpbmcoKSksXG4gICAgICAgICAgICBwZW5kaW5nOiByZXNwb25zZS5ibG9ja051bWJlciA/IGZhbHNlIDogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpcm1lZDogKGF3YWl0IHJlc3BvbnNlLmNvbmZpcm1hdGlvbnMoKSkgPj0gdGhpcy5taW5Db25maXJtLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBhc3luYyByZWFkeSgpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB0aGlzLndhbGxldDtcbiAgICAgICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCBwcm92aWRlci5nZXRTaWduZXIoKTtcbiAgICAgICAgc2lnbmVyLl9zaWduVHlwZWREYXRhID0gYXN5bmMgKGRvbWFpbiwgdHlwZXMsIHZhbHVlKSA9PiBzaWduZXIuc2lnblR5cGVkRGF0YShkb21haW4sIHR5cGVzLCB2YWx1ZSk7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgZml4XG4gICAgICAgIHByb3ZpZGVyLmdldFNpZ25lciA9ICgpID0+IHNpZ25lcjtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBmaXhcbiAgICAgICAgdGhpcy53YWxsZXQgPSBwcm92aWRlcjtcbiAgICAgICAgYXdhaXQgc3VwZXIucmVhZHkoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhlcnN2Ni5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js":
/*!*******************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/token.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BaseWebToken),\n/* harmony export */   getRedstonePrice: () => (/* binding */ getRedstonePrice)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/utils.js\");\n/* harmony import */ var base64url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! base64url */ \"(ssr)/./node_modules/base64url/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n\n\n\n\nclass BaseWebToken {\n    base;\n    wallet;\n    _address;\n    providerUrl;\n    providerInstance;\n    ticker;\n    name;\n    irys;\n    minConfirm = 5;\n    isSlow = false;\n    needsFee = true;\n    inheritsRPC = false;\n    constructor(config) {\n        Object.assign(this, config);\n    }\n    // common methods\n    get address() {\n        return this._address;\n    }\n    async ready() {\n        this._address = this.wallet ? this.ownerToAddress(await this.getPublicKey()) : undefined;\n    }\n    async getId(item) {\n        return base64url__WEBPACK_IMPORTED_MODULE_1__.encode(Buffer.from(await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCryptoDriver)().hash(await item.rawSignature())));\n    }\n    async price() {\n        return getRedstonePrice(this.ticker);\n    }\n}\nasync function getRedstonePrice(token) {\n    const res = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(`https://api.redstone.finance/prices?symbol=${token}&provider=redstone&limit=1`);\n    await _common_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].checkAndThrow(res, \"Getting price data\");\n    return res.data[0].value;\n}\n//# sourceMappingURL=token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ1g7QUFDUjtBQUNhO0FBQ3hCO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkNBQWdCLG1CQUFtQiwwREFBZTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxzQkFBc0IsNkNBQUssbURBQW1ELE1BQU07QUFDcEYsVUFBVSx3REFBSztBQUNmO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vd2ViL3Rva2VuLmpzP2QxOWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q3J5cHRvRHJpdmVyIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCBiYXNlNjR1cmwgZnJvbSBcImJhc2U2NHVybFwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IHV0aWxzIGZyb20gXCIuLi9jb21tb24vdXRpbHMuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VXZWJUb2tlbiB7XG4gICAgYmFzZTtcbiAgICB3YWxsZXQ7XG4gICAgX2FkZHJlc3M7XG4gICAgcHJvdmlkZXJVcmw7XG4gICAgcHJvdmlkZXJJbnN0YW5jZTtcbiAgICB0aWNrZXI7XG4gICAgbmFtZTtcbiAgICBpcnlzO1xuICAgIG1pbkNvbmZpcm0gPSA1O1xuICAgIGlzU2xvdyA9IGZhbHNlO1xuICAgIG5lZWRzRmVlID0gdHJ1ZTtcbiAgICBpbmhlcml0c1JQQyA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNvbmZpZyk7XG4gICAgfVxuICAgIC8vIGNvbW1vbiBtZXRob2RzXG4gICAgZ2V0IGFkZHJlc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hZGRyZXNzO1xuICAgIH1cbiAgICBhc3luYyByZWFkeSgpIHtcbiAgICAgICAgdGhpcy5fYWRkcmVzcyA9IHRoaXMud2FsbGV0ID8gdGhpcy5vd25lclRvQWRkcmVzcyhhd2FpdCB0aGlzLmdldFB1YmxpY0tleSgpKSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0SWQoaXRlbSkge1xuICAgICAgICByZXR1cm4gYmFzZTY0dXJsLmVuY29kZShCdWZmZXIuZnJvbShhd2FpdCBnZXRDcnlwdG9Ecml2ZXIoKS5oYXNoKGF3YWl0IGl0ZW0ucmF3U2lnbmF0dXJlKCkpKSk7XG4gICAgfVxuICAgIGFzeW5jIHByaWNlKCkge1xuICAgICAgICByZXR1cm4gZ2V0UmVkc3RvbmVQcmljZSh0aGlzLnRpY2tlcik7XG4gICAgfVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFJlZHN0b25lUHJpY2UodG9rZW4pIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vYXBpLnJlZHN0b25lLmZpbmFuY2UvcHJpY2VzP3N5bWJvbD0ke3Rva2VufSZwcm92aWRlcj1yZWRzdG9uZSZsaW1pdD0xYCk7XG4gICAgYXdhaXQgdXRpbHMuY2hlY2tBbmRUaHJvdyhyZXMsIFwiR2V0dGluZyBwcmljZSBkYXRhXCIpO1xuICAgIHJldHVybiByZXMuZGF0YVswXS52YWx1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/aptos.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/aptos.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AptosConfig)\n/* harmony export */ });\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aptos */ \"(ssr)/./node_modules/aptos/dist/index.mjs\");\n/* harmony import */ var arbundles_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles/web */ \"(ssr)/./node_modules/arbundles/build/web/esm/webIndex.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-sha3 */ \"(ssr)/./node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\");\n\n\n\n\n// import { Ed25519PublicKey } from \"aptos/src/aptos_types/ed25519\";\n// import { Transaction_UserTransaction, TransactionPayload_EntryFunctionPayload, TransactionPayload, PendingTransaction, UserTransaction } from \"aptos/src/generated\";\n\nclass AptosConfig extends _token_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n    signerInstance;\n    _publicKey;\n    constructor(config) {\n        // if (typeof config.wallet === \"string\" && config.wallet.length === 66) config.wallet = Buffer.from(config.wallet.slice(2), \"hex\");\n        // // @ts-ignore\n        // config.accountInstance = new AptosAccount(config.wallet);\n        super(config);\n        this.base = [\"aptom\", 1e8];\n    }\n    async getProvider() {\n        return (this.providerInstance ??= new aptos__WEBPACK_IMPORTED_MODULE_0__.AptosClient(this.providerUrl));\n    }\n    async getTx(txId) {\n        const client = await this.getProvider();\n        const tx = (await client.waitForTransactionWithResult(txId, /* { checkSuccess: true } */ { timeoutSecs: 1, checkSuccess: true }));\n        const payload = tx?.payload;\n        if (!tx.success) {\n            throw new Error(tx?.vm_status ?? \"Unknown Aptos error\");\n        }\n        if (!(payload?.function === \"0x1::coin::transfer\" &&\n            payload?.type_arguments[0] === \"0x1::aptos_coin::AptosCoin\" &&\n            tx?.vm_status === \"Executed successfully\")) {\n            throw new Error(`Aptos tx ${txId} failed validation`);\n        }\n        const isPending = tx.type === \"pending_transaction\";\n        return {\n            to: payload.arguments[0],\n            from: tx.sender,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](payload.arguments[1]),\n            pending: isPending,\n            confirmed: !isPending,\n        };\n    }\n    ownerToAddress(owner) {\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256.create();\n        hash.update(Buffer.from(owner));\n        hash.update(\"\\x00\");\n        return `0x${hash.hex()}`;\n    }\n    async sign(data) {\n        return await this.getSigner().sign(data);\n    }\n    getSigner() {\n        return (this.signerInstance ??= new arbundles_web__WEBPACK_IMPORTED_MODULE_1__.InjectedAptosSigner(this.wallet, this._publicKey));\n    }\n    async verify(pub, data, signature) {\n        return await arbundles_web__WEBPACK_IMPORTED_MODULE_1__.InjectedAptosSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]((await (await this.getProvider()).client.blocks.httpRequest.request({ method: \"GET\", url: \"/\" })).block_height);\n    }\n    async getFee(amount, to) {\n        const client = await this.getProvider();\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        const builder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderRemoteABI(client, { sender: this.address });\n        const rawTransaction = await builder.build(\"0x1::coin::transfer\", [\"0x1::aptos_coin::AptosCoin\"], [to ?? \"0x149f7dc9c8e43c14ab46d3a6b62cfe84d67668f764277411f98732bf6718acf9\", new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toNumber()]);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const txnBuilder = new aptos__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilderEd25519((_signingMessage) => {\n            const invalidSigBytes = new Uint8Array(64);\n            return new aptos__WEBPACK_IMPORTED_MODULE_0__.TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n        }, (await this.getPublicKey()));\n        const signedSimulation = txnBuilder.sign(rawTransaction);\n        const queryParams = {\n            estimate_gas_unit_price: true,\n            estimate_max_gas_amount: true,\n        };\n        const simulationResult = await client.client.request.request({\n            url: \"/transactions/simulate\",\n            query: queryParams,\n            method: \"POST\",\n            body: signedSimulation,\n            mediaType: \"application/x.aptos.signed_transaction+bcs\",\n        });\n        return { gasUnitPrice: +simulationResult[0].gas_unit_price, maxGasAmount: +simulationResult[0].max_gas_amount };\n        // const simulationResult = await client.simulateTransaction(this.accountInstance, rawTransaction, { estimateGasUnitPrice: true, estimateMaxGasAmount: true });\n        // return new BigNumber(simulationResult?.[0].gas_unit_price).multipliedBy(simulationResult?.[0].gas_used);\n        // const est = await provider.client.transactions.estimateGasPrice();\n        // return new BigNumber(est.gas_estimate/* (await (await this.getProvider()).client.transactions.estimateGasPrice()).gas_estimate */); // * by gas limit (for upper limit)\n    }\n    async sendTx(data) {\n        return (await this.wallet.signAndSubmitTransaction(data)).hash;\n        // return (await (await (this.getProvider())).submitSignedBCSTransaction(data)).hash;\n    }\n    async createTx(amount, to, _fee) {\n        // const client = await this.getProvider();\n        // const payload = new CoinClient(client).transactionBuilder.buildTransactionPayload(\n        //     \"0x1::coin::transfer\",\n        //     [\"0x1::aptos_coin::AptosCoin\"],\n        //     [to, new BigNumber(amount).toNumber()],\n        // );\n        const tx = {\n            arguments: [to, new bignumber_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](amount).toNumber()],\n            function: \"0x1::coin::transfer\",\n            type: \"entry_function_payload\",\n            type_arguments: [\"0x1::aptos_coin::AptosCoin\"],\n        };\n        // const rawTransaction = await client.generateRawTransaction(this.accountInstance.address(), payload);\n        // const bcsTxn = AptosClient.generateBCSTransaction(this.accountInstance, rawTransaction);\n        // const tx = await this.wallet.signTransaction(transaction);\n        return { txId: undefined, tx };\n    }\n    async getPublicKey() {\n        return (this._publicKey ??= Buffer.from((await this.wallet.account()).publicKey.toString().slice(2), \"hex\"));\n    }\n    async ready() {\n        this._publicKey = (await this.getPublicKey());\n        this._address = this.ownerToAddress(this._publicKey);\n        const client = await this.getProvider();\n        this._address = await client\n            .lookupOriginalAddress(this.address ?? \"\")\n            .then((hs) => hs.toString())\n            .catch((_) => this._address); // fallback to original\n        if (this._address?.length == 66 && this._address.charAt(2) === \"0\") {\n            this._address = this._address.slice(0, 2) + this._address.slice(3);\n        }\n    }\n}\n//# sourceMappingURL=aptos.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/aptos.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/erc20.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/erc20.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ERC20Config),\n/* harmony export */   erc20abi: () => (/* binding */ erc20abi)\n/* harmony export */ });\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/contracts */ \"(ssr)/./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\");\n/* harmony import */ var _ethereum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js\");\n\n\n\n\nclass ERC20Config extends _ethereum_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    contractInstance;\n    contractAddress;\n    constructor(config) {\n        super(config);\n        this.contractAddress = config.contractAddress;\n    }\n    async getContract() {\n        if (!this.contractInstance) {\n            // @ts-expect-error minimal type\n            this.contractInstance = new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_3__.Contract(this.contractAddress, erc20abi, this.w3signer);\n            this.base = [\"wei\", Math.pow(10, await this.contractInstance.decimals())];\n        }\n        return this.contractInstance;\n    }\n    async getTx(txId) {\n        const response = await this.providerInstance.getTransaction(txId);\n        if (!response)\n            throw new Error(\"Tx doesn't exist\");\n        if (response.data.length !== 138 ||\n            response.data.slice(2, 10) !== \"a9059cbb\" // standard ERC20-ABI method ID for transfers\n        ) {\n            throw new Error(\"Tx isn't a ERC20 transfer\");\n        }\n        const to = `0x${response.data.slice(34, 74)}`;\n        const amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.data.slice(74), 16);\n        return {\n            from: response.from,\n            to,\n            blockHeight: response.blockNumber ? new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.blockNumber) : undefined,\n            amount,\n            pending: response.blockNumber ? false : true,\n            confirmed: response.confirmations >= this.minConfirm,\n        };\n    }\n    /**\n     * Returns the fee in CONTRACT TOKEN UNITS equivalent to the fee derived via gas token units, i.e Wei\n     * @param amount\n     * @param to\n     * @returns\n     */\n    async getFee(amount, to) {\n        const _amount = \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16);\n        const contract = await this.getContract();\n        const gasPrice = await this.providerInstance.getGasPrice();\n        const gasLimit = await contract.estimateGas.transfer(to, _amount);\n        const units = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gasPrice.mul(gasLimit).toString()); // price in WEI\n        const [fiatGasPrice] = await this.getGas(); // get price of gas units\n        const value = fiatGasPrice.multipliedBy(units); // value of the fee\n        // convert value\n        const ctPrice = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](await this.price()); // price for this token\n        const ctAmount = new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value).dividedToIntegerBy(ctPrice);\n        // const b = ctAmount.multipliedBy(ctPrice)\n        // const c = value.dividedBy(this.base[1])\n        // console.log(b);\n        // console.log(c)\n        return ctAmount;\n    }\n    async createTx(amount, to, _fee) {\n        // const provider = await this.getProvider()\n        // const wallet = new Wallet(this.wallet, this.providerInstance);\n        const contract = await this.getContract();\n        const _amount = \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16);\n        const tx = await contract.populateTransaction.transfer(to, _amount);\n        // Needed *specifically* for ERC20\n        tx.gasPrice = await this.providerInstance.getGasPrice();\n        tx.gasLimit = await contract.estimateGas.transfer(to, _amount);\n        tx.chainId = (await this.providerInstance.getNetwork()).chainId;\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        tx.nonce = await this.providerInstance.getTransactionCount(this.address);\n        // const txr = this.w3signer.populateTransaction()\n        // const signedTx = await this.wallet.signTransaction(tx);\n        // const txId = \"0x\" + keccak256(Buffer.from(signedTx.slice(2), \"hex\")).toString(\"hex\");\n        return { txId: undefined, tx: tx };\n    }\n    // TODO: create a nicer solution than just overrides (larger issue: some currencies aren't on redstone)\n    async getGas() {\n        return [new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](await (0,_token_js__WEBPACK_IMPORTED_MODULE_1__.getRedstonePrice)(\"ETH\")), 1e18];\n    }\n}\nconst erc20abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n            {\n                name: \"_spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n];\n//# sourceMappingURL=erc20.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/erc20.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EthereumConfig)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bignumber */ \"(ssr)/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\");\n/* harmony import */ var arbundles_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! arbundles/web */ \"(ssr)/./node_modules/arbundles/build/web/esm/webIndex.js\");\n\n\n\n\nconst ethereumSigner = arbundles_web__WEBPACK_IMPORTED_MODULE_2__.InjectedTypedEthereumSigner;\nclass EthereumConfig extends _token_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    signer;\n    w3signer;\n    inheritsRPC = true;\n    constructor(config) {\n        super(config);\n        this.base = [\"wei\", 1e18];\n    }\n    async getTx(txId) {\n        const provider = this.providerInstance;\n        const response = await provider.getTransaction(txId);\n        if (!response)\n            throw new Error(\"Tx doesn't exist\");\n        if (!response.to)\n            throw new Error(`Unable to resolve transactions ${txId} receiver`);\n        return {\n            from: response.from,\n            to: response.to,\n            blockHeight: response.blockNumber ? new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.blockNumber) : undefined,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response.value.toHexString(), 16),\n            pending: response.blockNumber ? false : true,\n            confirmed: response.confirmations >= this.minConfirm,\n        };\n    }\n    ownerToAddress(owner) {\n        // return (\n        //   \"0x\" +\n        //   keccak256(Buffer.from(owner.slice(1)))\n        //     .slice(-20)\n        //     .toString(\"hex\")\n        // );\n        // return owner;\n        return owner.toString().toLowerCase();\n    }\n    async sign(data) {\n        const signer = await this.getSigner();\n        return signer.sign(data);\n    }\n    getSigner() {\n        if (!this.signer) {\n            this.signer = new arbundles_web__WEBPACK_IMPORTED_MODULE_2__.InjectedTypedEthereumSigner(this.wallet);\n        }\n        return this.signer;\n    }\n    async verify(pub, data, signature) {\n        return ethereumSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        const provider = this.providerInstance;\n        const response = await provider.send(\"eth_blockNumber\", []);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](response, 16);\n    }\n    async getFee(amount, to) {\n        const provider = this.providerInstance;\n        const tx = {\n            to,\n            from: this.address,\n            value: \"0x\" + new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toString(16),\n        };\n        const estimatedGas = await provider.estimateGas(tx);\n        const gasPrice = await provider.getGasPrice();\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](estimatedGas.mul(gasPrice).toString());\n    }\n    async sendTx(data) {\n        const signer = this.w3signer;\n        const receipt = await signer.sendTransaction(data); // .catch((e) => { console.error(`Sending tx: ${e}`) })\n        return receipt ? receipt.hash : undefined;\n    }\n    async createTx(amount, to, _fee) {\n        const amountc = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](amount).toFixed());\n        const signer = this.w3signer;\n        const estimatedGas = await signer.estimateGas({ to, from: this.address, value: amountc.toHexString() });\n        let gasPrice = await signer.getGasPrice();\n        if (this.name === \"matic\") {\n            gasPrice = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(new bignumber_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gasPrice.toString()).multipliedBy(10).decimalPlaces(0).toString());\n        }\n        const txr = await signer.populateTransaction({ to, from: this.address, value: amountc.toHexString(), gasPrice, gasLimit: estimatedGas });\n        return { txId: undefined, tx: txr };\n    }\n    async getPublicKey() {\n        return this.address;\n    }\n    async ready() {\n        this.w3signer = await this.wallet.getSigner();\n        this._address = (await this.w3signer.getAddress()).toString().toLowerCase();\n        await this.getSigner().ready();\n        // this.providerInstance = new .JsonRpcProvider(this.providerUrl);\n        this.providerInstance = this.wallet;\n        await this.providerInstance?._ready?.();\n    }\n}\n//# sourceMappingURL=ethereum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdG9rZW5zL2V0aGVyZXVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFFO0FBQ2hDO0FBQ0U7QUFDcUI7QUFDNUQsdUJBQXVCLHNFQUEyQjtBQUNuQyw2QkFBNkIsaURBQVk7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsTUFBTTtBQUNwRTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsb0RBQVM7QUFDN0Qsd0JBQXdCLG9EQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0VBQTJCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0RBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9EQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxtQkFBbUIsNkJBQTZCLEVBQUUsSUFBSTtBQUNsSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQVksVUFBVSxvREFBUztBQUN2RDtBQUNBLHdEQUF3RCxzREFBc0Q7QUFDOUc7QUFDQTtBQUNBLHVCQUF1QiwrREFBWSxVQUFVLG9EQUFTO0FBQ3REO0FBQ0EsdURBQXVELHdGQUF3RjtBQUMvSSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vd2ViL3Rva2Vucy9ldGhlcmV1bS5qcz8wNjFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpZ051bWJlciBhcyBFdGhCaWdOdW1iZXIgfSBmcm9tIFwiQGV0aGVyc3Byb2plY3QvYmlnbnVtYmVyXCI7XG5pbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIjtcbmltcG9ydCBCYXNlV2ViVG9rZW4gZnJvbSBcIi4uL3Rva2VuLmpzXCI7XG5pbXBvcnQgeyBJbmplY3RlZFR5cGVkRXRoZXJldW1TaWduZXIgfSBmcm9tIFwiYXJidW5kbGVzL3dlYlwiO1xuY29uc3QgZXRoZXJldW1TaWduZXIgPSBJbmplY3RlZFR5cGVkRXRoZXJldW1TaWduZXI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdGhlcmV1bUNvbmZpZyBleHRlbmRzIEJhc2VXZWJUb2tlbiB7XG4gICAgc2lnbmVyO1xuICAgIHczc2lnbmVyO1xuICAgIGluaGVyaXRzUlBDID0gdHJ1ZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgdGhpcy5iYXNlID0gW1wid2VpXCIsIDFlMThdO1xuICAgIH1cbiAgICBhc3luYyBnZXRUeCh0eElkKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gdGhpcy5wcm92aWRlckluc3RhbmNlO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHByb3ZpZGVyLmdldFRyYW5zYWN0aW9uKHR4SWQpO1xuICAgICAgICBpZiAoIXJlc3BvbnNlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHggZG9lc24ndCBleGlzdFwiKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS50bylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIHJlc29sdmUgdHJhbnNhY3Rpb25zICR7dHhJZH0gcmVjZWl2ZXJgKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZyb206IHJlc3BvbnNlLmZyb20sXG4gICAgICAgICAgICB0bzogcmVzcG9uc2UudG8sXG4gICAgICAgICAgICBibG9ja0hlaWdodDogcmVzcG9uc2UuYmxvY2tOdW1iZXIgPyBuZXcgQmlnTnVtYmVyKHJlc3BvbnNlLmJsb2NrTnVtYmVyKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGFtb3VudDogbmV3IEJpZ051bWJlcihyZXNwb25zZS52YWx1ZS50b0hleFN0cmluZygpLCAxNiksXG4gICAgICAgICAgICBwZW5kaW5nOiByZXNwb25zZS5ibG9ja051bWJlciA/IGZhbHNlIDogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpcm1lZDogcmVzcG9uc2UuY29uZmlybWF0aW9ucyA+PSB0aGlzLm1pbkNvbmZpcm0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIG93bmVyVG9BZGRyZXNzKG93bmVyKSB7XG4gICAgICAgIC8vIHJldHVybiAoXG4gICAgICAgIC8vICAgXCIweFwiICtcbiAgICAgICAgLy8gICBrZWNjYWsyNTYoQnVmZmVyLmZyb20ob3duZXIuc2xpY2UoMSkpKVxuICAgICAgICAvLyAgICAgLnNsaWNlKC0yMClcbiAgICAgICAgLy8gICAgIC50b1N0cmluZyhcImhleFwiKVxuICAgICAgICAvLyApO1xuICAgICAgICAvLyByZXR1cm4gb3duZXI7XG4gICAgICAgIHJldHVybiBvd25lci50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGFzeW5jIHNpZ24oZGF0YSkge1xuICAgICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCB0aGlzLmdldFNpZ25lcigpO1xuICAgICAgICByZXR1cm4gc2lnbmVyLnNpZ24oZGF0YSk7XG4gICAgfVxuICAgIGdldFNpZ25lcigpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNpZ25lcikge1xuICAgICAgICAgICAgdGhpcy5zaWduZXIgPSBuZXcgSW5qZWN0ZWRUeXBlZEV0aGVyZXVtU2lnbmVyKHRoaXMud2FsbGV0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zaWduZXI7XG4gICAgfVxuICAgIGFzeW5jIHZlcmlmeShwdWIsIGRhdGEsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gZXRoZXJldW1TaWduZXIudmVyaWZ5KHB1YiwgZGF0YSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q3VycmVudEhlaWdodCgpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB0aGlzLnByb3ZpZGVySW5zdGFuY2U7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcHJvdmlkZXIuc2VuZChcImV0aF9ibG9ja051bWJlclwiLCBbXSk7XG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKHJlc3BvbnNlLCAxNik7XG4gICAgfVxuICAgIGFzeW5jIGdldEZlZShhbW91bnQsIHRvKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gdGhpcy5wcm92aWRlckluc3RhbmNlO1xuICAgICAgICBjb25zdCB0eCA9IHtcbiAgICAgICAgICAgIHRvLFxuICAgICAgICAgICAgZnJvbTogdGhpcy5hZGRyZXNzLFxuICAgICAgICAgICAgdmFsdWU6IFwiMHhcIiArIG5ldyBCaWdOdW1iZXIoYW1vdW50KS50b1N0cmluZygxNiksXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGVzdGltYXRlZEdhcyA9IGF3YWl0IHByb3ZpZGVyLmVzdGltYXRlR2FzKHR4KTtcbiAgICAgICAgY29uc3QgZ2FzUHJpY2UgPSBhd2FpdCBwcm92aWRlci5nZXRHYXNQcmljZSgpO1xuICAgICAgICByZXR1cm4gbmV3IEJpZ051bWJlcihlc3RpbWF0ZWRHYXMubXVsKGdhc1ByaWNlKS50b1N0cmluZygpKTtcbiAgICB9XG4gICAgYXN5bmMgc2VuZFR4KGRhdGEpIHtcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gdGhpcy53M3NpZ25lcjtcbiAgICAgICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IHNpZ25lci5zZW5kVHJhbnNhY3Rpb24oZGF0YSk7IC8vIC5jYXRjaCgoZSkgPT4geyBjb25zb2xlLmVycm9yKGBTZW5kaW5nIHR4OiAke2V9YCkgfSlcbiAgICAgICAgcmV0dXJuIHJlY2VpcHQgPyByZWNlaXB0Lmhhc2ggOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZVR4KGFtb3VudCwgdG8sIF9mZWUpIHtcbiAgICAgICAgY29uc3QgYW1vdW50YyA9IEV0aEJpZ051bWJlci5mcm9tKG5ldyBCaWdOdW1iZXIoYW1vdW50KS50b0ZpeGVkKCkpO1xuICAgICAgICBjb25zdCBzaWduZXIgPSB0aGlzLnczc2lnbmVyO1xuICAgICAgICBjb25zdCBlc3RpbWF0ZWRHYXMgPSBhd2FpdCBzaWduZXIuZXN0aW1hdGVHYXMoeyB0bywgZnJvbTogdGhpcy5hZGRyZXNzLCB2YWx1ZTogYW1vdW50Yy50b0hleFN0cmluZygpIH0pO1xuICAgICAgICBsZXQgZ2FzUHJpY2UgPSBhd2FpdCBzaWduZXIuZ2V0R2FzUHJpY2UoKTtcbiAgICAgICAgaWYgKHRoaXMubmFtZSA9PT0gXCJtYXRpY1wiKSB7XG4gICAgICAgICAgICBnYXNQcmljZSA9IEV0aEJpZ051bWJlci5mcm9tKG5ldyBCaWdOdW1iZXIoZ2FzUHJpY2UudG9TdHJpbmcoKSkubXVsdGlwbGllZEJ5KDEwKS5kZWNpbWFsUGxhY2VzKDApLnRvU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHR4ciA9IGF3YWl0IHNpZ25lci5wb3B1bGF0ZVRyYW5zYWN0aW9uKHsgdG8sIGZyb206IHRoaXMuYWRkcmVzcywgdmFsdWU6IGFtb3VudGMudG9IZXhTdHJpbmcoKSwgZ2FzUHJpY2UsIGdhc0xpbWl0OiBlc3RpbWF0ZWRHYXMgfSk7XG4gICAgICAgIHJldHVybiB7IHR4SWQ6IHVuZGVmaW5lZCwgdHg6IHR4ciB9O1xuICAgIH1cbiAgICBhc3luYyBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFkZHJlc3M7XG4gICAgfVxuICAgIGFzeW5jIHJlYWR5KCkge1xuICAgICAgICB0aGlzLnczc2lnbmVyID0gYXdhaXQgdGhpcy53YWxsZXQuZ2V0U2lnbmVyKCk7XG4gICAgICAgIHRoaXMuX2FkZHJlc3MgPSAoYXdhaXQgdGhpcy53M3NpZ25lci5nZXRBZGRyZXNzKCkpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5nZXRTaWduZXIoKS5yZWFkeSgpO1xuICAgICAgICAvLyB0aGlzLnByb3ZpZGVySW5zdGFuY2UgPSBuZXcgLkpzb25ScGNQcm92aWRlcih0aGlzLnByb3ZpZGVyVXJsKTtcbiAgICAgICAgdGhpcy5wcm92aWRlckluc3RhbmNlID0gdGhpcy53YWxsZXQ7XG4gICAgICAgIGF3YWl0IHRoaXMucHJvdmlkZXJJbnN0YW5jZT8uX3JlYWR5Py4oKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhlcmV1bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getTokenConfig)\n/* harmony export */ });\n/* harmony import */ var _ethereum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ethereum.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/ethereum.js\");\n/* harmony import */ var _near_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./near.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/near.js\");\n/* harmony import */ var _solana_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solana.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/solana.js\");\n/* harmony import */ var _erc20_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./erc20.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/erc20.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/utils.js\");\n/* harmony import */ var _aptos_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./aptos.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/aptos.js\");\n/* harmony import */ var _providers_ethereum_ethersv5_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../providers/ethereum/ethersv5.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv5.js\");\n/* harmony import */ var _providers_ethereum_ethersv6_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../providers/ethereum/ethersv6.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/providers/ethereum/ethersv6.js\");\n\n\n\n\n\n\n\n\n\nfunction getTokenConfig(config) {\n    switch (config.token) {\n        case \"ethereum\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"ethereum\",\n                ticker: \"ETH\",\n                providerUrl: config.providerUrl ?? \"https://cloudflare-eth.com/\",\n                wallet: config.wallet,\n            });\n        case \"matic\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"matic\",\n                ticker: \"MATIC\",\n                providerUrl: config.providerUrl ?? \"https://polygon-rpc.com\",\n                wallet: config.wallet,\n                minConfirm: 1,\n            });\n        case \"arbitrum\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"arbitrum\",\n                ticker: \"ETH\",\n                providerUrl: config.providerUrl ?? \"https://arb1.arbitrum.io/rpc\",\n                wallet: config.wallet,\n            });\n        case \"bnb\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"bnb\",\n                ticker: \"BNB\",\n                providerUrl: config.providerUrl ?? \"https://bsc-dataseed.binance.org\",\n                wallet: config.wallet,\n            });\n        case \"avalanche\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"avalanche\",\n                ticker: \"AVAX\",\n                providerUrl: config.providerUrl ?? \"https://api.avax.network/ext/bc/C/rpc\",\n                wallet: config.wallet,\n            });\n        case \"boba-eth\":\n            return resolveProvider(\"ethereum\", config.providerName, {\n                irys: config.irys,\n                name: \"boba-eth\",\n                ticker: \"ETH\",\n                providerUrl: config.providerUrl ?? \"https://mainnet.boba.network/\",\n                minConfirm: 1,\n                wallet: config.wallet,\n            });\n        case \"boba\": {\n            const k = new _erc20_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                irys: config.irys,\n                name: \"boba\",\n                ticker: \"BOBA\",\n                providerUrl: config.providerUrl ?? \"https://mainnet.boba.network/\",\n                contractAddress: config.contractAddress ?? \"0xa18bF3994C0Cc6E3b63ac420308E5383f53120D7\",\n                minConfirm: 1,\n                wallet: config.wallet,\n            });\n            // for L1 mainnet: \"https://main-light.eth.linkpool.io/\" and \"0x42bbfa2e77757c645eeaad1655e0911a7553efbc\"\n            k.price = async () => {\n                const res = await axios__WEBPACK_IMPORTED_MODULE_8__[\"default\"].post(\"https://api.livecoinwatch.com/coins/single\", JSON.stringify({ currency: \"USD\", code: `${k.ticker}` }), {\n                    headers: { \"x-api-key\": \"75a7a824-6577-45e6-ad86-511d590c7cc8\", \"content-type\": \"application/json\" },\n                });\n                await _common_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].checkAndThrow(res, \"Getting price data\");\n                if (!res?.data?.rate) {\n                    throw new Error(`unable to get price for ${k.name}`);\n                }\n                return +res.data.rate;\n            };\n            return k;\n        }\n        case \"solana\":\n            return new _solana_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                irys: config.irys,\n                name: \"solana\",\n                ticker: \"SOL\",\n                providerUrl: config.providerUrl ?? \"https://api.mainnet-beta.solana.com/\",\n                wallet: config.wallet,\n            });\n        // case \"algorand\":\n        //     return new AlgorandConfig({ name: \"algorand\", ticker: \"ALGO\", providerUrl: config.providerUrl ?? \"https://api.mainnet-beta.solana.com/\", wallet: config.wallet })\n        case \"near\":\n            return new _near_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n                irys: config.irys,\n                name: \"near\",\n                ticker: \"NEAR\",\n                providerUrl: config.providerUrl ?? \"https://rpc.mainnet.near.org\",\n                wallet: config.wallet,\n            });\n        case \"aptos\":\n            return new _aptos_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n                irys: config.irys,\n                name: \"aptos\",\n                ticker: \"APTOS\",\n                providerUrl: config.providerUrl ?? \"https://fullnode.mainnet.aptoslabs.com/v1\",\n                wallet: config.wallet,\n            });\n        default:\n            throw new Error(`Unknown/Unsupported token ${config.token}`);\n    }\n}\n// @ts-expect-error todo fix\nfunction resolveProvider(family, providerName, config) {\n    switch (family) {\n        case \"ethereum\":\n            switch (providerName) {\n                case \"ethersv5\":\n                    return new _providers_ethereum_ethersv5_js__WEBPACK_IMPORTED_MODULE_6__.EthereumEthersV5(config);\n                case \"ethersv6\":\n                    return new _providers_ethereum_ethersv6_js__WEBPACK_IMPORTED_MODULE_7__.EthereumEthersV6(config);\n                default:\n                    return new _ethereum_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](config);\n            }\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/near.js":
/*!*************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/near.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NearConfig)\n/* harmony export */ });\n/* harmony import */ var arbundles_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles/web */ \"(ssr)/./node_modules/arbundles/build/web/esm/webIndex.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _near_js_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/@near-js/crypto/lib/index.js\");\n/* harmony import */ var _near_js_keystores_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @near-js/keystores-browser */ \"(ssr)/./node_modules/@near-js/keystores-browser/lib/index.js\");\n/* harmony import */ var _near_js_transactions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @near-js/transactions */ \"(ssr)/./node_modules/@near-js/transactions/lib/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var borsh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/index.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\");\n\n\n\n\n\n\n\n\n\n\nclass NearConfig extends _token_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"] {\n    // protected keyStore: KeyPair\n    keyPair;\n    near;\n    constructor(config) {\n        super(config);\n        this.near = this.wallet._near;\n        this.base = [\"yoctoNEAR\", 1e25];\n        // this.keyPair = KeyPair.fromString(this.wallet)\n    }\n    async ready() {\n        if (!this.wallet.isSignedIn()) {\n            throw new Error(\"Wallet has not been signed in!\");\n        }\n        const keystore = new _near_js_keystores_browser__WEBPACK_IMPORTED_MODULE_3__.BrowserLocalStorageKeyStore();\n        const account = this.wallet.account();\n        // console.log(this.address)\n        // console.log(await account.getAccessKeys())\n        // this._address = this.wallet.getAccountId()\n        // this.keyPair = KeyPair.fromString(this.wallet)\n        // console.log(await account.getAccessKeys())\n        this.keyPair = await keystore.getKey(this.wallet._networkId, account.accountId);\n        if (!this.keyPair) {\n            this.keyPair = _near_js_crypto__WEBPACK_IMPORTED_MODULE_2__.KeyPair.fromRandom(\"ed25519\");\n            const publicKey = this.keyPair.getPublicKey().toString();\n            // this.wallet._networkId\n            await keystore.setKey(this.wallet._networkId, account.accountId, this.keyPair);\n            // can't do this :c\n            // console.log(publicKey)\n            await account.addKey(publicKey);\n        }\n        // console.log(this.keyPair.getPublicKey().toString());\n        // this._address = this.ownerToAddress(Buffer.from(this.keyPair.getPublicKey().data));\n        this._address = await this.wallet.getAccountId();\n        // this.providerInstance = new providers.JsonRpcProvider({ url: this.providerUrl });\n        this.providerInstance = this.wallet._near.connection.provider;\n        // console.log(this.keyPair);\n    }\n    /**\n     * NEAR wants both the sender ID and tx Hash, so we have to concatenate to keep with the interface.\n     * @param txId assumes format senderID:txHash\n     */\n    async getTx(txId) {\n        // NOTE: their type defs are out of date with their actual API (23-01-2022)... beware the expect-error when debugging!\n        const provider = await this.providerInstance;\n        const [id, hash] = txId.split(\":\");\n        const status = await provider.txStatusReceipts(bs58__WEBPACK_IMPORTED_MODULE_5__.decode(hash), id);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const blockHeight = await provider.block(status.transaction_outcome.block_hash);\n        const latestBlockHeight = (await provider.block({ finality: \"final\" })).header.height;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        if (status.receipts_outcome[0].outcome.status.SuccessValue !== \"\") {\n            throw new Error(\"Transaction failed!\");\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const deposit = status.receipts[0].receipt.Action.actions[0].Transfer.deposit ?? 0;\n        // console.log(decode(status.receipts_outcome[0].block_hash))\n        // // const routcometx = await provider.txStatusReceipts(decode(status.receipts_outcome[0].block_hash), status.receipts_outcome[0].id)\n        // console.log({ blockHeight, status, latestBlockHeight })\n        return {\n            from: id,\n            to: status.transaction.receiver_id,\n            amount: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](deposit),\n            blockHeight: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](blockHeight.header.height),\n            pending: false,\n            confirmed: latestBlockHeight - blockHeight.header.height >= this.minConfirm,\n        };\n    }\n    /**\n     * address = accountID\n     * @param owner // assumed to be the \"ed25519:\" header + b58 encoded key\n     */\n    ownerToAddress(owner) {\n        // should just return the loaded address?\n        const pubkey = typeof owner === \"string\" ? owner : bs58__WEBPACK_IMPORTED_MODULE_5__.encode(owner);\n        return Buffer.from(bs58__WEBPACK_IMPORTED_MODULE_5__.decode(pubkey.replace(\"ed25519:\", \"\"))).toString(\"hex\");\n    }\n    async sign(data) {\n        return this.getSigner().sign(data);\n    }\n    getSigner() {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return new arbundles_web__WEBPACK_IMPORTED_MODULE_0__.NearSigner(this.keyPair.secretKey);\n    }\n    async verify(pub, data, signature) {\n        return arbundles_web__WEBPACK_IMPORTED_MODULE_0__.NearSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        // const provider = await this.getProvider();\n        const res = await this.providerInstance.status();\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](res.sync_info.latest_block_height);\n    }\n    async getFee(_amount, _to) {\n        // const provider = await this.getProvider();\n        // one unit of gas\n        // const res = await provider.connection.provider.gasPrice(await (await this.getCurrentHeight()).toNumber())\n        const latestBlockHeight = (await this.providerInstance.block({ finality: \"final\" })).header.height;\n        const res = await this.providerInstance.gasPrice(latestBlockHeight); // null == gas price as of latest block\n        // multiply by action cost in gas units (assume only action is transfer)\n        // 4.5x10^11 gas units for fund transfers\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](res.gas_price).multipliedBy(450_000_000_000);\n    }\n    async sendTx(data) {\n        data;\n        const res = await this.providerInstance.sendTransaction(data);\n        return `${this.address}:${res.transaction.hash}`; // encode into compound format\n    }\n    async createTx(amount, to, _fee) {\n        if (!this.address)\n            throw new Error(\"Address is undefined - you might be missing a wallet, or have not run Irys.ready()\");\n        const accessKey = await this.providerInstance.query({\n            request_type: \"view_access_key\",\n            finality: \"final\",\n            account_id: this.address,\n            public_key: this.keyPair.getPublicKey().toString(),\n        });\n        // console.log(accessKey);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        const nonce = ++accessKey.nonce;\n        const recentBlockHash = Buffer.from(bs58__WEBPACK_IMPORTED_MODULE_5__.decode(accessKey.block_hash));\n        const actions = [_near_js_transactions__WEBPACK_IMPORTED_MODULE_4__.actionCreators.transfer(new bn_js__WEBPACK_IMPORTED_MODULE_7__(new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toString()))];\n        const tx = (0,_near_js_transactions__WEBPACK_IMPORTED_MODULE_4__.createTransaction)(this.address, this.keyPair.getPublicKey(), to, nonce, actions, recentBlockHash);\n        const serialTx = (0,borsh__WEBPACK_IMPORTED_MODULE_6__.serialize)(_near_js_transactions__WEBPACK_IMPORTED_MODULE_4__.SCHEMA, tx);\n        const serialTxHash = new Uint8Array(js_sha256__WEBPACK_IMPORTED_MODULE_8__.sha256.array(serialTx));\n        const signature = this.keyPair.sign(serialTxHash);\n        const signedTx = new _near_js_transactions__WEBPACK_IMPORTED_MODULE_4__.SignedTransaction({\n            transaction: tx,\n            signature: new _near_js_transactions__WEBPACK_IMPORTED_MODULE_4__.Signature({\n                keyType: tx.publicKey.keyType,\n                data: signature.signature,\n            }),\n        });\n        return { tx: signedTx, txId: undefined };\n    }\n    async getPublicKey() {\n        return Buffer.from(this.keyPair.getPublicKey().data);\n    }\n}\n//# sourceMappingURL=near.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/near.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/solana.js":
/*!***************************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/tokens/solana.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SolanaConfig)\n/* harmony export */ });\n/* harmony import */ var arbundles_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles/web */ \"(ssr)/./node_modules/arbundles/build/web/esm/webIndex.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.mjs\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../token.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/web/token.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/@irys/sdk/node_modules/bs58/index.js\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n\n\n\n\n\n\nclass SolanaConfig extends _token_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    signer;\n    minConfirm = 1;\n    constructor(config) {\n        super(config);\n        this.base = [\"lamports\", 1e9];\n    }\n    async getProvider() {\n        if (!this.providerInstance) {\n            this.providerInstance = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.Connection(this.providerUrl, {\n                confirmTransactionInitialTimeout: 60_000,\n                commitment: \"confirmed\",\n            });\n        }\n        return this.providerInstance;\n    }\n    async getTx(txId) {\n        const connection = await this.getProvider();\n        const stx = await connection.getTransaction(txId, { commitment: \"confirmed\" });\n        if (!stx)\n            throw new Error(\"Confirmed tx not found\");\n        const currentSlot = await connection.getSlot(\"confirmed\");\n        if (!stx.meta)\n            throw new Error(`Unable to resolve transaction ${txId}`);\n        const amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.meta.postBalances[1]).minus(new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.meta.preBalances[1]));\n        const tx = {\n            from: stx.transaction.message.accountKeys[0].toBase58(),\n            to: stx.transaction.message.accountKeys[1].toBase58(),\n            amount: amount,\n            blockHeight: new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](stx.slot),\n            pending: false,\n            confirmed: currentSlot - stx.slot >= 1,\n        };\n        return tx;\n    }\n    ownerToAddress(owner) {\n        if (typeof owner === \"string\") {\n            owner = Buffer.from(owner);\n        }\n        return bs58__WEBPACK_IMPORTED_MODULE_3__.encode(owner);\n    }\n    async sign(data) {\n        return await (await this.getSigner()).sign(data);\n    }\n    getSigner() {\n        if (!this.signer) {\n            // if (this.wallet?.name === \"Phantom\") {\n            //     this.signer = new PhantomSigner(this.wallet)\n            // } else {\n            //     this.signer = new InjectedSolanaSigner(this.wallet)\n            // }\n            this.signer = new arbundles_web__WEBPACK_IMPORTED_MODULE_0__.HexInjectedSolanaSigner(this.wallet);\n        }\n        return this.signer;\n    }\n    verify(pub, data, signature) {\n        // if (this.wallet?.name === \"Phantom\") {\n        //     return PhantomSigner.verify(pub, data, signature)\n        // }\n        // return InjectedSolanaSigner.verify(pub, data, signature);\n        return arbundles_web__WEBPACK_IMPORTED_MODULE_0__.HexInjectedSolanaSigner.verify(pub, data, signature);\n    }\n    async getCurrentHeight() {\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]((await (await this.getProvider()).getEpochInfo()).blockHeight ?? 0);\n    }\n    async getFee(_amount, _to) {\n        // const connection = await this.getProvider()\n        // const block = await connection.getRecentBlockhash();\n        // const feeCalc = await connection.getFeeCalculatorForBlockhash(\n        //     block.blockhash,\n        // );\n        // return new BigNumber(feeCalc.value.lamportsPerSignature);\n        return new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](5000); // hardcode it for now\n    }\n    async sendTx(data) {\n        return await this.wallet.sendTransaction(data, await this.getProvider(), { skipPreflight: true });\n    }\n    async createTx(amount, to, _fee) {\n        // TODO: figure out how to manually set fees\n        const pubkey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.PublicKey(await this.getPublicKey());\n        const blockHashInfo = await async_retry__WEBPACK_IMPORTED_MODULE_4__(async (bail) => {\n            try {\n                return await (await this.getProvider()).getRecentBlockhash();\n            }\n            catch (e) {\n                if (e.message?.includes(\"blockhash\"))\n                    throw e;\n                else\n                    bail(e);\n                throw new Error(\"Unreachable\");\n            }\n        }, { retries: 3, minTimeout: 1000 });\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.Transaction({ recentBlockhash: blockHashInfo.blockhash, feePayer: pubkey });\n        transaction.add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.SystemProgram.transfer({\n            fromPubkey: pubkey,\n            toPubkey: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.PublicKey(to),\n            lamports: +new bignumber_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](amount).toNumber(),\n        }));\n        return { tx: transaction, txId: undefined };\n    }\n    async getPublicKey() {\n        if (!this.wallet.publicKey)\n            throw new Error(\"Wallet.publicKey is undefined\");\n        return this.wallet.publicKey.toBuffer();\n    }\n}\n//# sourceMappingURL=solana.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdG9rZW5zL3NvbGFuYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXdEO0FBQ25CO0FBQ0U7QUFDZjtBQUNRO0FBQ29EO0FBQ3JFLDJCQUEyQixpREFBWTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHVEQUFVO0FBQ2xEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCx5QkFBeUI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsS0FBSztBQUNsRSwyQkFBMkIsb0RBQVMscUNBQXFDLG9EQUFTO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG9EQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0NBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsOEJBQThCLGtFQUF1QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrRUFBdUI7QUFDdEM7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9EQUFTLFFBQVE7QUFDcEM7QUFDQTtBQUNBLG1GQUFtRixxQkFBcUI7QUFDeEc7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHNEQUFTO0FBQ3BDLG9DQUFvQyx3Q0FBSztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSSw4QkFBOEI7QUFDM0MsZ0NBQWdDLHdEQUFXLEdBQUcsNERBQTREO0FBQzFHLHdCQUF3QiwwREFBYTtBQUNyQztBQUNBLDBCQUEwQixzREFBUztBQUNuQywyQkFBMkIsb0RBQVM7QUFDcEMsU0FBUztBQUNULGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdG9rZW5zL3NvbGFuYS5qcz83ZGE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhleEluamVjdGVkU29sYW5hU2lnbmVyIH0gZnJvbSBcImFyYnVuZGxlcy93ZWJcIjtcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSBcImJpZ251bWJlci5qc1wiO1xuaW1wb3J0IEJhc2VXZWJUb2tlbiBmcm9tIFwiLi4vdG9rZW4uanNcIjtcbmltcG9ydCBiczU4IGZyb20gXCJiczU4XCI7XG5pbXBvcnQgcmV0cnkgZnJvbSBcImFzeW5jLXJldHJ5XCI7XG5pbXBvcnQgeyBDb25uZWN0aW9uLCBQdWJsaWNLZXksIFN5c3RlbVByb2dyYW0sIFRyYW5zYWN0aW9uIH0gZnJvbSBcIkBzb2xhbmEvd2ViMy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU29sYW5hQ29uZmlnIGV4dGVuZHMgQmFzZVdlYlRva2VuIHtcbiAgICBzaWduZXI7XG4gICAgbWluQ29uZmlybSA9IDE7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuYmFzZSA9IFtcImxhbXBvcnRzXCIsIDFlOV07XG4gICAgfVxuICAgIGFzeW5jIGdldFByb3ZpZGVyKCkge1xuICAgICAgICBpZiAoIXRoaXMucHJvdmlkZXJJbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5wcm92aWRlckluc3RhbmNlID0gbmV3IENvbm5lY3Rpb24odGhpcy5wcm92aWRlclVybCwge1xuICAgICAgICAgICAgICAgIGNvbmZpcm1UcmFuc2FjdGlvbkluaXRpYWxUaW1lb3V0OiA2MF8wMDAsXG4gICAgICAgICAgICAgICAgY29tbWl0bWVudDogXCJjb25maXJtZWRcIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVySW5zdGFuY2U7XG4gICAgfVxuICAgIGFzeW5jIGdldFR4KHR4SWQpIHtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHRoaXMuZ2V0UHJvdmlkZXIoKTtcbiAgICAgICAgY29uc3Qgc3R4ID0gYXdhaXQgY29ubmVjdGlvbi5nZXRUcmFuc2FjdGlvbih0eElkLCB7IGNvbW1pdG1lbnQ6IFwiY29uZmlybWVkXCIgfSk7XG4gICAgICAgIGlmICghc3R4KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29uZmlybWVkIHR4IG5vdCBmb3VuZFwiKTtcbiAgICAgICAgY29uc3QgY3VycmVudFNsb3QgPSBhd2FpdCBjb25uZWN0aW9uLmdldFNsb3QoXCJjb25maXJtZWRcIik7XG4gICAgICAgIGlmICghc3R4Lm1ldGEpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byByZXNvbHZlIHRyYW5zYWN0aW9uICR7dHhJZH1gKTtcbiAgICAgICAgY29uc3QgYW1vdW50ID0gbmV3IEJpZ051bWJlcihzdHgubWV0YS5wb3N0QmFsYW5jZXNbMV0pLm1pbnVzKG5ldyBCaWdOdW1iZXIoc3R4Lm1ldGEucHJlQmFsYW5jZXNbMV0pKTtcbiAgICAgICAgY29uc3QgdHggPSB7XG4gICAgICAgICAgICBmcm9tOiBzdHgudHJhbnNhY3Rpb24ubWVzc2FnZS5hY2NvdW50S2V5c1swXS50b0Jhc2U1OCgpLFxuICAgICAgICAgICAgdG86IHN0eC50cmFuc2FjdGlvbi5tZXNzYWdlLmFjY291bnRLZXlzWzFdLnRvQmFzZTU4KCksXG4gICAgICAgICAgICBhbW91bnQ6IGFtb3VudCxcbiAgICAgICAgICAgIGJsb2NrSGVpZ2h0OiBuZXcgQmlnTnVtYmVyKHN0eC5zbG90KSxcbiAgICAgICAgICAgIHBlbmRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgY29uZmlybWVkOiBjdXJyZW50U2xvdCAtIHN0eC5zbG90ID49IDEsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB0eDtcbiAgICB9XG4gICAgb3duZXJUb0FkZHJlc3Mob3duZXIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvd25lciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgb3duZXIgPSBCdWZmZXIuZnJvbShvd25lcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJzNTguZW5jb2RlKG93bmVyKTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbihkYXRhKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCAoYXdhaXQgdGhpcy5nZXRTaWduZXIoKSkuc2lnbihkYXRhKTtcbiAgICB9XG4gICAgZ2V0U2lnbmVyKCkge1xuICAgICAgICBpZiAoIXRoaXMuc2lnbmVyKSB7XG4gICAgICAgICAgICAvLyBpZiAodGhpcy53YWxsZXQ/Lm5hbWUgPT09IFwiUGhhbnRvbVwiKSB7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5zaWduZXIgPSBuZXcgUGhhbnRvbVNpZ25lcih0aGlzLndhbGxldClcbiAgICAgICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5zaWduZXIgPSBuZXcgSW5qZWN0ZWRTb2xhbmFTaWduZXIodGhpcy53YWxsZXQpXG4gICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICB0aGlzLnNpZ25lciA9IG5ldyBIZXhJbmplY3RlZFNvbGFuYVNpZ25lcih0aGlzLndhbGxldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnbmVyO1xuICAgIH1cbiAgICB2ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpIHtcbiAgICAgICAgLy8gaWYgKHRoaXMud2FsbGV0Py5uYW1lID09PSBcIlBoYW50b21cIikge1xuICAgICAgICAvLyAgICAgcmV0dXJuIFBoYW50b21TaWduZXIudmVyaWZ5KHB1YiwgZGF0YSwgc2lnbmF0dXJlKVxuICAgICAgICAvLyB9XG4gICAgICAgIC8vIHJldHVybiBJbmplY3RlZFNvbGFuYVNpZ25lci52ZXJpZnkocHViLCBkYXRhLCBzaWduYXR1cmUpO1xuICAgICAgICByZXR1cm4gSGV4SW5qZWN0ZWRTb2xhbmFTaWduZXIudmVyaWZ5KHB1YiwgZGF0YSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q3VycmVudEhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIoKGF3YWl0IChhd2FpdCB0aGlzLmdldFByb3ZpZGVyKCkpLmdldEVwb2NoSW5mbygpKS5ibG9ja0hlaWdodCA/PyAwKTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0RmVlKF9hbW91bnQsIF90bykge1xuICAgICAgICAvLyBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpXG4gICAgICAgIC8vIGNvbnN0IGJsb2NrID0gYXdhaXQgY29ubmVjdGlvbi5nZXRSZWNlbnRCbG9ja2hhc2goKTtcbiAgICAgICAgLy8gY29uc3QgZmVlQ2FsYyA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0RmVlQ2FsY3VsYXRvckZvckJsb2NraGFzaChcbiAgICAgICAgLy8gICAgIGJsb2NrLmJsb2NraGFzaCxcbiAgICAgICAgLy8gKTtcbiAgICAgICAgLy8gcmV0dXJuIG5ldyBCaWdOdW1iZXIoZmVlQ2FsYy52YWx1ZS5sYW1wb3J0c1BlclNpZ25hdHVyZSk7XG4gICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKDUwMDApOyAvLyBoYXJkY29kZSBpdCBmb3Igbm93XG4gICAgfVxuICAgIGFzeW5jIHNlbmRUeChkYXRhKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLndhbGxldC5zZW5kVHJhbnNhY3Rpb24oZGF0YSwgYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpLCB7IHNraXBQcmVmbGlnaHQ6IHRydWUgfSk7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZVR4KGFtb3VudCwgdG8sIF9mZWUpIHtcbiAgICAgICAgLy8gVE9ETzogZmlndXJlIG91dCBob3cgdG8gbWFudWFsbHkgc2V0IGZlZXNcbiAgICAgICAgY29uc3QgcHVia2V5ID0gbmV3IFB1YmxpY0tleShhd2FpdCB0aGlzLmdldFB1YmxpY0tleSgpKTtcbiAgICAgICAgY29uc3QgYmxvY2tIYXNoSW5mbyA9IGF3YWl0IHJldHJ5KGFzeW5jIChiYWlsKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCAoYXdhaXQgdGhpcy5nZXRQcm92aWRlcigpKS5nZXRSZWNlbnRCbG9ja2hhc2goKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUubWVzc2FnZT8uaW5jbHVkZXMoXCJibG9ja2hhc2hcIikpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBiYWlsKGUpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVucmVhY2hhYmxlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7IHJldHJpZXM6IDMsIG1pblRpbWVvdXQ6IDEwMDAgfSk7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKHsgcmVjZW50QmxvY2toYXNoOiBibG9ja0hhc2hJbmZvLmJsb2NraGFzaCwgZmVlUGF5ZXI6IHB1YmtleSB9KTtcbiAgICAgICAgdHJhbnNhY3Rpb24uYWRkKFN5c3RlbVByb2dyYW0udHJhbnNmZXIoe1xuICAgICAgICAgICAgZnJvbVB1YmtleTogcHVia2V5LFxuICAgICAgICAgICAgdG9QdWJrZXk6IG5ldyBQdWJsaWNLZXkodG8pLFxuICAgICAgICAgICAgbGFtcG9ydHM6ICtuZXcgQmlnTnVtYmVyKGFtb3VudCkudG9OdW1iZXIoKSxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4geyB0eDogdHJhbnNhY3Rpb24sIHR4SWQ6IHVuZGVmaW5lZCB9O1xuICAgIH1cbiAgICBhc3luYyBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIGlmICghdGhpcy53YWxsZXQucHVibGljS2V5KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0LnB1YmxpY0tleSBpcyB1bmRlZmluZWRcIik7XG4gICAgICAgIHJldHVybiB0aGlzLndhbGxldC5wdWJsaWNLZXkudG9CdWZmZXIoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb2xhbmEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/tokens/solana.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/upload.js":
/*!********************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/upload.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebUploader: () => (/* binding */ WebUploader)\n/* harmony export */ });\n/* harmony import */ var _common_upload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/upload.js */ \"(ssr)/./node_modules/@irys/sdk/build/esm/common/upload.js\");\n/* harmony import */ var arbundles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! arbundles */ \"(ssr)/./node_modules/arbundles/build/node/esm/index.js\");\n\n\nclass WebUploader extends _common_upload_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    irys;\n    constructor(irys) {\n        super(irys.api, irys.utils, irys.token, irys.tokenConfig, irys.IrysTransaction);\n        this.irys = irys;\n    }\n    /**\n     * Uploads a tagged file object, automatically adding the content-type tag if it's not present\n     * @param file - File object to upload\n     * @param opts - optional options for the upload / data item creation\n     * @returns\n     */\n    async uploadFile(file, opts) {\n        const hasContentType = opts?.tags ? opts.tags.some(({ name }) => name.toLowerCase() === \"content-type\") : false;\n        const tags = hasContentType ? opts?.tags : [...(opts?.tags ?? []), { name: \"Content-Type\", value: file.type }];\n        return this.uploadData(Buffer.from(await file.arrayBuffer()), { tags, ...opts });\n    }\n    /**\n     * Uploads a list of `File` objects & a generated folder manifest as a nested bundle using a temporary signing key.\n     *\n     * @param files list of `File` objects to upload - note: this code determines the paths via the File's `webkitRelativePath` property - if it's undefined, it falls back to file.name\n     * @param {string} [opts.indexFileRelPath] Relative path for the index file, i.e `folder/index.html`\n     * @param {Tag[]} [opts.manifestTags] List of tags to add onto the manifest transaction\n     * @param {JWKInterface} [opts.throwawayKey] Provide your own throwaway JWK to use for signing the items in the bundle\n     * @param {boolean} [opts.seperateManifestTx=false] Whether upload the manifest as a seperate tx (not in the nested bundle) - note: transactions in a nested bundle are not indexed by bundlr GQL - if you have tags you want to use to find the manifest, set this option to true\n     *\n     * @returns Standard upload response from the bundler node, plus the throwaway key & address, manifest, manifest TxId and the list of generated transactions\n     */\n    async uploadFolder(files, opts) {\n        const txs = [];\n        const txMap = new Map();\n        const throwawayKey = opts?.throwawayKey ?? (await this.irys.arbundles.getCryptoDriver().generateJWK());\n        const ephemeralSigner = new arbundles__WEBPACK_IMPORTED_MODULE_1__.ArweaveSigner(throwawayKey);\n        for (const file of files) {\n            const path = file.webkitRelativePath ? file.webkitRelativePath : file.name;\n            const hasContentType = file.tags ? file.tags.some(({ name }) => name.toLowerCase() === \"content-type\") : false;\n            const tags = hasContentType ? file.tags : [...(file.tags ?? []), { name: \"Content-Type\", value: file.type }];\n            const tx = this.irys.arbundles.createData(Buffer.from(await file.arrayBuffer()), ephemeralSigner, {\n                tags,\n            });\n            await tx.sign(ephemeralSigner);\n            txs.push(tx);\n            txMap.set(path, tx.id);\n        }\n        // generate manifest, add to bundle\n        const manifest = await this.generateManifest({ items: txMap, indexFile: opts?.indexFileRelPath });\n        const manifestTx = this.irys.arbundles.createData(JSON.stringify(manifest), opts?.seperateManifestTx ? this.irys.tokenConfig.getSigner() : ephemeralSigner, {\n            tags: [\n                { name: \"Type\", value: \"manifest\" },\n                { name: \"Content-Type\", value: \"application/x.arweave-manifest+json\" },\n                ...(opts?.manifestTags ?? []),\n            ],\n        });\n        if (opts?.seperateManifestTx === true) {\n            await manifestTx.sign(this.irys.tokenConfig.getSigner());\n            await this.uploadTransaction(manifestTx, { ...opts });\n        }\n        else {\n            await manifestTx.sign(ephemeralSigner);\n            txs.push(manifestTx);\n        }\n        // upload bundle\n        const bundleRes = await this.uploadBundle(txs, { ...opts });\n        return {\n            ...bundleRes.data,\n            manifestId: manifestTx.id,\n            manifest,\n            throwawayKey: bundleRes.throwawayKey,\n            throwawayKeyAddress: bundleRes.throwawayKeyAddress,\n            txs: bundleRes.txs,\n        };\n    }\n}\n//# sourceMappingURL=upload.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdXBsb2FkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNEO0FBQ25DLDBCQUEwQix5REFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsTUFBTTtBQUNwRSw2RUFBNkUsd0NBQXdDO0FBQ3JILHdFQUF3RSxlQUFlO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsY0FBYztBQUM3QixlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msb0RBQWE7QUFDakQ7QUFDQTtBQUNBLGlFQUFpRSxNQUFNO0FBQ3ZFLCtFQUErRSx3Q0FBd0M7QUFDdkg7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGlEQUFpRDtBQUN4RztBQUNBO0FBQ0Esa0JBQWtCLGlDQUFpQztBQUNuRCxrQkFBa0Isb0VBQW9FO0FBQ3RGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHVEQUF1RCxTQUFTO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxTQUFTO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvYnVpbGQvZXNtL3dlYi91cGxvYWQuanM/Nzc3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXBsb2FkZXIgZnJvbSBcIi4uL2NvbW1vbi91cGxvYWQuanNcIjtcbmltcG9ydCB7IEFyd2VhdmVTaWduZXIgfSBmcm9tIFwiYXJidW5kbGVzXCI7XG5leHBvcnQgY2xhc3MgV2ViVXBsb2FkZXIgZXh0ZW5kcyBVcGxvYWRlciB7XG4gICAgaXJ5cztcbiAgICBjb25zdHJ1Y3RvcihpcnlzKSB7XG4gICAgICAgIHN1cGVyKGlyeXMuYXBpLCBpcnlzLnV0aWxzLCBpcnlzLnRva2VuLCBpcnlzLnRva2VuQ29uZmlnLCBpcnlzLklyeXNUcmFuc2FjdGlvbik7XG4gICAgICAgIHRoaXMuaXJ5cyA9IGlyeXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwbG9hZHMgYSB0YWdnZWQgZmlsZSBvYmplY3QsIGF1dG9tYXRpY2FsbHkgYWRkaW5nIHRoZSBjb250ZW50LXR5cGUgdGFnIGlmIGl0J3Mgbm90IHByZXNlbnRcbiAgICAgKiBAcGFyYW0gZmlsZSAtIEZpbGUgb2JqZWN0IHRvIHVwbG9hZFxuICAgICAqIEBwYXJhbSBvcHRzIC0gb3B0aW9uYWwgb3B0aW9ucyBmb3IgdGhlIHVwbG9hZCAvIGRhdGEgaXRlbSBjcmVhdGlvblxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgdXBsb2FkRmlsZShmaWxlLCBvcHRzKSB7XG4gICAgICAgIGNvbnN0IGhhc0NvbnRlbnRUeXBlID0gb3B0cz8udGFncyA/IG9wdHMudGFncy5zb21lKCh7IG5hbWUgfSkgPT4gbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImNvbnRlbnQtdHlwZVwiKSA6IGZhbHNlO1xuICAgICAgICBjb25zdCB0YWdzID0gaGFzQ29udGVudFR5cGUgPyBvcHRzPy50YWdzIDogWy4uLihvcHRzPy50YWdzID8/IFtdKSwgeyBuYW1lOiBcIkNvbnRlbnQtVHlwZVwiLCB2YWx1ZTogZmlsZS50eXBlIH1dO1xuICAgICAgICByZXR1cm4gdGhpcy51cGxvYWREYXRhKEJ1ZmZlci5mcm9tKGF3YWl0IGZpbGUuYXJyYXlCdWZmZXIoKSksIHsgdGFncywgLi4ub3B0cyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBsb2FkcyBhIGxpc3Qgb2YgYEZpbGVgIG9iamVjdHMgJiBhIGdlbmVyYXRlZCBmb2xkZXIgbWFuaWZlc3QgYXMgYSBuZXN0ZWQgYnVuZGxlIHVzaW5nIGEgdGVtcG9yYXJ5IHNpZ25pbmcga2V5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGZpbGVzIGxpc3Qgb2YgYEZpbGVgIG9iamVjdHMgdG8gdXBsb2FkIC0gbm90ZTogdGhpcyBjb2RlIGRldGVybWluZXMgdGhlIHBhdGhzIHZpYSB0aGUgRmlsZSdzIGB3ZWJraXRSZWxhdGl2ZVBhdGhgIHByb3BlcnR5IC0gaWYgaXQncyB1bmRlZmluZWQsIGl0IGZhbGxzIGJhY2sgdG8gZmlsZS5uYW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRzLmluZGV4RmlsZVJlbFBhdGhdIFJlbGF0aXZlIHBhdGggZm9yIHRoZSBpbmRleCBmaWxlLCBpLmUgYGZvbGRlci9pbmRleC5odG1sYFxuICAgICAqIEBwYXJhbSB7VGFnW119IFtvcHRzLm1hbmlmZXN0VGFnc10gTGlzdCBvZiB0YWdzIHRvIGFkZCBvbnRvIHRoZSBtYW5pZmVzdCB0cmFuc2FjdGlvblxuICAgICAqIEBwYXJhbSB7SldLSW50ZXJmYWNlfSBbb3B0cy50aHJvd2F3YXlLZXldIFByb3ZpZGUgeW91ciBvd24gdGhyb3dhd2F5IEpXSyB0byB1c2UgZm9yIHNpZ25pbmcgdGhlIGl0ZW1zIGluIHRoZSBidW5kbGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRzLnNlcGVyYXRlTWFuaWZlc3RUeD1mYWxzZV0gV2hldGhlciB1cGxvYWQgdGhlIG1hbmlmZXN0IGFzIGEgc2VwZXJhdGUgdHggKG5vdCBpbiB0aGUgbmVzdGVkIGJ1bmRsZSkgLSBub3RlOiB0cmFuc2FjdGlvbnMgaW4gYSBuZXN0ZWQgYnVuZGxlIGFyZSBub3QgaW5kZXhlZCBieSBidW5kbHIgR1FMIC0gaWYgeW91IGhhdmUgdGFncyB5b3Ugd2FudCB0byB1c2UgdG8gZmluZCB0aGUgbWFuaWZlc3QsIHNldCB0aGlzIG9wdGlvbiB0byB0cnVlXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBTdGFuZGFyZCB1cGxvYWQgcmVzcG9uc2UgZnJvbSB0aGUgYnVuZGxlciBub2RlLCBwbHVzIHRoZSB0aHJvd2F3YXkga2V5ICYgYWRkcmVzcywgbWFuaWZlc3QsIG1hbmlmZXN0IFR4SWQgYW5kIHRoZSBsaXN0IG9mIGdlbmVyYXRlZCB0cmFuc2FjdGlvbnNcbiAgICAgKi9cbiAgICBhc3luYyB1cGxvYWRGb2xkZXIoZmlsZXMsIG9wdHMpIHtcbiAgICAgICAgY29uc3QgdHhzID0gW107XG4gICAgICAgIGNvbnN0IHR4TWFwID0gbmV3IE1hcCgpO1xuICAgICAgICBjb25zdCB0aHJvd2F3YXlLZXkgPSBvcHRzPy50aHJvd2F3YXlLZXkgPz8gKGF3YWl0IHRoaXMuaXJ5cy5hcmJ1bmRsZXMuZ2V0Q3J5cHRvRHJpdmVyKCkuZ2VuZXJhdGVKV0soKSk7XG4gICAgICAgIGNvbnN0IGVwaGVtZXJhbFNpZ25lciA9IG5ldyBBcndlYXZlU2lnbmVyKHRocm93YXdheUtleSk7XG4gICAgICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGZpbGUud2Via2l0UmVsYXRpdmVQYXRoID8gZmlsZS53ZWJraXRSZWxhdGl2ZVBhdGggOiBmaWxlLm5hbWU7XG4gICAgICAgICAgICBjb25zdCBoYXNDb250ZW50VHlwZSA9IGZpbGUudGFncyA/IGZpbGUudGFncy5zb21lKCh7IG5hbWUgfSkgPT4gbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImNvbnRlbnQtdHlwZVwiKSA6IGZhbHNlO1xuICAgICAgICAgICAgY29uc3QgdGFncyA9IGhhc0NvbnRlbnRUeXBlID8gZmlsZS50YWdzIDogWy4uLihmaWxlLnRhZ3MgPz8gW10pLCB7IG5hbWU6IFwiQ29udGVudC1UeXBlXCIsIHZhbHVlOiBmaWxlLnR5cGUgfV07XG4gICAgICAgICAgICBjb25zdCB0eCA9IHRoaXMuaXJ5cy5hcmJ1bmRsZXMuY3JlYXRlRGF0YShCdWZmZXIuZnJvbShhd2FpdCBmaWxlLmFycmF5QnVmZmVyKCkpLCBlcGhlbWVyYWxTaWduZXIsIHtcbiAgICAgICAgICAgICAgICB0YWdzLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCB0eC5zaWduKGVwaGVtZXJhbFNpZ25lcik7XG4gICAgICAgICAgICB0eHMucHVzaCh0eCk7XG4gICAgICAgICAgICB0eE1hcC5zZXQocGF0aCwgdHguaWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGdlbmVyYXRlIG1hbmlmZXN0LCBhZGQgdG8gYnVuZGxlXG4gICAgICAgIGNvbnN0IG1hbmlmZXN0ID0gYXdhaXQgdGhpcy5nZW5lcmF0ZU1hbmlmZXN0KHsgaXRlbXM6IHR4TWFwLCBpbmRleEZpbGU6IG9wdHM/LmluZGV4RmlsZVJlbFBhdGggfSk7XG4gICAgICAgIGNvbnN0IG1hbmlmZXN0VHggPSB0aGlzLmlyeXMuYXJidW5kbGVzLmNyZWF0ZURhdGEoSlNPTi5zdHJpbmdpZnkobWFuaWZlc3QpLCBvcHRzPy5zZXBlcmF0ZU1hbmlmZXN0VHggPyB0aGlzLmlyeXMudG9rZW5Db25maWcuZ2V0U2lnbmVyKCkgOiBlcGhlbWVyYWxTaWduZXIsIHtcbiAgICAgICAgICAgIHRhZ3M6IFtcbiAgICAgICAgICAgICAgICB7IG5hbWU6IFwiVHlwZVwiLCB2YWx1ZTogXCJtYW5pZmVzdFwiIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiBcIkNvbnRlbnQtVHlwZVwiLCB2YWx1ZTogXCJhcHBsaWNhdGlvbi94LmFyd2VhdmUtbWFuaWZlc3QranNvblwiIH0sXG4gICAgICAgICAgICAgICAgLi4uKG9wdHM/Lm1hbmlmZXN0VGFncyA/PyBbXSksXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKG9wdHM/LnNlcGVyYXRlTWFuaWZlc3RUeCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgYXdhaXQgbWFuaWZlc3RUeC5zaWduKHRoaXMuaXJ5cy50b2tlbkNvbmZpZy5nZXRTaWduZXIoKSk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnVwbG9hZFRyYW5zYWN0aW9uKG1hbmlmZXN0VHgsIHsgLi4ub3B0cyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IG1hbmlmZXN0VHguc2lnbihlcGhlbWVyYWxTaWduZXIpO1xuICAgICAgICAgICAgdHhzLnB1c2gobWFuaWZlc3RUeCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdXBsb2FkIGJ1bmRsZVxuICAgICAgICBjb25zdCBidW5kbGVSZXMgPSBhd2FpdCB0aGlzLnVwbG9hZEJ1bmRsZSh0eHMsIHsgLi4ub3B0cyB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmJ1bmRsZVJlcy5kYXRhLFxuICAgICAgICAgICAgbWFuaWZlc3RJZDogbWFuaWZlc3RUeC5pZCxcbiAgICAgICAgICAgIG1hbmlmZXN0LFxuICAgICAgICAgICAgdGhyb3dhd2F5S2V5OiBidW5kbGVSZXMudGhyb3dhd2F5S2V5LFxuICAgICAgICAgICAgdGhyb3dhd2F5S2V5QWRkcmVzczogYnVuZGxlUmVzLnRocm93YXdheUtleUFkZHJlc3MsXG4gICAgICAgICAgICB0eHM6IGJ1bmRsZVJlcy50eHMsXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBsb2FkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/upload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/build/esm/web/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@irys/sdk/build/esm/web/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataItem: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.DataItem),\n/* harmony export */   bundleAndSignData: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.bundleAndSignData),\n/* harmony export */   createData: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.createData),\n/* harmony export */   deepHash: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.deepHash),\n/* harmony export */   getCryptoDriver: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.getCryptoDriver),\n/* harmony export */   stringToBuffer: () => (/* reexport safe */ arbundles_web__WEBPACK_IMPORTED_MODULE_0__.stringToBuffer)\n/* harmony export */ });\n/* harmony import */ var arbundles_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! arbundles/web */ \"(ssr)/./node_modules/arbundles/build/web/esm/webIndex.js\");\n\n\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL2J1aWxkL2VzbS93ZWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpSTtBQUNyQjtBQUM1RyIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9idWlsZC9lc20vd2ViL3V0aWxzLmpzP2YwMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRGF0YSwgRGF0YUl0ZW0sIGRlZXBIYXNoLCBzdHJpbmdUb0J1ZmZlciwgZ2V0Q3J5cHRvRHJpdmVyLCBidW5kbGVBbmRTaWduRGF0YSAvKiBBcndlYXZlICovIH0gZnJvbSBcImFyYnVuZGxlcy93ZWJcIjtcbmV4cG9ydCB7IGNyZWF0ZURhdGEsIERhdGFJdGVtLCBkZWVwSGFzaCwgc3RyaW5nVG9CdWZmZXIsIGdldENyeXB0b0RyaXZlciwgYnVuZGxlQW5kU2lnbkRhdGEgLyogQXJ3ZWF2ZSAqLyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/build/esm/web/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/graphql.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/graphql.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLQuery: () => (/* binding */ GraphQLQuery)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/async-retry/lib/index.js\");\n\n\n\n// GraphQL query builder class, uses overload signatures to modify class generics to provide concise typings for any configured query\n// this approach does mean (atm anyway) we need to explicitly coerce return types to the correct \"shape\", but as most of the methods are dynamic, this isn't much of an issue.\n// TODO: look into constructor facade pattern - https://gist.github.com/kourge/9715e0dd59c28e776fb598d407636106\n// TODO: look into https://discord.com/channels/508357248330760243/1122523559097548870\n/**\n * GraphQL query class - encapsulates all logic, types, and methods required to resolve queries\n */\nclass GraphQLQuery {\n    /* implements BuilderMethods<TVars, GraphQLQuery<TQuery, TVars, TReturn>> */\n    // query variables\n    queryVars = {};\n    // query fields\n    queryFields;\n    // query metadata\n    queryInfo;\n    // query string, payload sent to node\n    _query;\n    // url of the node to query\n    url;\n    // misc operational config\n    config;\n    // result tracker object, used to hold state for paging operations\n    resultTracker = { numPages: 0, numResults: 0, done: false };\n    constructor({ url, retryConfig, query, queryName, opts, }) {\n        if (!url)\n            throw new Error(\"URL is required\");\n        this.url = new URL(url);\n        this.config = {\n            first: false,\n            userProvided: false,\n            numPages: Infinity,\n            numResults: 1_000,\n            retryOpts: { retries: 3, maxTimeout: 2_000, minTimeout: 500, ...retryConfig },\n        };\n        if (query === false)\n            return this;\n        if (!query)\n            throw new Error(`Unable to find query with name ${queryName}`);\n        this.queryInfo = { ...query };\n        this.queryFields = query.query;\n        if (queryName.includes(\"arweave\") && this.url.host === \"node1.bundlr.network\")\n            this.url = new URL(\"https://arweave.net/graphql\");\n        if (!opts?.skipVariableSetters) {\n            // generate dynamic variable setter builder methods\n            for (const k of Object.keys(query.vars)) {\n                if (this[k])\n                    throw new Error(`Field setter ${k} has a key conflict - disable with opts.skipVariableSetters OR change the field name and add to query.remapVars`);\n                this[k] = (value) => {\n                    this.queryVars[k] = value;\n                    return this;\n                };\n            }\n        }\n        return this;\n    }\n    /**\n     * Builds a query from fields and variables, formatting it into a GQL compatible string.\n     * stores built query under `this.query` (protected) - accessible via `.toQuery`\n     * @returns `this` (chainable)\n     */\n    buildQuery() {\n        // @ts-expect-error overloading\n        if (this.config.userProvided)\n            return this; // don't build if it's a user provided query string\n        // builds query, reducing `this.queryFields` to a structured string with correct formatting\n        const toGQLString = (s) => JSON.stringify(s, (_, v) => {\n            if (v instanceof Array)\n                return v[0]; /* JSON.stringify(v); */\n            if (typeof v === \"object\")\n                return v;\n            if (v === false)\n                return undefined;\n            return \"\";\n        })\n            .replaceAll(`:`, \"\")\n            .replaceAll(`\"`, \"\")\n            .replaceAll(\",\", \"\\n          \");\n        const nodeQuery = toGQLString(this.queryFields);\n        // the hasNextPage field can vary\n        const pageInfo = toGQLString({ pageInfo: { [this.queryInfo.paging?.hasNextPage ?? \"hasNextPage\"]: undefined } }).slice(1, -1); // remove leading \"{\" and finishing \"}\"\n        const enumValues = this.queryInfo.enumValues;\n        // incorporates defaults from queryInfo\n        const vars = { ...this.queryInfo.vars, ...this.queryVars };\n        // remap keys - primarily done to prevent conflicts with builder methods.\n        // {limit: \"first\"} -> remaps `limit` variable to `first` variable\n        // {limit: (k,v) => [\"first\",v]} does the same thing\n        for (const [k, v] of Object.entries(this.queryInfo.remapVars ?? {})) {\n            if (vars?.[k] === undefined)\n                continue;\n            if (typeof v === \"function\") {\n                // provided mapper fn\n                const m = v(k, vars[k], vars);\n                if (!m)\n                    continue;\n                const [nk, nv] = m;\n                vars[nk] = nv;\n                if (nk === k)\n                    continue; // don't null out key if it's the same key\n            }\n            else {\n                vars[v] = vars[k];\n            }\n            vars[k] = undefined; // null keys are removed below\n        }\n        // reduces queryVars to inline vars, for convenience. (using separate means we have to annotate the GQL type)\n        const qVars = JSON.stringify(vars, function (k, v) {\n            // console.log(this, k, v);\n            if (v === undefined)\n                return v; // remove null keys\n            if (v instanceof Array)\n                return v; // don't break recursion\n            if (typeof v === \"object\")\n                return v; // ^\n            if (typeof v === \"number\")\n                return v; // numbers don't need string escaping\n            // TODO: improve this so it's context aware and doesn't alter anything unintentional\n            // can probably do by logging key names into array if value is an object, popping when object is a primitive\n            if (enumValues?.includes(k))\n                return v; // exclude enum variants from quote addition\n            return `'${v}'`; // this value needs to be quote padded\n        })\n            .replaceAll('\"', \"\") // remove double quotes,\n            .replaceAll(\"'\", '\"') // add needed double quotes\n            .slice(1, -1); // remove leading \"{\" and finishing \"}\"\n        if (!this?.queryInfo?.name)\n            throw new Error(`Query name is undefined!`);\n        // discriminate based on whether the query is pageable\n        const query = this.queryInfo.paging\n            ? `query {\n      ${this.queryInfo.name}(\n        ${qVars}\n      ) {\n        edges {\n          cursor\n          node ${nodeQuery}\n        }\n        ${pageInfo}\n      }\n    }`\n            : `query {\n    ${this.queryInfo.name}(\n      ${qVars}\n    ) \n    ${nodeQuery}\n  }`;\n        this._query = query;\n        // @ts-expect-error types - DO NOT SET RETURN TYPE TO `this` - TS will assume this should be an async function as `this` implements promise methods\n        return this;\n    }\n    /**\n     * Primary query execution method - builds & runs the query, returning result nodes and updating cursor info in queryVars\n     * @returns query result nodes\n     */\n    async getPage() {\n        if (this.resultTracker.done)\n            return undefined;\n        this.buildQuery();\n        if (!this._query)\n            throw new Error(`Unable to run undefined query`);\n        let res;\n        try {\n            res = await async_retry__WEBPACK_IMPORTED_MODULE_1__(async (_) => {\n                const r = await (0,axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.url.toString(), {\n                    method: \"post\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    data: { query: this._query },\n                });\n                if (r.data.errors)\n                    throw r;\n                return r;\n            }, this.config.retryOpts);\n        }\n        catch (e) {\n            throw new Error(`Error running query\\n ${this._query} - ${e.message ? e.message + \" -\" : \"\"} (${JSON.stringify(e?.data?.errors.map((e) => e.message) ?? e?.errors ?? e)}) `);\n        }\n        if (this.config.userProvided)\n            return this.trimmer([res.data.data].flat(20));\n        const data = res.data.data[this.queryInfo.name];\n        // if this is a pageable query if this is defined\n        if (this.queryInfo.paging) {\n            const nextCursor = data.pageInfo[this.queryInfo.paging.hasNextPage] ? data.edges.at(-1)[this.queryInfo.paging.cursor] : undefined;\n            this.queryVars.after = nextCursor;\n            return this.trimmer(data.edges.map((v) => v.node));\n        }\n        return this.trimmer([data].flat(20));\n    }\n    // tracks & controls output\n    trimmer(res) {\n        const numPages = ++this.resultTracker.numPages;\n        const numResults = (this.resultTracker.numResults += res.length);\n        if (res.length === 0) {\n            this.resultTracker.done = true;\n            return res;\n        }\n        if (numPages >= this?.config?.numPages)\n            this.resultTracker.done = true;\n        if (numResults >= this?.config?.numResults) {\n            this.resultTracker.done = true;\n            const delta = this.config.numResults - (numResults - res.length);\n            return res.slice(0, delta);\n        }\n        return res;\n    }\n    // return modifier functions\n    /**\n     * Get the first result from the query\n     * @returns the first result from the query - gets at maximum one page\n     */\n    async first() {\n        const res = await this.getPage();\n        return res?.at(0) ?? undefined;\n    }\n    /**\n     * Limiter on the number of pages a given query should resolve to\n     * @param numPages Maximum number of pages to return\n     * @returns this (chainable)\n     */\n    maxPages(numPages) {\n        this.config.numPages = numPages;\n        // @ts-expect-error types\n        return this;\n    }\n    /**\n     * Limiter on the maximum number of results a given query should resolve to\n     * @param numResults Maximum number of results to return\n     * @returns this (chainable)\n     */\n    limit(numResults) {\n        this.config.numResults = numResults;\n        // @ts-expect-error types\n        return this;\n    }\n    // return functions\n    /**\n     * Gets all results from the built query\n     * @returns array of results\n     */\n    async all() {\n        const results = [];\n        do {\n            const page = await this.getPage();\n            if (!page)\n                break;\n            // @ts-expect-error types\n            results.push(...page);\n        } while (this.queryVars.after);\n        return results;\n    }\n    /**\n     * Async generator, yields individual query result items\n     */\n    async *generator() {\n        do {\n            const res = await this.getPage();\n            if (!res)\n                return;\n            // @ts-expect-error constraints\n            for (const r of res)\n                yield r;\n        } while (this.queryVars.after); // getPage sets after to undefined if there are no more pages\n    }\n    /**\n     * Readable stream produced from `this.generator`\n     * @returns a readable instance, with the \"data\" event yielding individual results\n     */\n    stream() {\n        return stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(this.generator());\n    }\n    /**\n     * Provide a custom query string to resolve\n     * @param query Query string to use\n     * @returns result of the query - this method does not support paging or extraction\n     */\n    query(query) {\n        this._query = query;\n        this.config.userProvided = true;\n        // @ts-expect-error overloading\n        return this;\n    }\n    // TODO issue: this allows for additional (top level only?!) fields that aren't part of TQuery - for now we perform JS level shape checks and throw.\n    /**\n     * Set the fields you want the query to return\n     * @param fields - Object structured like a graphql query body, truthy values including, falsy excluding\n     * @param skipFieldCheck - whether to skip JS level fields object shape validation\n     * @returns `this` (chainable)\n     */\n    fields(fields, skipFieldCheck = false) {\n        // validate provided fields against default fields\n        // default/allowed fields is under `this.queryFields`\n        // user selected fields are under `fields`\n        // path, allowed, user provided - it's flat so we don't need super precise comparision\n        const recursiveValidate = (p, a, b) => {\n            for (const k of Object.keys(b)) {\n                let ak = a[k];\n                if (Array.isArray(ak))\n                    ak = ak[0];\n                const bk = b[k];\n                if (ak === undefined)\n                    throw new Error(`Illegal field ${p}${k}`);\n                if (typeof bk === \"object\")\n                    recursiveValidate(p + k + \".\", ak, bk);\n            }\n        };\n        if (!skipFieldCheck)\n            recursiveValidate(\"\", this.queryFields, fields);\n        this.queryFields = fields;\n        // @ts-expect-error TODO: fix this\n        return this;\n    }\n    /**\n     * Sets variables/filters using an object\n     * @param variables variable object to set\n     * @returns this (chainable)\n     */\n    variables(variables) {\n        this.queryVars = { ...this.queryVars, ...variables };\n        // @ts-expect-error - dynamic builder props\n        return this;\n    }\n    /**\n     * Builds the current query and returns a ready to POST query string\n     * @returns string form of the current query\n     */\n    async toQuery() {\n        await this.buildQuery();\n        return this._query;\n    }\n    // instance generic type accessors\n    /**\n     * Dummy method to access the internal `TReturn` generic type\n     * @returns \"tReturn\"\n     */\n    tReturn() {\n        return \"tReturn\";\n    }\n    /**\n     * Dummy method to access the internal `TQuery` generic type\n     * @returns \"tQuery\"\n     */\n    tQuery() {\n        return \"tQuery\";\n    }\n    /**\n     * Dummy method to access the internal `TVars` generic type\n     * @returns \"tVars\"\n     */\n    tVars() {\n        return \"tVars\";\n    }\n    // Promise contract functions, so users can `await` a GraphQLQuery instance to resolve the built query.\n    // very cool, thanks Knex.\n    /**\n     * Resolves `this` by getting all results for the query (including paging)\n     * @param onFulfilled - optional onFulfilled callback\n     * @returns - all results for built query\n     */\n    async then(onFulfilled, onRejected) {\n        const res = this.all();\n        return res.then(onFulfilled, onRejected);\n    }\n    async catch(onReject) {\n        return this.then().catch(onReject);\n    }\n    async finally(onFinally) {\n        return this.then().finally(onFinally);\n    }\n}\n// this was definitely not over engineered 👀\n//# sourceMappingURL=graphql.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/graphql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_0__.Query),\n/* harmony export */   \"default\": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_0__.Query)\n/* harmony export */ });\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/query.js\");\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1DO0FBQ1c7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9pbmRleC5qcz9kYTIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFF1ZXJ5IH0gZnJvbSBcIi4vcXVlcnkuanNcIjtcbmV4cG9ydCB7IFF1ZXJ5IGFzIGRlZmF1bHQgfSBmcm9tIFwiLi9xdWVyeS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/block.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/block.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveBlockQuery: () => (/* binding */ arweaveBlockQuery),\n/* harmony export */   block: () => (/* binding */ block),\n/* harmony export */   blockVars: () => (/* binding */ blockVars)\n/* harmony export */ });\nconst block = {\n    id: \"\",\n    timestamp: 0,\n    height: \"\",\n    previous: \"\",\n};\n// default variables\nconst blockVars = {\n    id: undefined,\n};\nconst arweaveBlockQuery = {\n    name: \"block\",\n    query: block,\n    vars: blockVars,\n};\n//# sourceMappingURL=block.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL2Jsb2NrLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWV0YXBsZXgtdW1pLW5leHQtanMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL2Jsb2NrLmpzPzI2YmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJsb2NrID0ge1xuICAgIGlkOiBcIlwiLFxuICAgIHRpbWVzdGFtcDogMCxcbiAgICBoZWlnaHQ6IFwiXCIsXG4gICAgcHJldmlvdXM6IFwiXCIsXG59O1xuLy8gZGVmYXVsdCB2YXJpYWJsZXNcbmV4cG9ydCBjb25zdCBibG9ja1ZhcnMgPSB7XG4gICAgaWQ6IHVuZGVmaW5lZCxcbn07XG5leHBvcnQgY29uc3QgYXJ3ZWF2ZUJsb2NrUXVlcnkgPSB7XG4gICAgbmFtZTogXCJibG9ja1wiLFxuICAgIHF1ZXJ5OiBibG9jayxcbiAgICB2YXJzOiBibG9ja1ZhcnMsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmxvY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/blocks.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/blocks.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveBlocksQuery: () => (/* binding */ arweaveBlocksQuery),\n/* harmony export */   blocksVars: () => (/* binding */ blocksVars)\n/* harmony export */ });\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/block.js\");\n\n// default variables\nconst blocksVars = {\n    ids: undefined,\n    // height: undefined,\n    minHeight: undefined,\n    maxHeight: undefined,\n    pageSize: 10,\n    after: undefined,\n    sort: \"DESC\", // REMAPPED\n};\nconst arweaveBlocksQuery = {\n    name: \"blocks\",\n    query: _block_js__WEBPACK_IMPORTED_MODULE_0__.block,\n    vars: blocksVars,\n    enumValues: [\"sort\"],\n    remapVars: {\n        pageSize: \"first\",\n        // replace ASC/DESC to HEIGHT prefixed versions\n        sort: (k, v) => [k, v === \"ASC\" ? \"HEIGHT_ASC\" : \"HEIGHT_DESC\"],\n        minHeight: (_k, v, vars) => {\n            vars.height = { ...vars.height, min: v };\n            vars.minHeight = undefined;\n        },\n        maxHeight: (_k, v, vars) => {\n            vars.height = { ...vars.height, max: v };\n            vars.maxHeight = undefined;\n        },\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\",\n    },\n};\n//# sourceMappingURL=blocks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL2Jsb2Nrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDbkM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyw0Q0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVDtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvYmxvY2tzLmpzPzJlNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmxvY2sgfSBmcm9tIFwiLi9ibG9jay5qc1wiO1xuLy8gZGVmYXVsdCB2YXJpYWJsZXNcbmV4cG9ydCBjb25zdCBibG9ja3NWYXJzID0ge1xuICAgIGlkczogdW5kZWZpbmVkLFxuICAgIC8vIGhlaWdodDogdW5kZWZpbmVkLFxuICAgIG1pbkhlaWdodDogdW5kZWZpbmVkLFxuICAgIG1heEhlaWdodDogdW5kZWZpbmVkLFxuICAgIHBhZ2VTaXplOiAxMCxcbiAgICBhZnRlcjogdW5kZWZpbmVkLFxuICAgIHNvcnQ6IFwiREVTQ1wiLCAvLyBSRU1BUFBFRFxufTtcbmV4cG9ydCBjb25zdCBhcndlYXZlQmxvY2tzUXVlcnkgPSB7XG4gICAgbmFtZTogXCJibG9ja3NcIixcbiAgICBxdWVyeTogYmxvY2ssXG4gICAgdmFyczogYmxvY2tzVmFycyxcbiAgICBlbnVtVmFsdWVzOiBbXCJzb3J0XCJdLFxuICAgIHJlbWFwVmFyczoge1xuICAgICAgICBwYWdlU2l6ZTogXCJmaXJzdFwiLFxuICAgICAgICAvLyByZXBsYWNlIEFTQy9ERVNDIHRvIEhFSUdIVCBwcmVmaXhlZCB2ZXJzaW9uc1xuICAgICAgICBzb3J0OiAoaywgdikgPT4gW2ssIHYgPT09IFwiQVNDXCIgPyBcIkhFSUdIVF9BU0NcIiA6IFwiSEVJR0hUX0RFU0NcIl0sXG4gICAgICAgIG1pbkhlaWdodDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLmhlaWdodCA9IHsgLi4udmFycy5oZWlnaHQsIG1pbjogdiB9O1xuICAgICAgICAgICAgdmFycy5taW5IZWlnaHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIG1heEhlaWdodDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLmhlaWdodCA9IHsgLi4udmFycy5oZWlnaHQsIG1heDogdiB9O1xuICAgICAgICAgICAgdmFycy5tYXhIZWlnaHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBwYWdpbmc6IHtcbiAgICAgICAgaGFzTmV4dFBhZ2U6IFwiaGFzTmV4dFBhZ2VcIixcbiAgICAgICAgY3Vyc29yOiBcImN1cnNvclwiLFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmxvY2tzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/blocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transaction.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transaction.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveTransactionQuery: () => (/* binding */ arweaveTransactionQuery),\n/* harmony export */   transaction: () => (/* binding */ transaction),\n/* harmony export */   transactionVars: () => (/* binding */ transactionVars)\n/* harmony export */ });\n// derive type from minimal object, use this object to validate structure in code.\nconst transaction = {\n    id: \"\",\n    anchor: \"\",\n    signature: \"\",\n    recipient: \"\",\n    owner: {\n        address: \"\",\n        key: \"\",\n    },\n    fee: {\n        winston: \"\",\n        ar: \"\",\n    },\n    quantity: {\n        winston: \"\",\n        ar: \"\",\n    },\n    data: {\n        size: \"\",\n        type: \"\",\n    },\n    tags: [{ name: \"\", value: \"\" }],\n    block: {\n        id: \"\",\n        timestamp: 0,\n        height: 0,\n        previous: \"\",\n    },\n    bundledIn: {\n        id: \"\",\n    },\n};\n// default variables\nconst transactionVars = {\n    id: undefined,\n};\nconst arweaveTransactionQuery = {\n    name: \"transaction\",\n    query: transaction,\n    vars: transactionVars,\n};\n//# sourceMappingURL=transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhLHFCQUFxQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9ub2RlX21vZHVsZXMvQGlyeXMvcXVlcnkvYnVpbGQvZXNtL3F1ZXJpZXMvYXJ3ZWF2ZS90cmFuc2FjdGlvbi5qcz8yNGJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlcml2ZSB0eXBlIGZyb20gbWluaW1hbCBvYmplY3QsIHVzZSB0aGlzIG9iamVjdCB0byB2YWxpZGF0ZSBzdHJ1Y3R1cmUgaW4gY29kZS5cbmV4cG9ydCBjb25zdCB0cmFuc2FjdGlvbiA9IHtcbiAgICBpZDogXCJcIixcbiAgICBhbmNob3I6IFwiXCIsXG4gICAgc2lnbmF0dXJlOiBcIlwiLFxuICAgIHJlY2lwaWVudDogXCJcIixcbiAgICBvd25lcjoge1xuICAgICAgICBhZGRyZXNzOiBcIlwiLFxuICAgICAgICBrZXk6IFwiXCIsXG4gICAgfSxcbiAgICBmZWU6IHtcbiAgICAgICAgd2luc3RvbjogXCJcIixcbiAgICAgICAgYXI6IFwiXCIsXG4gICAgfSxcbiAgICBxdWFudGl0eToge1xuICAgICAgICB3aW5zdG9uOiBcIlwiLFxuICAgICAgICBhcjogXCJcIixcbiAgICB9LFxuICAgIGRhdGE6IHtcbiAgICAgICAgc2l6ZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJcIixcbiAgICB9LFxuICAgIHRhZ3M6IFt7IG5hbWU6IFwiXCIsIHZhbHVlOiBcIlwiIH1dLFxuICAgIGJsb2NrOiB7XG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICB0aW1lc3RhbXA6IDAsXG4gICAgICAgIGhlaWdodDogMCxcbiAgICAgICAgcHJldmlvdXM6IFwiXCIsXG4gICAgfSxcbiAgICBidW5kbGVkSW46IHtcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgfSxcbn07XG4vLyBkZWZhdWx0IHZhcmlhYmxlc1xuZXhwb3J0IGNvbnN0IHRyYW5zYWN0aW9uVmFycyA9IHtcbiAgICBpZDogdW5kZWZpbmVkLFxufTtcbmV4cG9ydCBjb25zdCBhcndlYXZlVHJhbnNhY3Rpb25RdWVyeSA9IHtcbiAgICBuYW1lOiBcInRyYW5zYWN0aW9uXCIsXG4gICAgcXVlcnk6IHRyYW5zYWN0aW9uLFxuICAgIHZhcnM6IHRyYW5zYWN0aW9uVmFycyxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transactions.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transactions.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveTransactionsQuery: () => (/* binding */ arweaveTransactionsQuery),\n/* harmony export */   transactionsVars: () => (/* binding */ transactionsVars)\n/* harmony export */ });\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transaction.js\");\n\n// default variables\nconst transactionsVars = {\n    ids: undefined,\n    from: undefined,\n    to: undefined,\n    tags: undefined,\n    bundledIn: undefined,\n    // block: undefined,\n    minHeight: undefined,\n    maxHeight: undefined,\n    pageSize: 10,\n    after: undefined,\n    sort: \"DESC\", // REMAPPED\n};\nconst arweaveTransactionsQuery = {\n    name: \"transactions\",\n    query: _transaction_js__WEBPACK_IMPORTED_MODULE_0__.transaction,\n    enumValues: [\"sort\"],\n    vars: transactionsVars,\n    remapVars: {\n        pageSize: \"first\",\n        from: \"owners\",\n        to: \"recipients\",\n        // replace ASC/DESC to HEIGHT prefixed versions\n        sort: (k, v) => [k, v === \"ASC\" ? \"HEIGHT_ASC\" : \"HEIGHT_DESC\"],\n        minHeight: (_k, v, vars) => {\n            vars.block = { ...vars.block, min: v };\n            vars.minHeight = undefined;\n        },\n        maxHeight: (_k, v, vars) => {\n            vars.block = { ...vars.block, max: v };\n            vars.maxHeight = undefined;\n        },\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\",\n    },\n};\n//# sourceMappingURL=transactions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL3RyYW5zYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDL0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxXQUFXLHdEQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLFNBQVM7QUFDVDtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvdHJhbnNhY3Rpb25zLmpzPzBhMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJhbnNhY3Rpb24gfSBmcm9tIFwiLi90cmFuc2FjdGlvbi5qc1wiO1xuLy8gZGVmYXVsdCB2YXJpYWJsZXNcbmV4cG9ydCBjb25zdCB0cmFuc2FjdGlvbnNWYXJzID0ge1xuICAgIGlkczogdW5kZWZpbmVkLFxuICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB0bzogdW5kZWZpbmVkLFxuICAgIHRhZ3M6IHVuZGVmaW5lZCxcbiAgICBidW5kbGVkSW46IHVuZGVmaW5lZCxcbiAgICAvLyBibG9jazogdW5kZWZpbmVkLFxuICAgIG1pbkhlaWdodDogdW5kZWZpbmVkLFxuICAgIG1heEhlaWdodDogdW5kZWZpbmVkLFxuICAgIHBhZ2VTaXplOiAxMCxcbiAgICBhZnRlcjogdW5kZWZpbmVkLFxuICAgIHNvcnQ6IFwiREVTQ1wiLCAvLyBSRU1BUFBFRFxufTtcbmV4cG9ydCBjb25zdCBhcndlYXZlVHJhbnNhY3Rpb25zUXVlcnkgPSB7XG4gICAgbmFtZTogXCJ0cmFuc2FjdGlvbnNcIixcbiAgICBxdWVyeTogdHJhbnNhY3Rpb24sXG4gICAgZW51bVZhbHVlczogW1wic29ydFwiXSxcbiAgICB2YXJzOiB0cmFuc2FjdGlvbnNWYXJzLFxuICAgIHJlbWFwVmFyczoge1xuICAgICAgICBwYWdlU2l6ZTogXCJmaXJzdFwiLFxuICAgICAgICBmcm9tOiBcIm93bmVyc1wiLFxuICAgICAgICB0bzogXCJyZWNpcGllbnRzXCIsXG4gICAgICAgIC8vIHJlcGxhY2UgQVNDL0RFU0MgdG8gSEVJR0hUIHByZWZpeGVkIHZlcnNpb25zXG4gICAgICAgIHNvcnQ6IChrLCB2KSA9PiBbaywgdiA9PT0gXCJBU0NcIiA/IFwiSEVJR0hUX0FTQ1wiIDogXCJIRUlHSFRfREVTQ1wiXSxcbiAgICAgICAgbWluSGVpZ2h0OiAoX2ssIHYsIHZhcnMpID0+IHtcbiAgICAgICAgICAgIHZhcnMuYmxvY2sgPSB7IC4uLnZhcnMuYmxvY2ssIG1pbjogdiB9O1xuICAgICAgICAgICAgdmFycy5taW5IZWlnaHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIG1heEhlaWdodDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLmJsb2NrID0geyAuLi52YXJzLmJsb2NrLCBtYXg6IHYgfTtcbiAgICAgICAgICAgIHZhcnMubWF4SGVpZ2h0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgcGFnaW5nOiB7XG4gICAgICAgIGhhc05leHRQYWdlOiBcImhhc05leHRQYWdlXCIsXG4gICAgICAgIGN1cnNvcjogXCJjdXJzb3JcIixcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queries: () => (/* binding */ queries)\n/* harmony export */ });\n/* harmony import */ var _arweave_blocks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arweave/blocks.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/blocks.js\");\n/* harmony import */ var _arweave_transactions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arweave/transactions.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/arweave/transactions.js\");\n/* harmony import */ var _irys_transactions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./irys/transactions.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/irys/transactions.js\");\n\n\n\n// import { arweaveTransactionQuery } from \"./arweave/transaction.js\";\n// import { arweaveBlockQuery } from \"./arweave/block.js\";\n// map query names to queries\nconst queries = {\n    \"irys:transactions\": _irys_transactions_js__WEBPACK_IMPORTED_MODULE_2__.irysTransactionsQuery,\n    \"arweave:transactions\": _arweave_transactions_js__WEBPACK_IMPORTED_MODULE_1__.arweaveTransactionsQuery,\n    \"arweave:blocks\": _arweave_blocks_js__WEBPACK_IMPORTED_MODULE_0__.arweaveBlocksQuery,\n    // \"arweave:transaction\": arweaveTransactionQuery,\n    // \"arweave:block\": arweaveBlockQuery,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ1k7QUFDTjtBQUMvRCxZQUFZLDBCQUEwQjtBQUN0QyxZQUFZLG9CQUFvQjtBQUNoQztBQUNPO0FBQ1AseUJBQXlCLHdFQUFxQjtBQUM5Qyw0QkFBNEIsOEVBQXdCO0FBQ3BELHNCQUFzQixrRUFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2luZGV4LmpzPzlkNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXJ3ZWF2ZUJsb2Nrc1F1ZXJ5IH0gZnJvbSBcIi4vYXJ3ZWF2ZS9ibG9ja3MuanNcIjtcbmltcG9ydCB7IGFyd2VhdmVUcmFuc2FjdGlvbnNRdWVyeSB9IGZyb20gXCIuL2Fyd2VhdmUvdHJhbnNhY3Rpb25zLmpzXCI7XG5pbXBvcnQgeyBpcnlzVHJhbnNhY3Rpb25zUXVlcnkgfSBmcm9tIFwiLi9pcnlzL3RyYW5zYWN0aW9ucy5qc1wiO1xuLy8gaW1wb3J0IHsgYXJ3ZWF2ZVRyYW5zYWN0aW9uUXVlcnkgfSBmcm9tIFwiLi9hcndlYXZlL3RyYW5zYWN0aW9uLmpzXCI7XG4vLyBpbXBvcnQgeyBhcndlYXZlQmxvY2tRdWVyeSB9IGZyb20gXCIuL2Fyd2VhdmUvYmxvY2suanNcIjtcbi8vIG1hcCBxdWVyeSBuYW1lcyB0byBxdWVyaWVzXG5leHBvcnQgY29uc3QgcXVlcmllcyA9IHtcbiAgICBcImlyeXM6dHJhbnNhY3Rpb25zXCI6IGlyeXNUcmFuc2FjdGlvbnNRdWVyeSxcbiAgICBcImFyd2VhdmU6dHJhbnNhY3Rpb25zXCI6IGFyd2VhdmVUcmFuc2FjdGlvbnNRdWVyeSxcbiAgICBcImFyd2VhdmU6YmxvY2tzXCI6IGFyd2VhdmVCbG9ja3NRdWVyeSxcbiAgICAvLyBcImFyd2VhdmU6dHJhbnNhY3Rpb25cIjogYXJ3ZWF2ZVRyYW5zYWN0aW9uUXVlcnksXG4gICAgLy8gXCJhcndlYXZlOmJsb2NrXCI6IGFyd2VhdmVCbG9ja1F1ZXJ5LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/irys/transactions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/irys/transactions.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   irysTransactionsQuery: () => (/* binding */ irysTransactionsQuery),\n/* harmony export */   transactionVars: () => (/* binding */ transactionVars),\n/* harmony export */   transactions: () => (/* binding */ transactions)\n/* harmony export */ });\n// derive type from minimal object, use this object to validate structure in code.\nconst transactions = {\n    id: \"\",\n    receipt: {\n        deadlineHeight: 0,\n        signature: \"\",\n        timestamp: 0,\n        version: \"\",\n    },\n    tags: [{ name: \"\", value: \"\" }],\n    address: \"\",\n    token: \"\",\n    signature: \"\",\n    timestamp: 0,\n};\n// default variables\nconst transactionVars = {\n    ids: undefined,\n    after: undefined,\n    token: undefined,\n    from: undefined,\n    pageSize: 100,\n    sort: \"ASC\",\n    // hasTags: undefined,\n    tags: undefined,\n    fromTimestamp: undefined,\n    toTimestamp: undefined,\n};\nconst irysTransactionsQuery = {\n    name: \"transactions\",\n    query: transactions,\n    enumValues: [\"order\"],\n    vars: transactionVars,\n    remapVars: {\n        pageSize: \"first\",\n        sort: \"order\",\n        from: \"owners\",\n        fromTimestamp: (_k, v, vars) => {\n            vars.timestamp = { ...vars.timestamp, from: new Date(v).getTime() };\n            vars.fromTimestamp = undefined;\n        },\n        toTimestamp: (_k, v, vars) => {\n            vars.timestamp = { ...vars.timestamp, to: new Date(v).getTime() };\n            vars.toTimestamp = undefined;\n        },\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\",\n    },\n};\n//# sourceMappingURL=transactions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9pcnlzL3RyYW5zYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21ldGFwbGV4LXVtaS1uZXh0LWpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BpcnlzL3Nkay9ub2RlX21vZHVsZXMvQGlyeXMvcXVlcnkvYnVpbGQvZXNtL3F1ZXJpZXMvaXJ5cy90cmFuc2FjdGlvbnMuanM/YzUwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZXJpdmUgdHlwZSBmcm9tIG1pbmltYWwgb2JqZWN0LCB1c2UgdGhpcyBvYmplY3QgdG8gdmFsaWRhdGUgc3RydWN0dXJlIGluIGNvZGUuXG5leHBvcnQgY29uc3QgdHJhbnNhY3Rpb25zID0ge1xuICAgIGlkOiBcIlwiLFxuICAgIHJlY2VpcHQ6IHtcbiAgICAgICAgZGVhZGxpbmVIZWlnaHQ6IDAsXG4gICAgICAgIHNpZ25hdHVyZTogXCJcIixcbiAgICAgICAgdGltZXN0YW1wOiAwLFxuICAgICAgICB2ZXJzaW9uOiBcIlwiLFxuICAgIH0sXG4gICAgdGFnczogW3sgbmFtZTogXCJcIiwgdmFsdWU6IFwiXCIgfV0sXG4gICAgYWRkcmVzczogXCJcIixcbiAgICB0b2tlbjogXCJcIixcbiAgICBzaWduYXR1cmU6IFwiXCIsXG4gICAgdGltZXN0YW1wOiAwLFxufTtcbi8vIGRlZmF1bHQgdmFyaWFibGVzXG5leHBvcnQgY29uc3QgdHJhbnNhY3Rpb25WYXJzID0ge1xuICAgIGlkczogdW5kZWZpbmVkLFxuICAgIGFmdGVyOiB1bmRlZmluZWQsXG4gICAgdG9rZW46IHVuZGVmaW5lZCxcbiAgICBmcm9tOiB1bmRlZmluZWQsXG4gICAgcGFnZVNpemU6IDEwMCxcbiAgICBzb3J0OiBcIkFTQ1wiLFxuICAgIC8vIGhhc1RhZ3M6IHVuZGVmaW5lZCxcbiAgICB0YWdzOiB1bmRlZmluZWQsXG4gICAgZnJvbVRpbWVzdGFtcDogdW5kZWZpbmVkLFxuICAgIHRvVGltZXN0YW1wOiB1bmRlZmluZWQsXG59O1xuZXhwb3J0IGNvbnN0IGlyeXNUcmFuc2FjdGlvbnNRdWVyeSA9IHtcbiAgICBuYW1lOiBcInRyYW5zYWN0aW9uc1wiLFxuICAgIHF1ZXJ5OiB0cmFuc2FjdGlvbnMsXG4gICAgZW51bVZhbHVlczogW1wib3JkZXJcIl0sXG4gICAgdmFyczogdHJhbnNhY3Rpb25WYXJzLFxuICAgIHJlbWFwVmFyczoge1xuICAgICAgICBwYWdlU2l6ZTogXCJmaXJzdFwiLFxuICAgICAgICBzb3J0OiBcIm9yZGVyXCIsXG4gICAgICAgIGZyb206IFwib3duZXJzXCIsXG4gICAgICAgIGZyb21UaW1lc3RhbXA6IChfaywgdiwgdmFycykgPT4ge1xuICAgICAgICAgICAgdmFycy50aW1lc3RhbXAgPSB7IC4uLnZhcnMudGltZXN0YW1wLCBmcm9tOiBuZXcgRGF0ZSh2KS5nZXRUaW1lKCkgfTtcbiAgICAgICAgICAgIHZhcnMuZnJvbVRpbWVzdGFtcCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgdG9UaW1lc3RhbXA6IChfaywgdiwgdmFycykgPT4ge1xuICAgICAgICAgICAgdmFycy50aW1lc3RhbXAgPSB7IC4uLnZhcnMudGltZXN0YW1wLCB0bzogbmV3IERhdGUodikuZ2V0VGltZSgpIH07XG4gICAgICAgICAgICB2YXJzLnRvVGltZXN0YW1wID0gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgcGFnaW5nOiB7XG4gICAgICAgIGhhc05leHRQYWdlOiBcImhhc05leHRQYWdlXCIsXG4gICAgICAgIGN1cnNvcjogXCJjdXJzb3JcIixcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/irys/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/query.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/query.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _graphql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graphql.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/graphql.js\");\n/* harmony import */ var _queries_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queries/index.js */ \"(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/queries/index.js\");\n\n\n// import type { ArweaveBlock, ArweaveBlockVars } from \"./queries/arweave/block.js\";\n// import type { ArweaveTransaction, ArweaveTransactionVars } from \"./queries/arweave/transaction.js\";\nclass Query {\n    opts;\n    constructor(opts = { url: new URL(\"https://node1.bundlr.network/graphql\") }) {\n        if (!opts.url)\n            throw new Error(\"URL is required\");\n        opts.url = new URL(opts.url);\n        this.opts = opts;\n    }\n    search(queryName, opts) {\n        // const queryInstance =\n        const query = opts?.query ?? _queries_index_js__WEBPACK_IMPORTED_MODULE_1__.queries[queryName];\n        const queryInstance = new _graphql_js__WEBPACK_IMPORTED_MODULE_0__.GraphQLQuery({ ...this.opts, query, queryName });\n        // @ts-expect-error overloading\n        return queryInstance;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Query);\n//# sourceMappingURL=query.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGlyeXMvc2RrL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUNDO0FBQzdDLGlCQUFpQixpQ0FBaUM7QUFDbEQsaUJBQWlCLDZDQUE2QztBQUN2RDtBQUNQO0FBQ0EseUJBQXlCLHNEQUFzRDtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxzREFBTztBQUM1QyxrQ0FBa0MscURBQVksR0FBRyxnQ0FBZ0M7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxLQUFLLEVBQUM7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhcGxleC11bWktbmV4dC1qcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AaXJ5cy9zZGsvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyeS5qcz9iYjMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxRdWVyeSB9IGZyb20gXCIuL2dyYXBocWwuanNcIjtcbmltcG9ydCB7IHF1ZXJpZXMgfSBmcm9tIFwiLi9xdWVyaWVzL2luZGV4LmpzXCI7XG4vLyBpbXBvcnQgdHlwZSB7IEFyd2VhdmVCbG9jaywgQXJ3ZWF2ZUJsb2NrVmFycyB9IGZyb20gXCIuL3F1ZXJpZXMvYXJ3ZWF2ZS9ibG9jay5qc1wiO1xuLy8gaW1wb3J0IHR5cGUgeyBBcndlYXZlVHJhbnNhY3Rpb24sIEFyd2VhdmVUcmFuc2FjdGlvblZhcnMgfSBmcm9tIFwiLi9xdWVyaWVzL2Fyd2VhdmUvdHJhbnNhY3Rpb24uanNcIjtcbmV4cG9ydCBjbGFzcyBRdWVyeSB7XG4gICAgb3B0cztcbiAgICBjb25zdHJ1Y3RvcihvcHRzID0geyB1cmw6IG5ldyBVUkwoXCJodHRwczovL25vZGUxLmJ1bmRsci5uZXR3b3JrL2dyYXBocWxcIikgfSkge1xuICAgICAgICBpZiAoIW9wdHMudXJsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVVJMIGlzIHJlcXVpcmVkXCIpO1xuICAgICAgICBvcHRzLnVybCA9IG5ldyBVUkwob3B0cy51cmwpO1xuICAgICAgICB0aGlzLm9wdHMgPSBvcHRzO1xuICAgIH1cbiAgICBzZWFyY2gocXVlcnlOYW1lLCBvcHRzKSB7XG4gICAgICAgIC8vIGNvbnN0IHF1ZXJ5SW5zdGFuY2UgPVxuICAgICAgICBjb25zdCBxdWVyeSA9IG9wdHM/LnF1ZXJ5ID8/IHF1ZXJpZXNbcXVlcnlOYW1lXTtcbiAgICAgICAgY29uc3QgcXVlcnlJbnN0YW5jZSA9IG5ldyBHcmFwaFFMUXVlcnkoeyAuLi50aGlzLm9wdHMsIHF1ZXJ5LCBxdWVyeU5hbWUgfSk7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3Igb3ZlcmxvYWRpbmdcbiAgICAgICAgcmV0dXJuIHF1ZXJ5SW5zdGFuY2U7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUXVlcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@irys/sdk/node_modules/@irys/query/build/esm/query.js\n");

/***/ })

};
;